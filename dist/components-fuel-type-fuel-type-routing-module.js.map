{"version":3,"sources":["webpack:///./src/app/components/fuel-type/fuel-type-form/fuel-type-form.component.html","webpack:///./src/app/components/fuel-type/fuel-type-form/fuel-type-form.component.scss","webpack:///./src/app/components/fuel-type/fuel-type-form/fuel-type-form.component.ts","webpack:///./src/app/components/fuel-type/fuel-type-list/fuel-type-list.component.html","webpack:///./src/app/components/fuel-type/fuel-type-list/fuel-type-list.component.scss","webpack:///./src/app/components/fuel-type/fuel-type-list/fuel-type-list.component.ts","webpack:///./src/app/components/fuel-type/fuel-type-routing.module.ts","webpack:///./src/app/components/fuel-type/fuel-type.component.html","webpack:///./src/app/components/fuel-type/fuel-type.component.scss","webpack:///./src/app/components/fuel-type/fuel-type.component.ts"],"names":[],"mappings":"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","file":"components-fuel-type-fuel-type-routing-module.js","sourcesContent":["module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"fuelTypeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputFuelTypeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputFuelTypeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"fuelTypeForm.controls.name.touched && fuelTypeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"fuelTypeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"fuelTypeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"fuelTypeForm.controls.name.value\\\" (isDelete)=\\\"deleteFuelType($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { FuelType } from 'app/data-model';\nimport { FuelTypeService } from 'app/services/fuel-type/fuel-type.service';\n\n@Component({\n  selector: 'app-fuelType-form',\n  templateUrl: './fuel-type-form.component.html',\n  styleUrls: ['./fuel-type-form.component.scss']\n})\nexport class FuelTypeFormComponent implements OnInit {\n  title : string = \"Create Fuel Type\";\n  module :string=\"fuel type\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  fuelTypeForm: FormGroup;\n  selectedFuelType_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private fuelTypeService:FuelTypeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.fuelTypeForm = this.fb.group({\n      fuel_type_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.fuelTypeForm.valid) {\n      if(this.fuelTypeService.selectedMode == 'Create'){\n        this.createFuelType();\n      }\n      else if (this.fuelTypeService.selectedMode == 'Edit'){\n        this.updateFuelType();\n      }\n    }\n  }\n\n  getFuelTypeById(fuelType_id:number){\n    this.fuelTypeService.getFuelTypeById(fuelType_id)\n    .subscribe(\n        res => {\n        this.fuelTypeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createFuelType(){\n    this.fuelTypeService.createFuelType(this.fuelTypeForm.value)\n    .subscribe(\n      res => {\n        this.fuelTypeService.refreshList.next(true);\n        this.fuelTypeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateFuelType(){\n    this.fuelTypeService.updateFuelType(this.fuelTypeForm.value)\n    .subscribe(\n      res => {\n          this.fuelTypeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteFuelType(event){\n    if(this.selectedFuelType_Id)\n    {\n      this.fuelTypeService.deleteFuelType(this.selectedFuelType_Id).subscribe(\n        res => {\n          this.fuelTypeService.refreshList.next(true);\n          this.router.navigate(['/fuelType/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.fuelTypeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.fuelTypeService.selectedFuelTypeId\n    .subscribe(\n      res => {\n        this.selectedFuelType_Id = res;\n        if(this.fuelTypeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Fuel Type\";\n          this.mode = \"delete\";\n          this.getFuelTypeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchFuelTypes($event)\\\" (isCreate)=\\\"createFuelType('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let fuelType of results$ | async'>\\n          <th scope=\\\"row\\\">{{fuelType.fuel_type_id}}</th>\\n          <td>{{fuelType.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectFuelType(fuelType.fuel_type_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { FuelType } from 'app/data-model';\nimport { FuelTypeService } from 'app/services/fuel-type/fuel-type.service';\n\n@Component({\n  selector: 'app-fuelType-list',\n  templateUrl: './fuel-type-list.component.html',\n  styleUrls: ['./fuel-type-list.component.scss']\n})\nexport class FuelTypeListComponent implements OnInit {\n  @Input()\n  results$: Observable<FuelType>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private fuelTypeService:FuelTypeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/fuelType/add']);\n  }\n\n  searchFuelTypes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createFuelType(mode:any){\n    this.fuelTypeService.selectedMode = mode;\n    this.router.navigate(['/fuelType/add']);\n  }\n\n  //On Click of the Edit Button\n  selectFuelType(fuelType_id:number, mode:any){\n    this.fuelTypeService.selectedMode = mode;\n    this.router.navigate(['/fuelType/edit']);\n    setTimeout(() => {\n      this.fuelTypeService.selectedFuelTypeId.next(fuelType_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FuelTypeComponent} from './fuel-type.component';\nimport { FuelTypeListComponent} from './fuel-type-list/fuel-type-list.component';\nimport { FuelTypeFormComponent} from './fuel-type-form/fuel-type-form.component';\n\nconst fuelTypeRoutes: Routes = [\n  {\n    path: 'fuelType',\n    component: FuelTypeComponent,\n    children: [\n        {path: 'list',component: FuelTypeListComponent},\n        {path: 'add', component: FuelTypeFormComponent},\n        {path: 'edit', component: FuelTypeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(fuelTypeRoutes)],\n  exports: [RouterModule]\n})\n export class FuelTypeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-fuelType-list (searchTerm)=\\\"searchFuelTypes($event)\\\" [results$]=\\\"fuelTypes$\\\"></app-fuelType-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { FuelType } from 'app/data-model';\nimport { FuelTypeService } from 'app/services/fuel-type/fuel-type.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './fuel-type.component.html',\n  styleUrls: ['./fuel-type.component.scss']\n})\nexport class FuelTypeComponent implements OnInit {\n  title : string = \"Fuel Type\";\n  selectedFuelType : FuelType;\n\n  fuelTypes$: Observable<FuelType>;\n\n  constructor(private fb: FormBuilder, private fuelTypeService:FuelTypeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getFuelTypes();\n    this.fuelTypeService.refreshList.subscribe(\n      res=>{\n          this.getFuelTypes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getFuelTypes()  {\n    this.fuelTypes$ = this.fuelTypeService.getFuelTypes();\n  }\n\n  searchFuelTypes(searchTerm){\n    if(searchTerm){\n      this.fuelTypes$ = this.fuelTypeService.searchFuelTypes(searchTerm);\n    }\n    else{\n      this.fuelTypes$ = new EmptyObservable();\n    }\n  }\n\n}\n"],"sourceRoot":""}