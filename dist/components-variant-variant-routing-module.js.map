{"version":3,"sources":["webpack:///./src/app/components/variant/variant-form/variant-form.component.html","webpack:///./src/app/components/variant/variant-form/variant-form.component.scss","webpack:///./src/app/components/variant/variant-form/variant-form.component.ts","webpack:///./src/app/components/variant/variant-list/variant-list.component.html","webpack:///./src/app/components/variant/variant-list/variant-list.component.scss","webpack:///./src/app/components/variant/variant-list/variant-list.component.ts","webpack:///./src/app/components/variant/variant-routing.module.ts","webpack:///./src/app/components/variant/variant.component.html","webpack:///./src/app/components/variant/variant.component.scss","webpack:///./src/app/components/variant/variant.component.ts"],"names":[],"mappings":"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","file":"components-variant-variant-routing-module.js","sourcesContent":["module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"variantForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputVariantName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputVariantName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"variantForm.controls.name.touched && variantForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"variantForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"variantForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"variantForm.controls.name.value\\\" (isDelete)=\\\"deleteVariant($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Variant } from 'app/data-model';\nimport { VariantService } from 'app/services/variant/variant.service';\n\n@Component({\n  selector: 'app-variant-form',\n  templateUrl: './variant-form.component.html',\n  styleUrls: ['./variant-form.component.scss']\n})\nexport class VariantFormComponent implements OnInit {\n  title : string = \"Create Variant\";\n  module :string=\"variant\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  variantForm: FormGroup;\n  selectedVariant_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private variantService:VariantService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.variantForm = this.fb.group({\n      variant_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.variantForm.valid) {\n      if(this.variantService.selectedMode == 'Create'){\n        this.createVariant();\n      }\n      else if (this.variantService.selectedMode == 'Edit'){\n        this.updateVariant();\n      }\n    }\n  }\n\n  getVariantById(variant_id:number){\n    this.variantService.getVariantById(variant_id)\n    .subscribe(\n        res => {\n        this.variantForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createVariant(){\n    this.variantService.createVariant(this.variantForm.value)\n    .subscribe(\n      res => {\n        this.variantService.refreshList.next(true);\n        this.variantForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateVariant(){\n    this.variantService.updateVariant(this.variantForm.value)\n    .subscribe(\n      res => {\n          this.variantService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteVariant(event){\n    if(this.selectedVariant_Id)\n    {\n      this.variantService.deleteVariant(this.selectedVariant_Id).subscribe(\n        res => {\n          this.variantService.refreshList.next(true);\n          this.router.navigate(['/variant/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.variantForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.variantService.selectedVariantId\n    .subscribe(\n      res => {\n        this.selectedVariant_Id = res;\n        if(this.variantService.selectedMode == \"Edit\"){\n          this.title = \"Edit Variant\";\n          this.mode = \"delete\";\n          this.getVariantById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchVariants($event)\\\" (isCreate)=\\\"createVariant('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let variant of results$ | async' [ngClass]=\\\"{'is-active': selectedVariantId == variant.variant_id}\\\">\\n          <th scope=\\\"row\\\">{{variant.variant_id}}</th>\\n          <td>{{variant.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectVariant(variant.variant_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Variant } from 'app/data-model';\nimport { VariantService } from 'app/services/variant/variant.service';\n\n@Component({\n  selector: 'app-variant-list',\n  templateUrl: './variant-list.component.html',\n  styleUrls: ['./variant-list.component.scss']\n})\nexport class VariantListComponent implements OnInit {\n  @Input()\n  results$: Observable<Variant>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  selectedVariantId:number;\n\n  constructor(private variantService:VariantService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/variant/add']);\n  }\n\n  searchVariants(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createVariant(mode:any){\n    this.variantService.selectedMode = mode;\n    this.router.navigate(['/variant/add']);\n  }\n\n  //On Click of the Edit Button\n  selectVariant(variant_id:number, mode:any){\n    this.selectedVariantId=variant_id;\n    this.variantService.selectedMode = mode;\n    this.router.navigate(['/variant/edit']);\n    setTimeout(() => {\n      this.variantService.selectedVariantId.next(variant_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VariantComponent} from './variant.component';\nimport { VariantListComponent} from './variant-list/variant-list.component';\nimport { VariantFormComponent} from './variant-form/variant-form.component';\n\nconst variantRoutes: Routes = [\n  {\n    path: 'variant',\n    component: VariantComponent,\n    children: [\n        {path: 'list',component: VariantListComponent},\n        {path: 'add', component: VariantFormComponent},\n        {path: 'edit', component: VariantFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(variantRoutes)],\n  exports: [RouterModule]\n})\n export class VariantRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-variant-list (searchTerm)=\\\"searchVariants($event)\\\" [results$]=\\\"variants$\\\"></app-variant-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Variant } from 'app/data-model';\nimport { VariantService } from 'app/services/variant/variant.service';\n\n@Component({\n  selector: 'app-variant',\n  templateUrl: './variant.component.html',\n  styleUrls: ['./variant.component.scss']\n})\nexport class VariantComponent implements OnInit {\n  title : string = \"Variant\";\n  selectedVariant : Variant;\n\n  variants$: Observable<Variant>;\n\n  constructor(private fb: FormBuilder, private variantService:VariantService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getVariants();\n    this.variantService.refreshList.subscribe(\n      res=>{\n          this.getVariants();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getVariants()  {\n    this.variants$ = this.variantService.getVariants();\n  }\n\n  searchVariants(searchTerm){\n    if(searchTerm){\n      this.variants$ = this.variantService.searchVariants(searchTerm);\n    }\n    else{\n      this.variants$ = new EmptyObservable();\n    }\n  }\n\n}\n"],"sourceRoot":""}