{"version":3,"sources":["webpack:///./src/app/components/model/model-form/model-form.component.html","webpack:///./src/app/components/model/model-form/model-form.component.scss","webpack:///./src/app/components/model/model-form/model-form.component.ts","webpack:///./src/app/components/model/model-list/model-list.component.html","webpack:///./src/app/components/model/model-list/model-list.component.scss","webpack:///./src/app/components/model/model-list/model-list.component.ts","webpack:///./src/app/components/model/model-routing.module.ts","webpack:///./src/app/components/model/model.component.html","webpack:///./src/app/components/model/model.component.scss","webpack:///./src/app/components/model/model.component.ts"],"names":[],"mappings":"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","file":"components-model-model-routing-module.js","sourcesContent":["module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"modelForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputModelName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputModelName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"modelForm.controls.name.touched && modelForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"modelForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"modelForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"modelForm.controls.name.value\\\" (isDelete)=\\\"deleteModel($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Model } from 'app/data-model';\nimport { ModelService } from 'app/services/model/model.service';\n\n@Component({\n  selector: 'app-model-form',\n  templateUrl: './model-form.component.html',\n  styleUrls: ['./model-form.component.scss']\n})\nexport class ModelFormComponent implements OnInit {\n  title : string = \"Create Model\";\n  module :string=\"model\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  modelForm: FormGroup;\n  selectedModel_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private modelService:ModelService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.modelForm = this.fb.group({\n      model_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.modelForm.valid) {\n      if(this.modelService.selectedMode == 'Create'){\n        this.createModel();\n      }\n      else if (this.modelService.selectedMode == 'Edit'){\n        this.updateModel();\n      }\n    }\n  }\n\n  getModelById(model_id:number){\n    this.modelService.getModelById(model_id)\n    .subscribe(\n        res => {\n        this.modelForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createModel(){\n    this.modelService.createModel(this.modelForm.value)\n    .subscribe(\n      res => {\n        this.modelService.refreshList.next(true);\n        this.modelForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateModel(){\n    this.modelService.updateModel(this.modelForm.value)\n    .subscribe(\n      res => {\n          this.modelService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteModel(event){\n    if(this.selectedModel_Id)\n    {\n      this.modelService.deleteModel(this.selectedModel_Id).subscribe(\n        res => {\n          this.modelService.refreshList.next(true);\n          this.router.navigate(['/model/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.modelForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.modelService.selectedModelId\n    .subscribe(\n      res => {\n        this.selectedModel_Id = res;\n        if(this.modelService.selectedMode == \"Edit\"){\n          this.title = \"Edit Model\";\n          this.mode = \"delete\";\n          this.getModelById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchModels($event)\\\" (isCreate)=\\\"createModel('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let model of results$ | async'>\\n          <th scope=\\\"row\\\">{{model.model_id}}</th>\\n          <td>{{model.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectModel(model.model_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Model } from 'app/data-model';\nimport { ModelService } from 'app/services/model/model.service';\n\n@Component({\n  selector: 'app-model-list',\n  templateUrl: './model-list.component.html',\n  styleUrls: ['./model-list.component.scss']\n})\nexport class ModelListComponent implements OnInit {\n  @Input()\n  results$: Observable<Model>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private modelService:ModelService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/model/add']);\n  }\n\n  searchModels(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createModel(mode:any){\n    this.modelService.selectedMode = mode;\n    this.router.navigate(['/model/add']);\n  }\n\n  //On Click of the Edit Button\n  selectModel(model_id:number, mode:any){\n    this.modelService.selectedMode = mode;\n    this.router.navigate(['/model/edit']);\n    setTimeout(() => {\n      this.modelService.selectedModelId.next(model_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModelComponent} from './model.component';\nimport { ModelListComponent} from './model-list/model-list.component';\nimport { ModelFormComponent} from './model-form/model-form.component';\n\nconst modelRoutes: Routes = [\n  {\n    path: 'model',\n    component: ModelComponent,\n    children: [\n        {path: 'list',component: ModelListComponent},\n        {path: 'add', component: ModelFormComponent},\n        {path: 'edit', component: ModelFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(modelRoutes)],\n  exports: [RouterModule]\n})\n export class ModelRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-model-list (searchTerm)=\\\"searchModels($event)\\\" [results$]=\\\"models$\\\"></app-model-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Model } from 'app/data-model';\nimport { ModelService } from 'app/services/model/model.service';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.scss']\n})\nexport class ModelComponent implements OnInit {\n  title : string = \"Model\";\n  selectedModel : Model;\n\n  models$: Observable<Model>;\n\n  constructor(private fb: FormBuilder, private modelService:ModelService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getModels();\n    this.modelService.refreshList.subscribe(\n      res=>{\n          this.getModels();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getModels()  {\n    this.models$ = this.modelService.getModels();\n  }\n\n  searchModels(searchTerm){\n    if(searchTerm){\n      this.models$ = this.modelService.searchModels(searchTerm);\n    }\n    else{\n      this.models$ = new EmptyObservable();\n    }\n  }\n\n}\n"],"sourceRoot":""}