{"version":3,"sources":["webpack:///./src/app/components/investors-corner/investors-corner-routing.module.ts","webpack:///./src/app/components/investors-corner/investors-corner.component.html","webpack:///./src/app/components/investors-corner/investors-corner.component.scss","webpack:///./src/app/components/investors-corner/investors-corner.component.ts"],"names":[],"mappings":"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","file":"components-investors-corner-investors-corner-routing-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InvestorsCornerComponent} from './investors-corner.component';\n\nconst investorsCornerRoutes: Routes = [\n  {\n    path: 'investors-corner',\n    component: InvestorsCornerComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(investorsCornerRoutes)],\n  exports: [RouterModule],\n})\n\nexport class InvestorsCornerRoutingModule { }\n","module.exports = \"\\n\\n<section>\\n    <form>\\n  <table class=\\\"table\\\">\\n    <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n      <tr>\\n        <th class=\\\"text-center\\\">Car Details</th>\\n        <th class=\\\"text-center\\\">Investment</th>\\n        <th class=\\\"text-center\\\">Expenses</th>\\n        <th class=\\\"text-center\\\">Profit and Loss</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let car of cars$;let i=index\\\">\\n        <td><span>{{car.make_name}}</span><br>\\n          <span>{{car.model_name}}</span>\\n        </td>\\n        <td>\\n          <table class=\\\"table\\\">\\n            <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n              <tr>\\n                <th>Date</th>\\n                <th>Investor</th>\\n                <th>Type</th>\\n                <th class=\\\"text-right\\\">Amount</th>\\n              </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let td of transactionDetails\\\">\\n              <tr  *ngIf=\\\"td.transaction_type_id == 1 && car.car_id == td.car_id\\\"  >\\n              <td>{{td.date | date}}</td>\\n              <td>{{td.investor_name}}</td>\\n              <td>{{td.transaction_type_name}}</td>\\n              <td class=\\\"text-right\\\">{{td.debit}}</td>\\n            </tr>\\n          </tbody>\\n          </table>\\n        </td>\\n        <td>\\n          <table class=\\\"table\\\">\\n            <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n              <tr>\\n                <th>Date</th>\\n                <th>Investor</th>\\n                <th>Type</th>\\n                <th class=\\\"text-right\\\">Amount</th>\\n              </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let td of transactionDetails\\\">\\n              <tr  *ngIf=\\\"td.transaction_type_id == 2 && car.car_id == td.car_id\\\"  >\\n              <td>{{td.date | date}}</td>\\n              <td>{{td.investor_name}}</td>\\n              <td>{{td.expense_name}}</td>\\n              <td class=\\\"text-right\\\">{{td.debit}}</td>\\n            </tr>\\n          </tbody>\\n          </table>\\n        </td>\\n        <td>\\n          <table class=\\\"table\\\">\\n            <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n              <tr>\\n                <th>Date</th>\\n                <th>Investor</th>\\n                <th>Profit</th>\\n                <th>Loss</th>\\n\\n              </tr>\\n            </thead>\\n            <tbody *ngFor=\\\"let td of transactionDetails\\\">\\n              <tr  *ngIf=\\\"(td.transaction_type_id == 3 || td.transaction_type_id == 4) && car.car_id == td.car_id\\\"  >\\n              <td>{{td.date | date}}</td>\\n              <td>{{td.investor_name}}</td>\\n              <td class=\\\"text-right\\\">{{td.credit}}</td>\\n              <td class=\\\"text-right\\\">{{td.debit}}</td>\\n            </tr>\\n          </tbody>\\n          </table>\\n        </td>\\n      </tr>\\n\\n    </tbody>\\n  </table>\\n</form>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ClientService } from 'app/services/client/client.service';\n\nimport { CarService } from 'app/services/car/car.service';\nimport { TransactionDetailsService } from 'app/services/transaction-details/transaction-details.service';\n\n\n@Component({\n  selector: 'app-investors-corner',\n  templateUrl: './investors-corner.component.html',\n  styleUrls: ['./investors-corner.component.scss']\n})\nexport class InvestorsCornerComponent implements OnInit {\n  cars$: Observable<any>;\n  transactionDetails$:Observable<any>;\n  transactionDetailsForm: FormGroup;\n  investors=[];\n  expenses=[];\n  transactionDetails=[];\n  investorsExpensesAndPercent$:Observable<any>;\n  investorsDetails = new Array();\n\n  constructor(private fb: FormBuilder,\n    private carService:CarService,\n    private transactionDetailsService:TransactionDetailsService,\n  private clientService:ClientService) { }\n\n    ngOnInit() {\n      this.createForm();\n      this.getTransactionDetailsById();\n      this.getCars();\n    }\n    createForm() {\n      this.transactionDetailsForm = this.fb.group({\n        car_records : this.fb.array([\n          this.fb.group({\n            car_id:[],\n\n            investor_records : this.fb.array([\n              this.fb.group({\n                investor_id:[],\n              }),\n            ]),\n          }),\n\n\n\n        ]), // here\n      });\n\n    }\n\n    getCars()  {\n      this.carService.getCars().subscribe(\n        res=>{\n          this.cars$ = res;\n\n          // this.cars$.forEach(car=>{\n          //\n          //   // this.clientService.getInvestorsExpensesAndPercent(car.car_id)\n          //   // .subscribe(res => {\n          //   //   this.investorsExpensesAndPercent$ = res;\n          //   //   this.investorsExpensesAndPercent$.forEach(rec=>{\n          //   //     this.investorsDetails.push(rec);\n          //   //   })\n          //\n          // });\n          //\n          // console.log(\"moly \",this.investorsExpensesAndPercent);\n        //});\n          // let control = <FormArray>this.transactionDetailsForm.get('car_records');\n          // this.cars$.forEach(car=>{\n          //   this.investors = this.transactionDetails.filter(s => s.transaction_type_id == 1 && s.car_id == car.car_id);\n          //   this.expenses = this.transactionDetails.filter(s => s.transaction_type_id == 2 && s.car_id == car.car_id);\n          //\n          //   control.push(this.fb.group({car_id:car.car_id, investor_records:this.investors, expense_records:this.expenses}));\n          //   console.log(\"aa \",this.transactionDetailsForm.value);\n          // })\n        },\n        err=>{\n\n        }\n      );\n    }\n\n    getTransactionDetailsById(){\n      this.transactionDetailsService.getTransactionDetails().subscribe(\n        res=>{\n          this.transactionDetails = res;\n        //  this.getCars();\n        },\n        err=>{\n\n        });\n      }\n    }\n"],"sourceRoot":""}