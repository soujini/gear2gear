{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/auth0-variables.ts","webpack:///./src/app/callback/callback.component.css","webpack:///./src/app/callback/callback.component.html","webpack:///./src/app/callback/callback.component.ts","webpack:///./src/app/components/car/car-form/car-form.component.html","webpack:///./src/app/components/car/car-form/car-form.component.scss","webpack:///./src/app/components/car/car-form/car-form.component.ts","webpack:///./src/app/components/car/car-list/car-list.component.html","webpack:///./src/app/components/car/car-list/car-list.component.scss","webpack:///./src/app/components/car/car-list/car-list.component.ts","webpack:///./src/app/components/car/car-routing.module.ts","webpack:///./src/app/components/car/car.component.html","webpack:///./src/app/components/car/car.component.scss","webpack:///./src/app/components/car/car.component.ts","webpack:///./src/app/components/car/car.module.ts","webpack:///./src/app/components/car/transaction-details/transaction-details.component.html","webpack:///./src/app/components/car/transaction-details/transaction-details.component.scss","webpack:///./src/app/components/car/transaction-details/transaction-details.component.ts","webpack:///./src/app/components/client/client-form/client-form.component.html","webpack:///./src/app/components/client/client-form/client-form.component.scss","webpack:///./src/app/components/client/client-form/client-form.component.ts","webpack:///./src/app/components/client/client-list/client-list.component.html","webpack:///./src/app/components/client/client-list/client-list.component.scss","webpack:///./src/app/components/client/client-list/client-list.component.ts","webpack:///./src/app/components/client/client-routing.module.ts","webpack:///./src/app/components/client/client.component.html","webpack:///./src/app/components/client/client.component.scss","webpack:///./src/app/components/client/client.component.ts","webpack:///./src/app/components/client/client.module.ts","webpack:///./src/app/components/color/color-form/color-form.component.html","webpack:///./src/app/components/color/color-form/color-form.component.scss","webpack:///./src/app/components/color/color-form/color-form.component.ts","webpack:///./src/app/components/color/color-list/color-list.component.html","webpack:///./src/app/components/color/color-list/color-list.component.scss","webpack:///./src/app/components/color/color-list/color-list.component.ts","webpack:///./src/app/components/color/color-routing.module.ts","webpack:///./src/app/components/color/color.component.html","webpack:///./src/app/components/color/color.component.scss","webpack:///./src/app/components/color/color.component.ts","webpack:///./src/app/components/color/color.module.ts","webpack:///./src/app/components/expense/expense-form/expense-form.component.html","webpack:///./src/app/components/expense/expense-form/expense-form.component.scss","webpack:///./src/app/components/expense/expense-form/expense-form.component.ts","webpack:///./src/app/components/expense/expense-list/expense-list.component.html","webpack:///./src/app/components/expense/expense-list/expense-list.component.scss","webpack:///./src/app/components/expense/expense-list/expense-list.component.ts","webpack:///./src/app/components/expense/expense-routing.module.ts","webpack:///./src/app/components/expense/expense.component.html","webpack:///./src/app/components/expense/expense.component.scss","webpack:///./src/app/components/expense/expense.component.ts","webpack:///./src/app/components/expense/expense.module.ts","webpack:///./src/app/components/fuel-type/fuel-type-form/fuel-type-form.component.html","webpack:///./src/app/components/fuel-type/fuel-type-form/fuel-type-form.component.scss","webpack:///./src/app/components/fuel-type/fuel-type-form/fuel-type-form.component.ts","webpack:///./src/app/components/fuel-type/fuel-type-list/fuel-type-list.component.html","webpack:///./src/app/components/fuel-type/fuel-type-list/fuel-type-list.component.scss","webpack:///./src/app/components/fuel-type/fuel-type-list/fuel-type-list.component.ts","webpack:///./src/app/components/fuel-type/fuel-type-routing.module.ts","webpack:///./src/app/components/fuel-type/fuel-type.component.html","webpack:///./src/app/components/fuel-type/fuel-type.component.scss","webpack:///./src/app/components/fuel-type/fuel-type.component.ts","webpack:///./src/app/components/fuel-type/fuel-type.module.ts","webpack:///./src/app/components/header/header.component.html","webpack:///./src/app/components/header/header.component.scss","webpack:///./src/app/components/header/header.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.scss","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/insurance-type/insurance-type-form/insurance-type-form.component.html","webpack:///./src/app/components/insurance-type/insurance-type-form/insurance-type-form.component.scss","webpack:///./src/app/components/insurance-type/insurance-type-form/insurance-type-form.component.ts","webpack:///./src/app/components/insurance-type/insurance-type-list/insurance-type-list.component.html","webpack:///./src/app/components/insurance-type/insurance-type-list/insurance-type-list.component.scss","webpack:///./src/app/components/insurance-type/insurance-type-list/insurance-type-list.component.ts","webpack:///./src/app/components/insurance-type/insurance-type-routing.module.ts","webpack:///./src/app/components/insurance-type/insurance-type.component.html","webpack:///./src/app/components/insurance-type/insurance-type.component.scss","webpack:///./src/app/components/insurance-type/insurance-type.component.ts","webpack:///./src/app/components/insurance-type/insurance-type.module.ts","webpack:///./src/app/components/insurance/insurance-form/insurance-form.component.html","webpack:///./src/app/components/insurance/insurance-form/insurance-form.component.scss","webpack:///./src/app/components/insurance/insurance-form/insurance-form.component.ts","webpack:///./src/app/components/insurance/insurance-list/insurance-list.component.html","webpack:///./src/app/components/insurance/insurance-list/insurance-list.component.scss","webpack:///./src/app/components/insurance/insurance-list/insurance-list.component.ts","webpack:///./src/app/components/insurance/insurance-routing.module.ts","webpack:///./src/app/components/insurance/insurance.component.html","webpack:///./src/app/components/insurance/insurance.component.scss","webpack:///./src/app/components/insurance/insurance.component.ts","webpack:///./src/app/components/insurance/insurance.module.ts","webpack:///./src/app/components/inventory/inventory.component.html","webpack:///./src/app/components/inventory/inventory.component.scss","webpack:///./src/app/components/inventory/inventory.component.ts","webpack:///./src/app/components/inventory/inventory.module.ts","webpack:///./src/app/components/investment-reocrds/investment-reocrds.component.html","webpack:///./src/app/components/investment-reocrds/investment-reocrds.component.scss","webpack:///./src/app/components/investment-reocrds/investment-reocrds.component.ts","webpack:///./src/app/components/investors-corner/investors-corner-routing.module.ts","webpack:///./src/app/components/investors-corner/investors-corner.component.html","webpack:///./src/app/components/investors-corner/investors-corner.component.scss","webpack:///./src/app/components/investors-corner/investors-corner.component.ts","webpack:///./src/app/components/investors-corner/investors-corner.module.ts","webpack:///./src/app/components/make/make-form/make-form.component.html","webpack:///./src/app/components/make/make-form/make-form.component.scss","webpack:///./src/app/components/make/make-form/make-form.component.ts","webpack:///./src/app/components/make/make-list/make-list.component.html","webpack:///./src/app/components/make/make-list/make-list.component.scss","webpack:///./src/app/components/make/make-list/make-list.component.ts","webpack:///./src/app/components/make/make-routing.module.ts","webpack:///./src/app/components/make/make.component.html","webpack:///./src/app/components/make/make.component.scss","webpack:///./src/app/components/make/make.component.ts","webpack:///./src/app/components/make/make.module.ts","webpack:///./src/app/components/model/model-form/model-form.component.html","webpack:///./src/app/components/model/model-form/model-form.component.scss","webpack:///./src/app/components/model/model-form/model-form.component.ts","webpack:///./src/app/components/model/model-list/model-list.component.html","webpack:///./src/app/components/model/model-list/model-list.component.scss","webpack:///./src/app/components/model/model-list/model-list.component.ts","webpack:///./src/app/components/model/model-routing.module.ts","webpack:///./src/app/components/model/model.component.html","webpack:///./src/app/components/model/model.component.scss","webpack:///./src/app/components/model/model.component.ts","webpack:///./src/app/components/model/model.module.ts","webpack:///./src/app/components/transmission-type/transmission-type-form/transmission-type-form.component.html","webpack:///./src/app/components/transmission-type/transmission-type-form/transmission-type-form.component.scss","webpack:///./src/app/components/transmission-type/transmission-type-form/transmission-type-form.component.ts","webpack:///./src/app/components/transmission-type/transmission-type-list/transmission-type-list.component.html","webpack:///./src/app/components/transmission-type/transmission-type-list/transmission-type-list.component.scss","webpack:///./src/app/components/transmission-type/transmission-type-list/transmission-type-list.component.ts","webpack:///./src/app/components/transmission-type/transmission-type-routing.module.ts","webpack:///./src/app/components/transmission-type/transmission-type.component.html","webpack:///./src/app/components/transmission-type/transmission-type.component.scss","webpack:///./src/app/components/transmission-type/transmission-type.component.ts","webpack:///./src/app/components/transmission-type/transmission-type.module.ts","webpack:///./src/app/components/variant/variant-form/variant-form.component.html","webpack:///./src/app/components/variant/variant-form/variant-form.component.scss","webpack:///./src/app/components/variant/variant-form/variant-form.component.ts","webpack:///./src/app/components/variant/variant-list/variant-list.component.html","webpack:///./src/app/components/variant/variant-list/variant-list.component.scss","webpack:///./src/app/components/variant/variant-list/variant-list.component.ts","webpack:///./src/app/components/variant/variant-routing.module.ts","webpack:///./src/app/components/variant/variant.component.html","webpack:///./src/app/components/variant/variant.component.scss","webpack:///./src/app/components/variant/variant.component.ts","webpack:///./src/app/components/variant/variant.module.ts","webpack:///./src/app/components/vehicle-type/vehicle-type-form/vehicle-type-form.component.html","webpack:///./src/app/components/vehicle-type/vehicle-type-form/vehicle-type-form.component.scss","webpack:///./src/app/components/vehicle-type/vehicle-type-form/vehicle-type-form.component.ts","webpack:///./src/app/components/vehicle-type/vehicle-type-list/vehicle-type-list.component.html","webpack:///./src/app/components/vehicle-type/vehicle-type-list/vehicle-type-list.component.scss","webpack:///./src/app/components/vehicle-type/vehicle-type-list/vehicle-type-list.component.ts","webpack:///./src/app/components/vehicle-type/vehicle-type-routing.module.ts","webpack:///./src/app/components/vehicle-type/vehicle-type.component.html","webpack:///./src/app/components/vehicle-type/vehicle-type.component.scss","webpack:///./src/app/components/vehicle-type/vehicle-type.component.ts","webpack:///./src/app/components/vehicle-type/vehicle-type.module.ts","webpack:///./src/app/services/car/car.service.ts","webpack:///./src/app/services/client/client.service.ts","webpack:///./src/app/services/color/color.service.ts","webpack:///./src/app/services/common/common.service.ts","webpack:///./src/app/services/expense/expense.service.ts","webpack:///./src/app/services/fuel-type/fuel-type.service.ts","webpack:///./src/app/services/insurance-type/insurance-type.service.ts","webpack:///./src/app/services/insurance/insurance.service.ts","webpack:///./src/app/services/make/make.service.ts","webpack:///./src/app/services/model/model.service.ts","webpack:///./src/app/services/transaction-details/transaction-details.service.ts","webpack:///./src/app/services/transaction-type/transaction-type.service.ts","webpack:///./src/app/services/transmission-type/transmission-type.service.ts","webpack:///./src/app/services/validation/validation.service.ts","webpack:///./src/app/services/variant/variant.service.ts","webpack:///./src/app/services/vehicle-type/vehicle-type.service.ts","webpack:///./src/app/shared/control-messages/control-messages.component.html","webpack:///./src/app/shared/control-messages/control-messages.component.scss","webpack:///./src/app/shared/control-messages/control-messages.component.ts","webpack:///./src/app/shared/modals/simple-modal/simple-modal.component.html","webpack:///./src/app/shared/modals/simple-modal/simple-modal.component.scss","webpack:///./src/app/shared/modals/simple-modal/simple-modal.component.ts","webpack:///./src/app/shared/search/search.component.html","webpack:///./src/app/shared/search/search.component.scss","webpack:///./src/app/shared/search/search.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/title/title.component.html","webpack:///./src/app/shared/title/title.component.scss","webpack:///./src/app/shared/title/title.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappingsgBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6E;;;;;;;;;;;AC7QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7GyC;AACM;AACQ;AACI;AACG;AACM;AACc;AACT;AACe;AACS;AACvB;AACZ;AACN;AACS;AACG;AACM;AACoB;AAE7B;AACe;AAIhF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,8EAAa,EAAC;IACzC;QACE,IAAI,EAAE,MAAM;QACZ,YAAY,EAAE,yDAAyD;KAExE;IACD;QACE,IAAI,EAAE,OAAO;QACb,YAAY,EAAE,4DAA4D;KAC3E;IACD;QACE,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,kEAAkE;KACjF;IACD;QACE,IAAI,EAAE,aAAa;QACnB,YAAY,EAAE,gFAAgF;KAC/F;IACD;QACE,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,uEAAuE;KACtF;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,YAAY,EAAE,+FAA+F;KAC9G;IACD;QA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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./components/car/car-routing.module\": [\n\t\t\"./src/app/components/car/car-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-car-car-routing-module\"\n\t],\n\t\"./components/client/client-routing.module\": [\n\t\t\"./src/app/components/client/client-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-client-client-routing-module\"\n\t],\n\t\"./components/color/color-routing.module\": [\n\t\t\"./src/app/components/color/color-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-color-color-routing-module\"\n\t],\n\t\"./components/expense/expense-routing.module\": [\n\t\t\"./src/app/components/expense/expense-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-expense-expense-routing-module\"\n\t],\n\t\"./components/fuel-type/fuel-type-routing.module\": [\n\t\t\"./src/app/components/fuel-type/fuel-type-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-fuel-type-fuel-type-routing-module\"\n\t],\n\t\"./components/insurance-type/insurance-type-routing.module\": [\n\t\t\"./src/app/components/insurance-type/insurance-type-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-insurance-type-insurance-type-routing-module\"\n\t],\n\t\"./components/insurance/insurance-routing.module\": [\n\t\t\"./src/app/components/insurance/insurance-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-insurance-insurance-routing-module\"\n\t],\n\t\"./components/investors-corner/investors-corner-routing.module\": [\n\t\t\"./src/app/components/investors-corner/investors-corner-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"common\",\n\t\t\"components-investors-corner-investors-corner-routing-module\"\n\t],\n\t\"./components/make/make-routing.module\": [\n\t\t\"./src/app/components/make/make-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-make-make-routing-module\"\n\t],\n\t\"./components/model/model-routing.module\": [\n\t\t\"./src/app/components/model/model-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-model-model-routing-module\"\n\t],\n\t\"./components/transmission-type/transmission-type-routing.module\": [\n\t\t\"./src/app/components/transmission-type/transmission-type-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-transmission-type-transmission-type-routing-module\"\n\t],\n\t\"./components/variant/variant-routing.module\": [\n\t\t\"./src/app/components/variant/variant-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-variant-variant-routing-module\"\n\t],\n\t\"./components/vehicle-type/vehicle-type-routing.module\": [\n\t\t\"./src/app/components/vehicle-type/vehicle-type-routing.module.ts\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~a0cd1ee2\",\n\t\t\"components-car-car-routing-module~components-client-client-routing-module~components-color-color-rou~5a88b720\",\n\t\t\"common\",\n\t\t\"components-vehicle-type-vehicle-type-routing-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MakeModule } from './components/make/make.module';\nimport { ModelModule } from './components/model/model.module';\nimport { VariantModule } from './components/variant/variant.module';\nimport { VehicleTypeModule } from './components/vehicle-type/vehicle-type.module';\nimport { FuelTypeModule } from './components/fuel-type/fuel-type.module';\nimport { InsuranceTypeModule } from './components/insurance-type/insurance-type.module';\nimport { TransmissionTypeModule } from './components/transmission-type/transmission-type.module';\nimport { InsuranceModule } from './components/insurance/insurance.module';\nimport { ColorModule } from './components/color/color.module';\nimport { CarModule } from './components/car/car.module';\nimport { ClientModule } from './components/client/client.module';\nimport { ExpenseModule } from './components/expense/expense.module';\nimport { InventoryModule } from './components/inventory/inventory.module';\nimport { InvestorsCornerModule } from './components/investors-corner/investors-corner.module';\n\nimport { HomeComponent } from './components/home/home.component';\nimport { InventoryComponent } from './components/inventory/inventory.component';\n\ndeclare var require:any;\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent},\n  {\n    path: 'make',\n    loadChildren: './components/make/make-routing.module#MakeRoutingModule'\n\n  },\n  {\n    path: 'model',\n    loadChildren: './components/model/model-routing.module#ModelRoutingModule'\n  },\n  {\n    path: 'variant',\n    loadChildren: './components/variant/variant-routing.module#VariantRoutingModule'\n  },\n  {\n    path: 'vehicleType',\n    loadChildren: './components/vehicle-type/vehicle-type-routing.module#VehicleTypeRoutingModule'\n  },\n  {\n    path: 'fuelType',\n    loadChildren: './components/fuel-type/fuel-type-routing.module#FuelTypeRoutingModule'\n  },\n  {\n    path: 'transmissionType',\n    loadChildren: './components/transmission-type/transmission-type-routing.module#TransmissionTypeRoutingModule'\n  },\n  {\n    path: 'insuranceType',\n    loadChildren: './components/insurance-type/insurance-type-routing.module#InsuranceTypeRoutingModule'\n  },\n  {\n    path: 'insurance',\n    loadChildren: './components/insurance/insurance-routing.module#InsuranceRoutingModule'\n  },\n  {\n    path: 'expense',\n    loadChildren: './components/expense/expense-routing.module#ExpenseRoutingModule'\n  },\n  {\n    path: 'color',\n    loadChildren: './components/color/color-routing.module#ColorRoutingModule'\n  },\n  {\n    path: 'client',\n    loadChildren: './components/client/client-routing.module#ClientRoutingModule'\n  },\n  {\n    path: 'car',\n    loadChildren: './components/car/car-routing.module#CarRoutingModule'\n  },\n  { path: 'cars', component: InventoryComponent},\n  { path: 'sold-cars', component: HomeComponent},\n  {\n    path: 'investors-corner',\n    loadChildren: './components/investors-corner/investors-corner-routing.module#InvestorsCornerRoutingModule'\n  },\n  { path: 'contact', component: HomeComponent},\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes,{ enableTracing: false }),\n    MakeModule,\n    ModelModule,\n    VariantModule,\n    VehicleTypeModule,\n    FuelTypeModule,\n    InsuranceTypeModule,\n    TransmissionTypeModule,\n    InsuranceModule,\n    ExpenseModule,\n    ColorModule,\n    ClientModule,\n    CarModule,\n    InventoryModule,\n    InvestorsCornerModule\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\n\n\nexport class AppRoutingModule { }\n","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <app-header></app-header>\\n</div>\\n\\n<div xclass=\\\"container-fluid\\\" style=\\\"margin-top:150px\\\">\\n<!-- <div class=\\\"loader\\\"></div> -->\\n    <router-outlet></router-outlet>\\n</div>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';  // replaces previous Http service\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatTabsModule} from '@angular/material/tabs';\n\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\n\nimport { ROUTES } from './app.routes';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AuthService } from './auth/auth.service';\nimport { CallbackComponent } from './callback/callback.component';\nimport { HeaderComponent } from './components/header/header.component';\n\nimport { ValidationService } from './services/validation/validation.service';\n\nimport { MakeService } from './services/make/make.service';\nimport { ModelService } from './services/model/model.service';\nimport { VariantService } from './services/variant/variant.service';\nimport { VehicleTypeService } from './services/vehicle-type/vehicle-type.service';\nimport { FuelTypeService } from './services/fuel-type/fuel-type.service';\nimport { InsuranceTypeService } from './services/insurance-type/insurance-type.service';\nimport { TransmissionTypeService } from './services/transmission-type/transmission-type.service';\nimport { InsuranceService } from './services/insurance/insurance.service';\nimport { ColorService } from './services/color/color.service';\nimport { CarService } from './services/car/car.service';\nimport { ClientService } from './services/client/client.service';\nimport { CommonService } from './services/common/common.service';\nimport { ExpenseService } from './services/expense/expense.service';\nimport { TransactionTypeService } from './services/transaction-type/transaction-type.service';\nimport { TransactionDetailsService } from './services/transaction-details/transaction-details.service';\nimport { InvestmentReocrdsComponent } from './components/investment-reocrds/investment-reocrds.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CallbackComponent,\n    HeaderComponent,\n    InvestmentReocrdsComponent,\n    ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MDBBootstrapModule.forRoot(),\n    RouterModule.forRoot(ROUTES),\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTabsModule\n  ],\n  exports:[\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatTabsModule\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ],\n  providers: [\n    AuthService,\n    ValidationService,\n    MakeService,\n    ModelService,\n    VariantService,\n    VehicleTypeService,\n    FuelTypeService,\n    InsuranceTypeService,\n    TransmissionTypeService,\n    ColorService,\n    CarService,\n    InsuranceService,\n    ExpenseService,\n    ClientService,\n    CommonService,\n    TransactionTypeService,\n    TransactionDetailsService\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CallbackComponent } from './callback/callback.component';\n\n\nexport const ROUTES: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'callback', component: CallbackComponent },\n  { path: '**', redirectTo: '' },\n];\n","import { Injectable } from '@angular/core';\nimport { AUTH_CONFIG } from './auth0-variables';\nimport { Router } from '@angular/router';\nimport Auth0Lock from 'auth0-lock';\n\n@Injectable()\nexport class AuthService {\n\n  options = {\n    'allowSignUp':false,\n    'redirect':false,\n    theme: {\n       logo: './assets/images/g2g-logo2.png',\n      primaryColor: '#31324F'\n    },\n    allowedConnections: ['Username-Password-Authentication'],\n    languageDictionary: {\n      emailInputPlaceholder: \"something@youremail.com\",\n      title: \"Gear2Gear\"\n    },\n    scope:'openid',\n    audience: `https://${AUTH_CONFIG.domain}/userinfo`,\n    redirectUri: AUTH_CONFIG.callbackURL,\n  }\n\n  lock = new Auth0Lock(AUTH_CONFIG.clientID, AUTH_CONFIG.domain, this.options);\n\n  constructor(public router: Router) {\n\n    this.lock.on('authenticated', (authResult:any) => {\n      console.log(\"souj \",authResult);\n      //this.isAuthenticated=true;\n      this.lock.getUserInfo(authResult.accessToken, (error:any, profile:any) => {\n      if (error) {\n        // Handle error\n        return;\n      }\n      //Save token and profile locally\n      this.setSession(authResult, profile);\n    });\n  });\n}\n\npublic login(): void {\n  this.lock.show();\n}\n\npublic logout(): void {\n  // Remove tokens and expiry time from localStorage\n  localStorage.removeItem('accessToken');\n  localStorage.removeItem('profile');\n  localStorage.removeItem('expiresAt');\n  //  this.isAuthenticated=false;\n  // Go back to the home route\n  this.router.navigate(['/']);\n}\nprivate setSession(authResult, profile): void {\n  // Set the time that the access token will expire at\n  const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n  localStorage.setItem(\"accessToken\", authResult.accessToken);\n  localStorage.setItem(\"profile\", JSON.stringify(profile));\n  localStorage.setItem('expiresAt', expiresAt);\n\n  // Update DOM\n  //alert(\"hello \" + profile.name);\n}\n\npublic isAuthenticated():boolean{\n  //Check if there's an unexpired JWT\n  //This searches for an item in localStorage with key == 'id_token'\n  const accessToken = localStorage.getItem(\"accessToken\");\n  console.log(\"access \",accessToken);\n  if(accessToken){\n    // Check whether the current time is past the\n    // access token's expiry time\n    const expiresAt = JSON.parse(localStorage.getItem('expiresAt'));\n    console.log(\"time \", new Date().getTime() + '   expires  '+expiresAt);\n    return new Date().getTime() < expiresAt;\n\n  }\n  else{\n    return false;\n  }\n}\n\n}\n","interface AuthConfig {\n  clientID: string;\n  domain: string;\n  callbackURL: string;\n}\n\nexport const AUTH_CONFIG: AuthConfig = {\n  clientID: 'ZKnwKqFeiWfiHSeP34lPImZHC8qOCGUT',\n  domain: 'gear2gear.eu.auth0.com',\n  callbackURL: 'http://localhost:3000/callback',\n\n};\n","module.exports = \".loading {\\n  position: absolute;\\n  display: flex;\\n  justify-content: center;\\n  height: 100vh;\\n  width: 100vw;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background-color: #fff;\\n}\"","module.exports = \"<div class=\\\"loading\\\">\\n  <img src=\\\"assets/loading.svg\\\" alt=\\\"loading\\\">\\n  <h1>SOUJANYA</h1>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"row\\\">\\n    <mat-tab-group class=\\\"col-12\\\">\\n      <mat-tab  label=\\\"Car Details\\\">\\n        <div class=\\\"col-12 grey lighten-4\\\">\\n          <header class=\\\"header row\\\">\\n            <div class=\\\"col-12\\\">\\n              <app-title [title]=title></app-title>\\n              <div *ngIf=\\\"message != ''\\\" class=\\\"alert alert-success text-center col-12\\\">\\n                <strong>Success!</strong>{{message}}\\n              </div>\\n            </div>\\n          </header>\\n\\n          <div class=\\\"col-12\\\">\\n            <form [formGroup]=\\\"carForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n              <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Make</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"make\\\">\\n                        <option *ngFor=\\\"let make of makes$ | async\\\" [value]=\\\"make.make_id\\\">{{make.name}}</option>\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.make\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Model</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"model\\\">\\n                        <option *ngFor=\\\"let model of models$ | async\\\" [value]=\\\"model.model_id\\\">{{model.name}}</option>\\n\\n                      </select>\\n                      <app-control-messages [control]=\\\"carForm.controls.model\\\"></app-control-messages>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Description</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\">\\n\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.year\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Registration Number</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"license_plate\\\">\\n\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.year\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Variant</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\"  formControlName=\\\"variant\\\">\\n                        <option *ngFor=\\\"let variant of variants$ | async\\\" [value]=\\\"variant.variant_id\\\">{{variant.name}}</option>\\n\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.variant\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Make Year</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"make_year\\\">\\n\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.year\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Make Month</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"make_month\\\">\\n\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.year\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Mileage</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"mileage\\\" (keyup)=\\\"formatCurrency(carForm.controls.mileage)\\\">\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.mileage\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Owners</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"owners\\\">\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.mileage\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Vehicle Type</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"vehicle_type\\\">\\n                        <option *ngFor=\\\"let vehicleType of vehicleTypes$ | async\\\" [value]=\\\"vehicleType.vehicle_type_id\\\">{{vehicleType.name}}</option>\\n\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.vehicleType\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Fuel Type</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"fuel_type\\\">\\n                        <option *ngFor=\\\"let fuelType of fuelTypes$ | async\\\" [value]=\\\"fuelType.fuel_type_id\\\">{{fuelType.name}}</option>\\n\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.fuelType\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Transmission Type</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\"  formControlName=\\\"transmission_type\\\">\\n                        <option *ngFor=\\\"let transmissionType of transmissionTypes$ | async\\\" [value]=\\\"transmissionType.transmission_type_id\\\">{{transmissionType.name}}</option>\\n\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.transmissionType\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Insurance Type</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\"  formControlName=\\\"insurance_type\\\">\\n                        <option *ngFor=\\\"let insuranceType of insuranceTypes$ | async\\\" [value]=\\\"insuranceType.insurance_type_id\\\">{{insuranceType.name}}</option>\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.insuranceType\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Insurance</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"insurance\\\">\\n                        <option *ngFor=\\\"let insurance of insurances$ | async\\\" [value]=\\\"insurance.insurance_id\\\">{{insurance.name}}</option>\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.insurance\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Insurance Year</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"insurance_year\\\">\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.year\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Exterior Color</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\"  formControlName=\\\"exterior_color\\\">\\n                        <option *ngFor=\\\"let color of colors$ | async\\\" [value]=\\\"color.color_id\\\">{{color.name}}</option>\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.color\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Interior Color</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\"  formControlName=\\\"interior_color\\\">\\n                        <option *ngFor=\\\"let color of colors$ | async\\\" [value]=\\\"color.color_id\\\">{{color.name}}</option>\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.color\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Fuel Economy</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fuel_economy\\\">\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.PurchasedFor\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-3 col-form-label\\\">Purchased On</label>\\n                    <div>\\n                      <div class=\\\"md-form mt-0\\\">\\n                        <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"purchased_on\\\">\\n                        <!-- <app-control-messages [control]=\\\"carForm.controls.purchasedOn\\\"></app-control-messages> -->\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Purchased From</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <select class=\\\"form-control\\\" formControlName=\\\"purchased_from\\\">\\n                        <option *ngFor=\\\"let client of clients$ | async\\\" [value]=\\\"client.client_id\\\">{{client.name}}</option>\\n                      </select>\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.purchasedFrom\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <label class=\\\"col-sm-3 col-form-label\\\">Purchased For</label>\\n                  <div>\\n                    <div class=\\\"md-form mt-0\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"cost_price\\\" (keyup)=\\\"formatCurrency(carForm.controls.cost_price)\\\">\\n                      <!-- <app-control-messages [control]=\\\"carForm.controls.PurchasedFor\\\"></app-control-messages> -->\\n                    </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"form-check\\\">\\n                  <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"inputFlooded\\\" formControlName=\\\"is_flooded\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"inputFlooded\\\">Is Flooded?</label>\\n                </div>\\n                <div class=\\\"form-check\\\">\\n                  <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"inputAccidental\\\" formControlName=\\\"is_accidental\\\">\\n                  <label class=\\\"form-check-label\\\" for=\\\"inputAccidental\\\">Is Accidental?</label>\\n                </div>\\n\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"inputSold\\\" formControlName=\\\"is_sold\\\" (change)=\\\"is_sold($event)\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"inputSold\\\">Is Sold?</label>\\n              </div>\\n                <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-3 col-form-label\\\">Sold On</label>\\n                <div>\\n                  <div class=\\\"md-form mt-0\\\">\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"sold_on\\\">\\n                    <!-- <dl-date-time-picker minView='day' formControlName=\\\"sold_on\\\" data-datetimepicker-config=\\\"{ dropdownSelector: '#dropdown1' }\\\"></dl-date-time-picker> -->\\n                    <!-- <app-control-messages [control]=\\\"carForm.controls.soldOn\\\"></app-control-messages> -->\\n                  </div>\\n                </div>\\n              </div>\\n                <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-3 col-form-label\\\">Sold To</label>\\n                <div>\\n                  <div class=\\\"md-form mt-0\\\">\\n                    <select class=\\\"form-control\\\"  formControlName=\\\"sold_to\\\">\\n                      <option *ngFor=\\\"let client of clients$ | async\\\" [value]=\\\"client.client_id\\\">{{client.name}}</option>\\n                    </select>\\n                    <!-- <app-control-messages [control]=\\\"carForm.controls.soldTo\\\"></app-control-messages> -->\\n                  </div>\\n                </div>\\n              </div>\\n                <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-3 col-form-label\\\">Sold For</label>\\n                <div>\\n                  <div class=\\\"md-form mt-0\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control \\\" formControlName=\\\"selling_price\\\" (keyup)=\\\"formatCurrency(carForm.controls.selling_price)\\\">\\n                    <!-- <app-control-messages [control]=\\\"carForm.controls.soldFor\\\"></app-control-messages> -->\\n                  </div>\\n                </div>\\n              </div>\\n                <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-3 col-form-label\\\">Upload Photos</label>\\n                <div>\\n                  <div class=\\\"md-form mt-0\\\">\\n                    <input type=\\\"file\\\" multiple=\\\"multiple\\\" name=\\\"fileUpload\\\">\\n                    <!-- <app-control-messages [control]=\\\"carForm.controls.soldFor\\\"></app-control-messages> -->\\n                  </div>\\n                </div>\\n              </div>\\n                <div class=\\\"text-right\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n                    <i class=\\\"fa fa-save\\\"></i>\\n                  </button>\\n                  <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"carForm.controls.make.value\\\" (isDelete)=\\\"deleteCar($event)\\\"></app-simple-modal>\\n\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </mat-tab>\\n      <mat-tab *ngIf=\\\"selectedCar_Id\\\" class=\\\"col-12\\\" label=\\\"Transaction Details\\\">\\n      <app-transaction-details (opMessage)=\\\"setMessage($event)\\\" [investors$]=\\\"investors$\\\" [transactionTypes$]=\\\"transactionTypes$\\\" [expenses$]=\\\"expenses$\\\" [carForm]=\\\"carForm\\\"></app-transaction-details>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { Car,Make,Model, Variant, VehicleType, FuelType, TransmissionType, InsuranceType, Insurance, Color, Client, Expense } from 'app/data-model';\nimport { CarService } from 'app/services/car/car.service';\nimport { MakeService } from 'app/services/make/make.service';\nimport { ModelService } from 'app/services/model/model.service';\nimport { VariantService } from 'app/services/variant/variant.service';\nimport { VehicleTypeService } from 'app/services/vehicle-type/vehicle-type.service';\nimport { FuelTypeService } from 'app/services/fuel-type/fuel-type.service';\nimport { TransmissionTypeService } from 'app/services/transmission-type/transmission-type.service';\nimport { InsuranceTypeService } from 'app/services/insurance-type/insurance-type.service';\nimport { InsuranceService } from 'app/services/insurance/insurance.service';\nimport { ColorService } from 'app/services/color/color.service';\nimport { ClientService } from 'app/services/client/client.service';\nimport { ExpenseService } from 'app/services/expense/expense.service';\nimport { TransactionTypeService } from 'app/services/transaction-type/transaction-type.service';\nimport { TransactionDetailsService } from 'app/services/transaction-details/transaction-details.service';\n\n@Component({\n  selector: 'app-car-form',\n  templateUrl: './car-form.component.html',\n  styleUrls: ['./car-form.component.scss']\n})\nexport class CarFormComponent implements OnInit {\n  title : string = \"Create Car\";\n  module :string=\"car\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  carForm: FormGroup;\n\n  selectedCar_Id: any;\n  submitted = false;\n  sold:boolean=false;\n  results$:Observable<Car>;\n  makes$:Observable<Make>;\n  models$:Observable<Model>;\n  variants$:Observable<Variant>;\n  vehicleTypes$:Observable<VehicleType>;\n  fuelTypes$:Observable<FuelType>;\n  transmissionTypes$:Observable<TransmissionType>;\n  insuranceTypes$:Observable<InsuranceType>;\n  insurances$:Observable<Insurance>;\n  colors$:Observable<Color>;\n  clients$:Observable<Client>;\n  expenses$:Observable<Expense>;\n  investors$:Observable<Client>;\n  transactionTypes$:Observable<any>;\n\n  constructor(\n    private fb: FormBuilder,\n    private router:Router,\n    private route:ActivatedRoute,\n    private carService:CarService,\n    private makeService:MakeService,\n    private modelService:ModelService,\n    private variantService:VariantService,\n    private vehicleTypeService:VehicleTypeService,\n    private fuelTypeService:FuelTypeService,\n    private transmissionTypeService:TransmissionTypeService,\n    private insuranceTypeService:InsuranceTypeService,\n    private insuranceService:InsuranceService,\n    private colorService:ColorService,\n    private clientService:ClientService,\n    private expenseService:ExpenseService,\n    private transactionTypeService:TransactionTypeService,\n    private transactionDetailsService:TransactionDetailsService\n\n  ) {\n  }\n\n  createForm() {\n    this.carForm = this.fb.group({\n      car_id: [],\n      make : [],//required\n      model : [],//required\n      description:[],\n      variant : [],//required\n      vehicle_type : [],//required\n      fuel_type : [],//required\n      transmission_type : [],//required\n      insurance_type : [],\n      insurance : [],\n      exterior_color : [],\n      interior_color:[],\n      fuel_economy:[],\n      mileage : [],\n      make_year : [],//required\n      owners : [],\n      cost_price : [],//required\n      purchased_from : [],//required\n      purchased_on : [],//required\n      selling_price : [], //required if sold\n      sold_to : [],//required if sold\n      sold_on : [],//required if sold\n      make_month : [],\n      insurance_year:[],\n      is_accidental:[],\n      is_flooded:[],\n      is_sold : [],\n      license_plate : [],\n      total_cost:[0],\n      total_income:[0]\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.carForm.valid) {\n      if(this.carService.selectedMode == 'Create'){\n        this.createCar();\n      }\n      else if (this.carService.selectedMode == 'Edit'){\n        this.updateCar();\n      }\n    }\n  }\n\n  getCarById(car_id:number){\n    this.carService.getCarById(car_id)\n    .subscribe(\n      res => {\n        this.patchForm(res[0]);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  patchForm(res){\n    this.carForm.patchValue(res);\n  }\n\n  createCar(){\n    this.carForm.patchValue({\n      total_cost:this.carForm.controls.cost_price.value,\n    });\n    this.carService.createCar(this.carForm.value)\n    .subscribe(\n      res => {\n        this.carService.refreshList.next(true);\n        this.carForm.reset();\n        this.selectCar(res.car_id);\n        // this.router.navigate(['/car/edit']);\n        this.getCarById(res.car_id);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  updateCar(){\n    this.carService.updateCar(this.carForm.value)\n    .subscribe(\n      res => {\n        this.carService.refreshList.next(true);\n        window.scrollTo(0, 0);\n        this.message = res.message;\n        setTimeout(() => {\n          this.message =\"\";\n          //this.router.navigate(['/car/add']);\n        },5000);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteCar(event){\n    if(this.selectedCar_Id)\n    {\n      this.carService.deleteCar(this.selectedCar_Id).subscribe(\n        res => {\n          this.carService.refreshList.next(true);\n          this.router.navigate(['/car/add']);\n          console.log(\"Delete Car : \",res.message);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.carForm.reset();\n    }\n  }\n  selectCar(car_id:number){\n    this.carService.selectedMode = 'Edit';\n    this.router.navigate(['/car/edit']);\n    setTimeout(() => {\n      this.carService.selectedCarId.next(car_id);\n    }, 100);\n  }\n  getMakes()  {\n    this.makes$ = this.makeService.getMakes();\n  }\n  getModels()  {\n    this.models$ = this.modelService.getModels();\n  }\n  getVariants()  {\n    this.variants$ = this.variantService.getVariants();\n  }\n  getVehicleTypes()  {\n    this.vehicleTypes$ = this.vehicleTypeService.getVehicleTypes();\n  }\n  getFuelTypes()  {\n    this.fuelTypes$ = this.fuelTypeService.getFuelTypes();\n  }\n  getTransmissionTypes()  {\n    this.transmissionTypes$ = this.transmissionTypeService.getTransmissionTypes();\n  }\n  getInsuranceTypes()  {\n    this.insuranceTypes$ = this.insuranceTypeService.getInsuranceTypes();\n  }\n  getInsurances()  {\n    this.insurances$ = this.insuranceService.getInsurances();\n  }\n  getColors()  {\n    this.colors$ = this.colorService.getColors();\n  }\n  getClients()  {\n    this.clients$ = this.clientService.getClients();\n  }\n  getExpenses()  {\n    this.expenses$ = this.expenseService.getExpenses();\n  }\n  getInvestors()  {\n    this.investors$ = this.clientService.getInvestors();\n  }\n  getTransactionTypes()  {\n    this.transactionTypes$ = this.transactionTypeService.getTransactionTypes();\n  }\n\n\n  formatCurrency1(control){\n    //  var val = this.carForm.controls.expenses.value;\n    var val = control.value;\n    let x = val.replace( /,/g, \"\" );\n    var lastThree = x.substring(x.length-3);\n    var otherNumbers = x.substring(0,x.length-3);\n    if(otherNumbers != '')\n    lastThree = ',' + lastThree;\n    var res = otherNumbers(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n    control.setValue(res);\n  }\n\n  formatCurrency(control){\n    var val = control.value;\n    let x = val.toString().replace( /,/g, \"\" );\n    var afterPoint = '';\n    if(x.indexOf('.') > 0)\n    afterPoint = x.substring(x.indexOf('.'),x.length);\n    x = Math.floor(x);\n    x=x.toString();\n    var lastThree = x.substring(x.length-3);\n    var otherNumbers = x.substring(0,x.length-3);\n    if(otherNumbers != '')\n    lastThree = ',' + lastThree;\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree + afterPoint;\n    control.setValue(res);\n  }\n\n  is_sold(){\n    if(this.carService.selectedMode == \"Edit\"){\n    if(this.carForm.get('is_sold').value == true){\n      this.carService.sold.next(true);\n    }\n    else{\n      this.carService.sold.next(false);\n    }\n  }\n  }\n  setMessage(event){\n    this.carForm.patchValue({\n      'is_sold':false,\n    });\n    window.scrollTo(0, 0);\n    this.message = event;\n  }\n\n  ngOnInit() {\n    this.createForm();\n    this.getMakes();\n    this.getModels();\n    this.getVariants();\n    this.getVehicleTypes();\n    this.getFuelTypes();\n    this.getTransmissionTypes();\n    this.getInsuranceTypes();\n    this.getInsurances();\n    this.getColors();\n    this.getClients();\n    this.getExpenses();\n    this.getInvestors();\n    this.getTransactionTypes();\n\n    this.carService.selectedCarId\n    .subscribe(\n      res => {\n        if(res != 0){\n        this.selectedCar_Id = res;\n        if(this.carService.selectedMode == \"Edit\"){\n          this.title = \"Edit Car\"\n          this.mode = \"delete\";\n          this.getCarById(res);\n          this.carService.transactionDetail.next(\"true\");\n        }\n      }\n      });\n\n  }\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchCars($event)\\\" (isCreate)=\\\"createCar('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Make</th>\\n          <th>Model</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let car of results$ | async'>\\n          <th scope=\\\"row\\\">{{car.car_id}}</th>\\n          <td>{{car.make_name}}</td>\\n            <td>{{car.model_name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectCar(car.car_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Car } from 'app/data-model';\nimport { CarService } from 'app/services/car/car.service';\n\n@Component({\n  selector: 'app-car-list',\n  templateUrl: './car-list.component.html',\n  styleUrls: ['./car-list.component.scss']\n})\nexport class CarListComponent implements OnInit {\n  @Input()\n  results$: Observable<Car>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private carService:CarService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/car/add']);\n  }\n\n  searchCars(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createCar(mode:any){\n    this.carService.selectedMode = mode;\n    this.router.navigate(['/car/add']);\n  }\n\n  //On Click of the Edit Button\n  selectCar(car_id:number, mode:any){\n    this.carService.selectedMode = mode;\n    this.router.navigate(['/car/edit']);\n    setTimeout(() => {\n      this.carService.selectedCarId.next(car_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CarComponent} from './car.component';\nimport { CarListComponent} from './car-list/car-list.component';\nimport { CarFormComponent} from './car-form/car-form.component';\n\nconst carRoutes: Routes = [\n  {\n    path: 'car',\n    component: CarComponent,\n    children: [\n        {path: 'list',component: CarListComponent},\n        {path: 'add', component: CarFormComponent},\n        {path: 'edit', component: CarFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(carRoutes)],\n  exports: [RouterModule]\n})\n export class CarRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-car-list (searchTerm)=\\\"searchCars($event)\\\" [results$]=\\\"cars$\\\"></app-car-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Car } from 'app/data-model';\nimport { CarService } from 'app/services/car/car.service';\n\n@Component({\n  selector: 'app-car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.scss']\n})\nexport class CarComponent implements OnInit {\n  title : string = \"Car\";\n  selectedCar : Car;\n\n  cars$: Observable<Car>;\n\n  constructor(private fb: FormBuilder, private carService:CarService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getCars();\n    this.carService.refreshList.subscribe(\n      res=>{\n          this.getCars();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getCars()  {\n    this.cars$ = this.carService.getCars();\n  }\n\n  searchCars(searchTerm){\n    if(searchTerm){\n      this.cars$ = this.carService.searchCars(searchTerm);\n    }\n    else{\n      this.cars$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { CarRoutingModule } from './car-routing.module';\nimport { CarComponent } from './car.component';\nimport { CarListComponent } from './car-list/car-list.component';\nimport { CarFormComponent } from './car-form/car-form.component';\nimport { TransactionDetailsComponent } from './transaction-details/transaction-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    CarRoutingModule,\n  ],\n  declarations: [\n    CarComponent,\n    CarListComponent,\n    CarFormComponent,\n    TransactionDetailsComponent\n  ],\n  // providers: [CarService],\n})\nexport class CarModule { }\n","module.exports = \"<div *ngIf=\\\"message\\\" class=\\\"alert alert-danger text-center col-12\\\">\\n  <strong>Error! </strong>{{message}}\\n</div>\\n<form [formGroup]=\\\"transactionDetailsForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n  <div class=\\\"col-12\\\">\\n  <div class=\\\"form-group\\\">\\n    <div>\\n      <div class=\\\"md-form mt-0\\\">\\n        <table class=\\\"table\\\" *ngIf=\\\"carForm.get('is_sold').value == false\\\">\\n          <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n            <tr>\\n              <th>Date</th>\\n              <th>Transaction</th>\\n              <th>Investor</th>\\n              <th>Expense</th>\\n              <th>Description</th>\\n              <th class=\\\"text-right\\\">Credit</th>\\n              <th class=\\\"text-right\\\">Debit</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n            <td>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"date\\\" placeholder=\\\"Date\\\">\\n                <app-control-messages [control]=\\\"transactionDetailsForm.controls.date\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" formControlName=\\\"transaction_type_id\\\" (change)=\\\"getSelectedTransactionTypeMode($event.target.value)\\\" >\\n                <option *ngFor=\\\"let tt of transactionTypes$ |async\\\" [value]=\\\"tt.transaction_type_id\\\">{{tt.name}}\\n                </option>\\n              </select>\\n              <app-control-messages [control]=\\\"transactionDetailsForm.controls.transaction_type_id\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" formControlName=\\\"investor_id\\\" (change) = \\\"validateAmountAgainstBalance(this)\\\" >\\n                <option *ngFor=\\\"let investor of investors$ | async\\\" [value]=\\\"investor.client_id\\\">{{investor.name}}</option>\\n              </select>\\n              <app-control-messages [control]=\\\"transactionDetailsForm.controls.investor_id\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" formControlName=\\\"expense_id\\\" >\\n                <option *ngFor=\\\"let expense of expenses$ | async\\\" [value]=\\\"expense.expense_id\\\">{{expense.expense_id}}{{expense.name}}</option>\\n              </select>\\n              <app-control-messages [control]=\\\"transactionDetailsForm.controls.expense_id\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" placeholder=\\\"Description\\\" >\\n              <app-control-messages [control]=\\\"transactionDetailsForm.controls.description\\\"></app-control-messages>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control text-right\\\" formControlName=\\\"credit\\\" placeholder=\\\"Credit\\\" (keyup)=\\\"formatCurrency(transactionDetailsForm.controls.credit)\\\" >\\n              <app-control-messages [control]=\\\"transactionDetailsForm.controls.credit\\\"></app-control-messages>\\n            </td>\\n            <td class=\\\"text-right\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control text-right\\\" formControlName=\\\"debit\\\" placeholder=\\\"Debit\\\" (keyup)=\\\"formatCurrency(transactionDetailsForm.controls.debit)\\\" >\\n              <app-control-messages [control]=\\\"transactionDetailsForm.controls.debit\\\"></app-control-messages>\\n            </td>\\n          </tr>\\n        </tbody>\\n        </table>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" *ngIf=\\\"carForm.get('is_sold').value == false\\\" >\\n          <i class=\\\"fa fa-save\\\"></i>\\n        </button>\\n        <table class=\\\"table\\\">\\n          <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n            <tr>\\n              <th>Date</th>\\n              <th>Transaction Type</th>\\n              <th>Investor</th>\\n              <th>Expense Type</th>\\n              <th>Description</th>\\n              <th class=\\\"text-right\\\">Credit</th>\\n              <th class=\\\"text-right\\\">Debit</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let item of transactionDetails$ | async; let i = index;\\\">\\n            <td> {{item.date | date}}</td>\\n             <!-- <td>\\n              <select class=\\\"form-control\\\" value=\\\"item.transaction_type_id\\\" disabled>\\n                <option *ngFor=\\\"let tt of transactionTypes$ | async\\\" [value]=\\\"tt.transaction_type_id\\\" [selected] = \\\"item.transaction_type_id == tt.transaction_type_id\\\">{{tt.transaction_type_id}}{{tt.name}}</option>\\n              </select>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" value=\\\"item.investor_id\\\" disabled>\\n                <option *ngFor=\\\"let investor of investors$ | async\\\" [value]=\\\"investor.client_id\\\" [selected] = \\\"item.investor_id == investor.client_id\\\">{{investor.name}}</option>\\n              </select>\\n            </td>\\n            <td> -->\\n              <!-- <select class=\\\"form-control\\\" value=\\\"item.expense_id\\\" disabled>\\n                <option *ngFor=\\\"let expense of expenses$ | async\\\" [value]=\\\"expense.expense_id\\\" [selected] = \\\"item.expense_id == expense.expense_id\\\">{{expense.expense_id}}{{expense.name}}</option>\\n              </select> -->\\n            <!-- </td> -->\\n            <td>{{item.transaction_name}}</td>\\n            <td>{{item.investor_name}}</td>\\n            <td>{{item.expense_name}}</td>\\n            <td>{{item.description}}</td>\\n            <td class=\\\"text-right\\\">{{item.credit}}</td>\\n            <td class=\\\"text-right\\\">{{item.debit}}</td>\\n          </tr>\\n        </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ClientService } from 'app/services/client/client.service';\nimport { CarService } from 'app/services/car/car.service';\nimport { TransactionDetailsService } from 'app/services/transaction-details/transaction-details.service';\n\n\n@Component({\n  selector: 'app-transaction-details',\n  templateUrl: './transaction-details.component.html',\n  styleUrls: ['./transaction-details.component.scss']\n})\nexport class TransactionDetailsComponent implements OnInit {\n  @Input()\n  investors$: Observable<any>;\n  @Input()\n  transactionTypes$: Observable<any>;\n  @Input()\n  expenses$: Observable<any>;\n  @Input()\n  carForm: FormGroup;\n  @Output()\n  opMessage = new EventEmitter();\n  // Type 'BehaviorSubject<number>' is not assignable to type 'number'.\n\n\n\n  sold:boolean;\n  message:string=\"\";\n  transactionDetailProfitandLoss=[];\n  transactionDetailsForm: FormGroup;\n  transactionDetails$:Observable<any>;\n  investorsExpensesAndPercent$:Observable<any>;\n  selectedCar_Id:number;\n\n  total_investment_balance :any;\n  available_balance:number;\n  investors_available_balance:number;\n  investors_total_expenses:number;\n  investors_total_investment:number;\n\n  constructor(\n    private fb: FormBuilder,\n    private carService:CarService,\n    private clientService: ClientService,\n    private transactionDetailsService:TransactionDetailsService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.carService.transactionDetail.subscribe(value =>{\n      this.getTransactionDetailsById(this.carService.selectedCarId.getValue());\n      this.selectedCar_Id = this.carService.selectedCarId.getValue();\n      this.transactionDetailsForm.reset();\n    });\n    this.carService.sold.subscribe(value =>{\n      if(value == true){\n        this.sold=true;\n        //Ensure this works only for Edit\n        //Assign mandatory fields\n        if(this.carForm.get('selling_price').value !=0 && this.carForm.get('selling_price').value != '' && this.carForm.get('selling_price').value != null){\n        this.transactionDetailsService.getTotalInvestmentAndBalanceByCar(this.carForm.get('car_id').value)\n        .subscribe(res => {\n          if(res.length > 0){\n            if(res[0].balance == 0)\n            {\n              this.getInvestorsExpensesAndPercent();\n            }\n            else{\n              window.scrollTo(0, 0);\n              this.message = \"Please enter an investment amount to match the cost price\",+res[0].balance;\n              this.opMessage.emit(this.message);\n              setTimeout(() => {\n                this.message = \"\";\n                this.opMessage.emit(this.message);\n              },5000);\n            }\n          }\n          else{\n            window.scrollTo(0, 0);\n            this.message = \"Please enter an investment amount to match the cost price\";\n            this.opMessage.emit(this.message);\n            setTimeout(() => {\n              this.message = \"\";\n              this.opMessage.emit(this.message);\n            },5000);\n          }\n        },\n        err =>{\n          console.log(\"GetTotalInvestmentAndBalanceByCar \", err);\n        });\n      }\n      else{\n        this.opMessage.emit(\"Please enter a Selling Price\");\n        setTimeout(() => {\n          this.opMessage.emit(\"\");\n        },5000);\n\n      }\n    }\n    else{\n      this.sold=false;\n      //Get Investors Expenses and investors_percent\n      this.clientService.getInvestorsExpensesAndPercent(this.carForm.get('car_id').value)\n      .subscribe(res => {\n        this.investorsExpensesAndPercent$ = res;\n        this.transactionDetailsService.deleteProfitOrLossTransactionDetails(this.carForm.get('car_id').value, this.investorsExpensesAndPercent$)\n        .subscribe(\n          res => {\n          },\n          err =>{\n\n          });\n        });\n      }\n    });\n\n  }//End of ng oninit\n\n  getInvestorsExpensesAndPercent(){\n    this.clientService.getInvestorsExpensesAndPercent(this.carForm.get('car_id').value)\n    .subscribe(res => {\n      this.investorsExpensesAndPercent$ = res;\n      this.deleteProfitOrLossTransactionDetails();\n    });\n  }\n\n  deleteProfitOrLossTransactionDetails(){\n    this.transactionDetailsService.deleteProfitOrLossTransactionDetails(this.carForm.get('car_id').value, this.investorsExpensesAndPercent$)\n    .subscribe(\n      res => {\n        //Create P & L Transaction Details\n        this.createProfitOrLossTransactionDetails();\n      },\n      err =>{\n\n      });\n    }\n\n    createProfitOrLossTransactionDetails(){\n      var credit = 0;\n      var debit = 0;\n      var transaction_type_id = 0;\n      var transaction_type_mode = '';\n      this.transactionDetailProfitandLoss=[];\n      //Loop through investors\n      this.investorsExpensesAndPercent$.forEach(record => {\n      console.log('Investors Expense and Investment Percent ',record);\n      //Caculate investors total income from the car\n      const investors_total_income_car = (parseFloat(record.investors_percent)/100) * parseInt(this.carForm.get('selling_price').value.toString().replace( /,/g, \"\" ));\n      //Calculate total cost of the car(Expenses + Cost Price)\n      const total_cost_price_car = parseInt(record.car_total_cost);\n      //Calculate profit ot loss of the car\n      const total_profit_car = parseInt(this.carForm.get('selling_price').value.toString().replace( /,/g, \"\" )) - total_cost_price_car;\n      //Calculate investors profit or loss and update available balance\n      const investors_total_profit_car = (parseFloat(record.investors_percent)/100) * total_profit_car; //Add to Transaction details as profit or loss\n\n      console.log(\"x \", Math.round(investors_total_income_car));//Add this to available balance\n      console.log(\"y \", Math.round(total_cost_price_car));\n      console.log(\"z \", Math.round(total_profit_car));\n      console.log(\"a \", Math.round(investors_total_profit_car));\n\n      //Add a new transaction detail Profit or Loss\n      if(investors_total_profit_car > 0){ //Profit\n      credit = investors_total_profit_car;\n      transaction_type_id = 3; //Profit\n      transaction_type_mode = 'credit';\n    }\n    else{\n      debit = investors_total_profit_car;\n      transaction_type_id = 4; //Loss\n      transaction_type_mode = 'debit';\n    }\n\n    //Enable Credit, Debit, Investor\n    this.transactionDetailsForm.get('credit').enable();\n    // this.transactionDetailsForm.get('credit').setValidators(Validators.required);\n    this.transactionDetailsForm.get('credit').updateValueAndValidity({emitEvent:false, onlySelf:true});\n    this.transactionDetailsForm.get('debit').enable();\n    // this.transactionDetailsForm.get('credit').setValidators(Validators.required);\n    this.transactionDetailsForm.get('debit').updateValueAndValidity({emitEvent:false, onlySelf:true});\n    this.transactionDetailsForm.get('investor_id').enable();\n    // this.transactionDetailsForm.get('credit').setValidators(Validators.required);\n    this.transactionDetailsForm.get('investor_id').updateValueAndValidity({emitEvent:false, onlySelf:true});\n\n    //Create ProfitOrLossTransactionDetails for each investor and update available balance\n    //Patch transaction detail values\n    this.transactionDetailsForm.patchValue({\n    investor_id : record.investor_id,\n    transaction_type_id: transaction_type_id,\n    transaction_type_mode:transaction_type_mode,\n    car_id: this.carForm.get('car_id').value,\n    credit: Math.round(credit),\n    debit: Math.round(debit),\n  });\n  this.transactionDetailsForm.updateValueAndValidity({emitEvent:false, onlySelf:true});\n  this.transactionDetailProfitandLoss.push(this.transactionDetailsForm.value);\n});//End of foreach\n\nthis.transactionDetailsService.createTransactionDetailsProfitAndLoss(this.transactionDetailProfitandLoss)\n.subscribe(\n  res => {\n    this.transactionDetailsForm.reset();\n  },\n  err => {\n    console.log(err);\n  },\n  () =>{\n  });\n}\n\ncreateForm() {\n  this.transactionDetailsForm = this.fb.group({\n    date: ['', Validators.required],\n    transaction_type_id: [Validators.required],\n    transaction_type_mode:['', Validators.required],\n    car_id:[Validators.required],\n    investor_id: [{value:'', disabled:true}],\n    expense_id:[{value:'', disabled:true}],\n    description:['', [Validators.maxLength(500)]],\n    credit:[{value:'', disabled:true}],\n    debit:[{value:'', disabled:true}],\n    cars_total_income:[''],\n    investors_available_balance:[''],\n    investors_total_expenses:[''],\n    cars_total_cost:['']\n  });\n  this.transactionDetailsForm.get('transaction_type_id')\n  .valueChanges.subscribe((transaction_type_id: string) => {\n    if(transaction_type_id == \"2\"){ //Expense\n      this.transactionDetailsForm.get('expense_id').enable();\n      this.transactionDetailsForm.get('expense_id').setValidators(Validators.required);\n      this.transactionDetailsForm.get('expense_id').updateValueAndValidity({emitEvent:false, onlySelf:true});\n    }\n    else{\n      this.transactionDetailsForm.get('expense_id').clearValidators();\n      this.transactionDetailsForm.get('expense_id').disable();\n      this.transactionDetailsForm.get('expense_id').updateValueAndValidity({emitEvent:false, onlySelf:true});\n    }\n  });\n\n  this.carService.selectedCarId\n  .subscribe(\n    res => {\n      this.selectedCar_Id = res;\n      if(this.carService.selectedMode == \"Edit\"){\n        this.getTransactionDetailsById(res);\n      }\n    },\n    err => {\n\n    }\n  );\n\n}\ngetSelectedTransactionTypeMode(transactionTypeId){\n  let transactionType;\n  this.transactionTypes$.subscribe(res=>{\n    transactionType = res.filter(tt => tt.transaction_type_id == transactionTypeId);\n    this.transactionDetailsForm.patchValue({\n      transaction_type_mode:transactionType[0].mode,\n    });\n\n    if(transactionType[0].mode == \"credit\"){\n      this.transactionDetailsForm.get('credit').enable();\n      this.transactionDetailsForm.get('credit').setValidators(Validators.required);\n      this.transactionDetailsForm.get('credit').updateValueAndValidity({emitEvent:false, onlySelf:true});\n\n      this.transactionDetailsForm.patchValue({'debit':''  });\n      this.transactionDetailsForm.get('debit').clearValidators();\n      this.transactionDetailsForm.get('debit').disable();\n      this.transactionDetailsForm.get('debit').updateValueAndValidity({emitEvent:false, onlySelf:true});\n\n      this.transactionDetailsForm.get('investor_id').clearValidators();\n      this.transactionDetailsForm.get('investor_id').disable();\n      this.transactionDetailsForm.get('investor_id').updateValueAndValidity({emitEvent:false, onlySelf:true});\n    }\n    else{\n      this.transactionDetailsForm.get('debit').enable();\n      this.transactionDetailsForm.get('debit').setValidators(Validators.required);\n      this.transactionDetailsForm.get('debit').updateValueAndValidity({emitEvent:false, onlySelf:true});\n\n      this.transactionDetailsForm.patchValue({'credit':''});\n      this.transactionDetailsForm.get('credit').clearValidators();\n      this.transactionDetailsForm.get('credit').disable();\n      this.transactionDetailsForm.get('credit').updateValueAndValidity({emitEvent:false, onlySelf:true});\n\n      //Enable Investor\n      this.transactionDetailsForm.get('investor_id').enable();\n      this.transactionDetailsForm.get('investor_id').setValidators(Validators.required);\n      this.transactionDetailsForm.get('investor_id').updateValueAndValidity({emitEvent:false, onlySelf:true});\n\n    }\n  });\n}\n\ngetTransactionDetailsById(car_id:any){\n  this.transactionDetails$ = this.transactionDetailsService.getTransactionDetailsById(car_id);\n}\n\n//This function will create a transaction detail\n//In case of Credit - It will also update the total_income of the car\n//In case of Debit - It will update available_balance and total_expenses of the investors\n//and will update the total cost of the car(debit)\ncreateTransactionDetails(){\nconst investor_id = parseInt(this.transactionDetailsForm.get('investor_id').value);\nconst car_id = 0;\nthis.transactionDetailsForm.patchValue({\n  car_id:parseInt(this.carForm.get('car_id').value),\n});\n\nif(this.transactionDetailsForm.get('transaction_type_mode').value == 'debit'){\n  if(parseInt(this.transactionDetailsForm.get('debit').value.replace( /,/g, \"\" )) <= this.investors_available_balance){\n    const total_cost = this.carForm.get('total_cost').value + parseInt(this.transactionDetailsForm.get('debit').value.replace( /,/g, \"\" ));\n\n    this.transactionDetailsForm.patchValue({\n      'investors_available_balance':this.available_balance,\n      'investors_total_expenses':this.investors_total_expenses,\n      'cars_total_cost':total_cost\n    });\n\n    this.transactionDetailsService.createTransactionDetails(this.transactionDetailsForm.value)\n    .subscribe(\n      res => {\n        this.transactionDetailsForm.reset();\n      },\n      err => {\n        console.log(err);\n      },\n      () =>{\n\n      }\n    );\n  }\n\n  else{\n    window.scrollTo(0, 0);\n    this.message = \"The selected investor's available balance is Rs \" +this.investors_available_balance + \", which is less than the entered amount\";\n    setTimeout(() => {\n      this.message =\"\";\n    },5000);\n  }\n}\n\nelse{//credit\n  const total_income = this.carForm.get('total_income').value + parseInt(this.transactionDetailsForm.get('credit').value.replace( /,/g, \"\" ));\n  this.transactionDetailsForm.patchValue({\n    'cars_total_income':total_income,\n  });\n  this.transactionDetailsService.createTransactionDetails(this.transactionDetailsForm.value)\n  .subscribe(\n    res => {\n      this.transactionDetailsForm.reset();\n      this.transactionDetailsService.refreshList.next(true);\n    },\n    err => {\n      console.log(err);\n    },\n    () =>{\n\n    }\n  );\n}\n}\n\nonSubmit(){\n  this.transactionDetailsForm.patchValue({\n    car_id:this.selectedCar_Id,\n  });\n\n  const mode = this.transactionDetailsForm.get('transaction_type_mode').value;\n  if(mode == 'credit'){\n    // Since the credit goes to the Car and not the investor, create TD\n    this.createTransactionDetails();\n  }\n  else{\n    this.getAvailableBalanceTotalExpensesTotalInvestment();\n  }\n}\ngetAvailableBalanceTotalExpensesTotalInvestment(){\n  if (this.transactionDetailsForm.valid) {\n    const investor_id = parseInt(this.transactionDetailsForm.get('investor_id').value);\n    this.clientService.getAvailableBalance(investor_id).subscribe(res => {\n      this.total_investment_balance = res;\n      if(res.total_investment != null){\n        this.investors_total_investment = parseInt(res.total_investment.toString().replace( /,/g, \"\" ));\n      }\n      if(res.total_expenses != null){\n        this.investors_total_expenses = parseInt(res.total_expenses.toString().replace( /,/g, \"\" ));\n      }\n\n      if(this.transactionDetailsForm.get('transaction_type_id').value == 1){ //If it is an Investment\n        this.checkInvestmentBalance();\n      }\n      else{\n        this.investors_total_expenses = parseInt(res.total_expenses) + parseInt(this.transactionDetailsForm.get('debit').value.toString().replace( /,/g, \"\" ));\n        this.available_balance = parseInt(res.total_investment) - this.investors_total_expenses;\n        this.createTransactionDetails();\n      }\n    },\n    err => {\n      console.log(\"Get Available Balance \",err);\n    });\n  }\n}\n//Get Investment amount balance investment amount\ncheckInvestmentBalance() :any {\nvar invalid_amount;\nthis.transactionDetailsService.getTotalInvestmentAndBalanceByCar(this.carForm.get('car_id').value)\n.subscribe(res => {\n\n  if(res.length > 0 ){\n    const investment_amount = parseInt(this.transactionDetailsForm.get('debit').value.toString().replace( /,/g, \"\" ));\n    if(investment_amount > parseInt(res[0].balance)){\n      invalid_amount = true;\n      this.message = \"The maximum amount cannot exceed the balance of Rs. \" +res[0].balance;\n      setTimeout(() => {\n        this.message = \"\";\n      },5000);\n\n    }\n    else{\n      invalid_amount = false;\n    }\n  }\n  else{ //If there are no rows present, check amount against cost price.\n    const investment_amount = parseInt(this.transactionDetailsForm.get('debit').value.toString().replace( /,/g, \"\" ));\n    const cost_price = parseInt(this.carForm.get('cost_price').value.toString().replace( /,/g, \"\" ));\n    if(investment_amount > cost_price){\n      invalid_amount = true;\n      this.message = \"The maximum amount cannot exceed the balance of Rs. \" +cost_price;\n      setTimeout(() => {\n        this.message = \"\";\n      },5000);\n\n    }\n    else{\n      invalid_amount = false;\n    }\n  }\n},\nerr =>{\n  console.log(\"Check Investment balance \",err);\n},\n() =>{\n  if(invalid_amount == false){\n    this.investors_total_expenses = parseInt(this.total_investment_balance.total_expenses) + parseInt(this.transactionDetailsForm.get('debit').value.toString().replace( /,/g, \"\" ));\n    this.available_balance = parseInt(this.total_investment_balance.total_investment) - this.investors_total_expenses;\n    this.createTransactionDetails();\n  }\n});\n}\nvalidateAmountAgainstBalance(){\n  const investor_id = this.transactionDetailsForm.get('investor_id').value;\n  this.clientService.getAvailableBalance(investor_id).subscribe(res => {\n    this.investors_available_balance = (parseInt(res.available_balance.toString().replace( /,/g, \"\" )));\n  }, err =>{\n  });\n}\nformatCurrency(control){\n  var val = control.value;\n  let x = val.toString().replace( /,/g, \"\" );\n  var afterPoint = '';\n  if(x.indexOf('.') > 0)\n  afterPoint = x.substring(x.indexOf('.'),x.length);\n  x = Math.floor(x);\n  x = x.toString();\n  var lastThree = x.substring(x.length-3);\n  var otherNumbers = x.substring(0,x.length-3);\n  if(otherNumbers != '')\n  lastThree = ',' + lastThree;\n  var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree + afterPoint;\n  control.setValue(res);\n}\n}\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"clientForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputClientName\\\" class=\\\"col-sm-3 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputClientName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"clientForm.controls.name.touched && clientForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"clientForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputPhone\\\" class=\\\"col-sm-3 col-form-label\\\">Phone</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputPhone\\\" formControlName=\\\"phone\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"clientForm.controls.name.touched && clientForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"clientForm.controls.phone\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputEmail\\\" class=\\\"col-sm-3 col-form-label\\\">Email</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputEmail\\\" formControlName=\\\"email\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"clientForm.controls.name.touched && clientForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"clientForm.controls.email\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAddress\\\" class=\\\"col-sm-3 col-form-label\\\">Address</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputAddress\\\" formControlName=\\\"address\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"clientForm.controls.name.touched && clientForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"clientForm.controls.address\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputCity\\\" class=\\\"col-sm-3 col-form-label\\\">City</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputCity\\\" formControlName=\\\"city\\\">\\n              <app-control-messages [control]=\\\"clientForm.controls.city\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputState\\\" class=\\\"col-sm-3 col-form-label\\\">State</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <!-- <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputState\\\" formControlName=\\\"state\\\"> -->\\n              <select class=\\\"form-control\\\" id=\\\"sel1\\\" formControlName=\\\"state\\\">\\n                <option *ngFor=\\\"let state of clientService.states$\\\" [value]=\\\"state.id\\\" >{{state.name}}</option>\\n\\n              </select>\\n              <app-control-messages [control]=\\\"clientForm.controls.state\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputPin\\\" class=\\\"col-sm-3 col-form-label\\\">Pin</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputPin\\\" formControlName=\\\"pin\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"clientForm.controls.name.touched && clientForm.controls.name.errors.required\\\">Required</p> -->\\n              <!-- <app-control-messages [control]=\\\"clientForm.controls.pin\\\"></app-control-messages> -->\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-check\\\">\\n          <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"inputInvestor\\\" formControlName=\\\"is_investor\\\">\\n          <label class=\\\"form-check-label\\\" for=\\\"inputInvestor\\\">Is Investor?</label>\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"clientForm.controls.is_investor.value == true\\\">\\n          <label class=\\\"col-sm-3 col-form-label\\\">Investment Records</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <table *ngIf=\\\"clientForm.controls.investment_records.length >=1\\\" class=\\\"table\\\" >\\n                <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n                  <tr>\\n                    <th>Date</th>\\n                    <th class=\\\"text-right\\\">Amount</th>\\n                    <th class=\\\"text-center\\\">Void</th>\\n                  </tr>\\n                </thead>\\n                <tbody>\\n                  <tr  formArrayName=\\\"investment_records\\\"\\n                  *ngFor=\\\"let item of clientForm.get('investment_records').controls; let i = index;\\\" >\\n                  <td [formGroupName]=\\\"i\\\">  <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"date\\\" placeholder=\\\"Date\\\" [readonly]=\\\"item.controls.is_disabled.value == true\\\"></td>\\n                  <td [formGroupName]=\\\"i\\\" class=\\\"text-right\\\">  <input type=\\\"text\\\" class=\\\"form-control text-right\\\" formControlName=\\\"amount\\\" placeholder=\\\"Amount\\\" [readonly]=\\\"item.controls.is_disabled.value == true\\\" (keyup)=\\\"formatCurrency(item.controls.amount)\\\"></td>\\n                  <td [formGroupName]=\\\"i\\\" class=\\\"text-center\\\">\\n                    <input *ngIf=\\\"item.controls.is_void_disabled.value == false\\\" type=\\\"checkbox\\\" class=\\\"form-check-input text-center\\\" formControlName=\\\"is_void\\\" >\\n                    <span *ngIf=\\\"item.controls.is_void_disabled.value == true\\\">Void</span>\\n                  </td>\\n                </tr>\\n                <tr class=\\\"bg-highlight\\\">\\n                  <td><span class=\\\"bold\\\">TOTAL INVESTMENT</span></td>\\n                  <td class=\\\"text-right\\\"><input type=\\\"text\\\" class=\\\"form-control border-none text-right\\\" formControlName=\\\"total_investment\\\" readonly></td>\\n                  <td></td>\\n                </tr>\\n              </tbody>\\n            </table>\\n\\n            <button type=\\\"button\\\" class=\\\"btn btn-custom\\\" (click) = \\\"addItem()\\\"><i class=\\\"fa fa-plus\\\"></i></button>\\n          </div>\\n        </div>\\n      </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n            <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"clientForm.controls.name.value\\\" (isDelete)=\\\"deleteClient($event)\\\"></app-simple-modal>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Client } from 'app/data-model';\nimport { ClientService } from 'app/services/client/client.service';\nimport { CommonService } from 'app/services/common/common.service';\n\n@Component({\n  selector: 'app-client-form',\n  templateUrl: './client-form.component.html',\n  styleUrls: ['./client-form.component.scss']\n})\nexport class ClientFormComponent implements OnInit {\n  title : string = \"Create Client\";\n  module :string=\"client\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  clientForm: FormGroup;\n  selectedClient_Id: any;\n  selectedMode: any;\n  submitted = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private clientService:ClientService,\n    private commonService: CommonService,\n    private router:Router,\n    private route:ActivatedRoute) {\n\n    }\n\n    createForm() {\n      this.clientForm = this.fb.group({\n        client_id: [''],\n        name: ['', [Validators.required,Validators.maxLength(50)]],\n        phone: ['', [Validators.required,Validators.maxLength(12)]],\n        email: ['', [Validators.maxLength(50)]],\n        address: ['', [Validators.maxLength(100)]],\n        city: ['', [Validators.maxLength(50)]],\n        state: [],\n        pin: ['',Validators.maxLength(10)],\n        is_investor:[false],\n        investment_records: this.fb.array([]),\n        total_investment:[0],\n        total_expenses:[0],\n        available_balance:[0]\n      });\n    }\n\n    createInvestmentRecord(): FormGroup {\n      return this.fb.group({\n        date: [],\n        amount: [],\n        is_void: [false],\n        is_disabled:[false],\n        is_void_disabled:[false]\n      });\n    }\n\n    addItem(): void {\n      const control = <FormArray> this.clientForm.controls['investment_records'];\n      control.push(this.createInvestmentRecord());\n    }\n\n    onSubmit(){\n      this.submitted = true;\n      if (this.clientForm.valid) {\n        if(this.clientService.selectedMode == 'Create'){\n          this.createClient();\n        }\n        else if (this.clientService.selectedMode == 'Edit' || this.clientService.selectedMode == 'Get'){\n          this.updateClient();\n        }\n      }\n    }\n\n    getClientById(client_id:number){\n      this.clientService.getClientById(client_id)\n      .subscribe(\n        res => {\n          this.patchForm(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n\n    patchForm(res){\n        //this.clientForm.patchValue(res);\n      this.clientForm.patchValue({\n        client_id: res.client_id,\n        name: res.name,\n        phone: res.phone,\n        email: res.email,\n        address: res.address,\n        city: res.city,\n        state: res.state,\n        pin: res.pin,\n        is_investor: res.is_investor,\n        total_investment: res.total_investment\n      });\n      if(res.investment_records != null){\n        //Disable is_investor if investment records exist\n        // this.clientForm.get('is_investor').disable();\n\n        let control = <FormArray>this.clientForm.controls.investment_records;\n        //Clear Form Array\n        while (control.length !== 0) {\n        control.removeAt(0)\n      }\n      //Patch Investment Records Array\n      res.investment_records.forEach(record => {\n      let is_void_disabled = false;\n      if(record.is_void == true){\n        is_void_disabled=true;\n      }\n      control.push(this.fb.group({date: record.date, amount: record.amount, is_void:record.is_void, is_disabled:true, is_void_disabled:is_void_disabled}))\n    })\n  }\n}\n\ncreateClient(){\n  if(this.clientForm.controls.is_investor.value == true){\n  this.clientForm.patchValue({\n    total_investment: this.getTotalInvestment(),\n    available_balance: this.getTotalInvestment()\n  });\n}\n\n  this.clientService.createClient(this.clientForm.value)\n  .subscribe(\n    res => {\n      this.clientService.refreshList.next(true);\n      this.router.navigate(['/client/add']);\n      this.clientForm.reset();\n    },\n    err => {\n      console.log(err);\n    }\n  );\n}\n\ngetTotalInvestment(){\n  let total_investment = 0;\n  this.clientForm.controls.investment_records.value.forEach(record => {\n    if(record.is_void == false){\n    total_investment = total_investment + parseInt(record.amount.replace( /,/g, \"\" ));\n  }\n  });\n  return total_investment;\n}\n\nupdateClient(){\n  let x = this.getTotalInvestment();\n  let y = this.clientForm.controls.total_expenses.value;\n\n  this.clientForm.patchValue({\n    total_investment: x,\n    available_balance: x-y,\n  });\n\n  this.clientService.updateClient(this.clientForm.value)\n  .subscribe(\n    res => {\n      this.clientService.refreshList.next(true);\n      this.router.navigate(['/client/add']);\n    },\n    err => {\n      console.log(err);\n    }\n  );\n}\n\ndeleteClient(event){\n  if(this.selectedClient_Id){\n    this.clientService.deleteClient(this.selectedClient_Id).subscribe(\n      res => {\n        this.clientService.refreshList.next(true);\n        this.router.navigate(['/client/add']);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n  else{\n    this.clientForm.reset();\n  }\n}\nformatCurrency(control){\n  var val = control.value;\n  let x = val.toString().replace( /,/g, \"\" );\n  var afterPoint = '';\n  if(x.indexOf('.') > 0)\n  afterPoint = x.substring(x.indexOf('.'),x.length);\n  x = Math.floor(x);\n  x=x.toString();\n  var lastThree = x.substring(x.length-3);\n  var otherNumbers = x.substring(0,x.length-3);\n  if(otherNumbers != '')\n  lastThree = ',' + lastThree;\n  var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree + afterPoint;\n  control.setValue(res);\n}\nngOnInit() {\n  this.createForm();\n  this.clientService.selectedClientId\n  .subscribe(\n    res => {\n      this.selectedClient_Id = res;\n      if(this.clientService.selectedMode == \"Get\"){\n        this.title = \"Edit Client\";\n        this.mode = \"delete\";\n        this.getClientById(res);\n      }\n    },\n    err => {\n\n    }\n  );\n}\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchClients($event)\\\" (isCreate)=\\\"createClient('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n\\n    <table class=\\\"table\\\">\\n\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let client of results$ | async'>\\n          <th scope=\\\"row\\\">{{client.client_id}}</th>\\n          <td>{{client.name}}</td>\\n          <td class=\\\"pointer\\\" type=\\\"button\\\" (click)=\\\"selectClient(client.client_id, 'Get')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Client,Make,Model } from 'app/data-model';\nimport { ClientService } from 'app/services/client/client.service';\n\n\n@Component({\n  selector: 'app-client-list',\n  templateUrl: './client-list.component.html',\n  styleUrls: ['./client-list.component.scss']\n})\nexport class ClientListComponent implements OnInit {\n  @Input()\n  results$: Observable<Client>;\n\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private clientService:ClientService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/client/add']);\n  }\n\n  searchClients(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createClient(mode:any){\n    this.clientService.selectedMode = mode;\n    this.router.navigate(['/client/add']);\n  }\n\n  //On Click of the Edit Button\n  selectClient(client_id:number, mode:any){\n    this.clientService.selectedMode = mode;\n    this.router.navigate(['/client/edit']);\n    setTimeout(() => {\n      this.clientService.selectedClientId.next(client_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComponent} from './client.component';\nimport { ClientListComponent} from './client-list/client-list.component';\nimport { ClientFormComponent} from './client-form/client-form.component';\n\nconst clientRoutes: Routes = [\n  {\n    path: 'client',\n    component: ClientComponent,\n    children: [\n        {path: 'list',component: ClientListComponent},\n        {path: 'add', component: ClientFormComponent},\n        {path: 'edit', component: ClientFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(clientRoutes)],\n  exports: [RouterModule]\n})\n export class ClientRoutingModule { }\n","module.exports = \"\\n<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n\\n  <div class=\\\"col-4\\\">\\n  <app-client-list (searchTerm)=\\\"searchClients($event)\\\" [results$]=\\\"clients$\\\"></app-client-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Client } from 'app/data-model';\nimport { ClientService } from 'app/services/client/client.service';\nimport { CommonService } from 'app/services/common/common.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent implements OnInit {\n  title : string = \"Client\";\n  selectedClient : Client;\n\n  clients$: Observable<Client>;\n\n  constructor(private fb: FormBuilder, private clientService:ClientService,private commonService:CommonService, private router: Router, private route: ActivatedRoute) {\nthis.getStates();\n  }\n\n  ngOnInit() {\n    this.getClients();\n\n    this.clientService.refreshList.subscribe(\n      res=>{\n          this.getClients();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n\n  getClients()  {\n    this.clients$ = this.clientService.getClients();\n  }\n\n  searchClients(searchTerm){\n    if(searchTerm){\n      this.clients$ = this.clientService.searchClients(searchTerm);\n    }\n    else{\n      this.clients$ = new EmptyObservable();\n    }\n  }\n\n  getStates(){\n    this.commonService.getStates().subscribe(res=>{\n    this.clientService.states$ = res.RestResponse.result;\n  })\n}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ClientRoutingModule } from './client-routing.module';\nimport { ClientComponent } from './client.component';\nimport { ClientListComponent } from './client-list/client-list.component';\nimport { ClientFormComponent } from './client-form/client-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ClientRoutingModule,\n\n  ],\n  declarations: [\n    ClientComponent,\n    ClientListComponent,\n    ClientFormComponent,\n  ],\n  // providers: [ClientService],\n})\nexport class ClientModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"colorForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputColorName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputColorName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"colorForm.controls.name.touched && colorForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"colorForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"colorForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"colorForm.controls.name.value\\\" (isDelete)=\\\"deleteColor($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Color } from 'app/data-model';\nimport { ColorService } from 'app/services/color/color.service';\n\n@Component({\n  selector: 'app-color-form',\n  templateUrl: './color-form.component.html',\n  styleUrls: ['./color-form.component.scss']\n})\nexport class ColorFormComponent implements OnInit {\n  title : string = \"Create Color\";\n  module :string=\"color\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  colorForm: FormGroup;\n  selectedColor_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private colorService:ColorService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.colorForm = this.fb.group({\n      color_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.colorForm.valid) {\n      if(this.colorService.selectedMode == 'Create'){\n        this.createColor();\n      }\n      else if (this.colorService.selectedMode == 'Edit'){\n        this.updateColor();\n      }\n    }\n  }\n\n  getColorById(color_id:number){\n    this.colorService.getColorById(color_id)\n    .subscribe(\n        res => {\n        this.colorForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createColor(){\n    this.colorService.createColor(this.colorForm.value)\n    .subscribe(\n      res => {\n        this.colorService.refreshList.next(true);\n        this.colorForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateColor(){\n    this.colorService.updateColor(this.colorForm.value)\n    .subscribe(\n      res => {\n          this.colorService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteColor(event){\n    if(this.selectedColor_Id)\n    {\n      this.colorService.deleteColor(this.selectedColor_Id).subscribe(\n        res => {\n          this.colorService.refreshList.next(true);\n          this.router.navigate(['/color/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.colorForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.colorService.selectedColorId\n    .subscribe(\n      res => {\n        this.selectedColor_Id = res;\n        if(this.colorService.selectedMode == \"Edit\"){\n          this.title = \"Edit Color\"\n          this.mode = \"delete\";\n          this.getColorById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchColors($event)\\\" (isCreate)=\\\"createColor('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let color of results$ | async'>\\n          <th scope=\\\"row\\\">{{color.color_id}}</th>\\n          <td>{{color.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectColor(color.color_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Color } from 'app/data-model';\nimport { ColorService } from 'app/services/color/color.service';\n\n@Component({\n  selector: 'app-color-list',\n  templateUrl: './color-list.component.html',\n  styleUrls: ['./color-list.component.scss']\n})\nexport class ColorListComponent implements OnInit {\n  @Input()\n  results$: Observable<Color>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private colorService:ColorService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/color/add']);\n  }\n\n  searchColors(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createColor(mode:any){\n    this.colorService.selectedMode = mode;\n    this.router.navigate(['/color/add']);\n  }\n\n  //On Click of the Edit Button\n  selectColor(color_id:number, mode:any){\n    this.colorService.selectedMode = mode;\n    this.router.navigate(['/color/edit']);\n    setTimeout(() => {\n      this.colorService.selectedColorId.next(color_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ColorComponent} from './color.component';\nimport { ColorListComponent} from './color-list/color-list.component';\nimport { ColorFormComponent} from './color-form/color-form.component';\n\nconst colorRoutes: Routes = [\n  {\n    path: 'color',\n    component: ColorComponent,\n    children: [\n        {path: 'list',component: ColorListComponent},\n        {path: 'add', component: ColorFormComponent},\n        {path: 'edit', component: ColorFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(colorRoutes)],\n  exports: [RouterModule]\n})\n export class ColorRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-color-list (searchTerm)=\\\"searchColors($event)\\\" [results$]=\\\"colors$\\\"></app-color-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Color } from 'app/data-model';\nimport { ColorService } from 'app/services/color/color.service';\n\n@Component({\n  selector: 'app-color',\n  templateUrl: './color.component.html',\n  styleUrls: ['./color.component.scss']\n})\nexport class ColorComponent implements OnInit {\n  title : string = \"Color\";\n  selectedColor : Color;\n\n  colors$: Observable<Color>;\n\n  constructor(private fb: FormBuilder, private colorService:ColorService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getColors();\n    this.colorService.refreshList.subscribe(\n      res=>{\n          this.getColors();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getColors()  {\n    this.colors$ = this.colorService.getColors();\n  }\n\n  searchColors(searchTerm){\n    if(searchTerm){\n      this.colors$ = this.colorService.searchColors(searchTerm);\n    }\n    else{\n      this.colors$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ColorRoutingModule } from './color-routing.module';\nimport { ColorComponent } from './color.component';\nimport { ColorListComponent } from './color-list/color-list.component';\nimport { ColorFormComponent } from './color-form/color-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ColorRoutingModule,\n  ],\n  declarations: [\n    ColorComponent,\n    ColorListComponent,\n    ColorFormComponent,\n  ],\n  // providers: [ColorService],\n})\nexport class ColorModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"expenseForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputExpenseName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputExpenseName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"expenseForm.controls.name.touched && expenseForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"expenseForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"expenseForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"expenseForm.controls.name.value\\\" (isDelete)=\\\"deleteExpense($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Expense } from 'app/data-model';\nimport { ExpenseService } from 'app/services/expense/expense.service';\n\n@Component({\n  selector: 'app-expense-form',\n  templateUrl: './expense-form.component.html',\n  styleUrls: ['./expense-form.component.scss']\n})\nexport class ExpenseFormComponent implements OnInit {\n  title : string = \"Create Expense\";\n  module :string=\"expense\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  expenseForm: FormGroup;\n  selectedExpense_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private expenseService:ExpenseService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.expenseForm = this.fb.group({\n      expense_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.expenseForm.valid) {\n      if(this.expenseService.selectedMode == 'Create'){\n        this.createExpense();\n      }\n      else if (this.expenseService.selectedMode == 'Edit'){\n        this.updateExpense();\n      }\n    }\n  }\n\n  getExpenseById(expense_id:number){\n    this.expenseService.getExpenseById(expense_id)\n    .subscribe(\n        res => {\n        this.expenseForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createExpense(){\n    this.expenseService.createExpense(this.expenseForm.value)\n    .subscribe(\n      res => {\n        this.expenseService.refreshList.next(true);\n        this.expenseForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateExpense(){\n    this.expenseService.updateExpense(this.expenseForm.value)\n    .subscribe(\n      res => {\n          this.expenseService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteExpense(event){\n    if(this.selectedExpense_Id)\n    {\n      this.expenseService.deleteExpense(this.selectedExpense_Id).subscribe(\n        res => {\n          this.expenseService.refreshList.next(true);\n          this.router.navigate(['/expense/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.expenseForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.expenseService.selectedExpenseId\n    .subscribe(\n      res => {\n        this.selectedExpense_Id = res;\n        if(this.expenseService.selectedMode == \"Edit\"){\n          this.title = \"Edit Expense\";\n          this.mode = \"delete\";\n          this.getExpenseById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchExpenses($event)\\\" (isCreate)=\\\"createExpense('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let expense of results$ | async'>\\n          <th scope=\\\"row\\\">{{expense.expense_id}}</th>\\n          <td>{{expense.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectExpense(expense.expense_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Expense } from 'app/data-model';\nimport { ExpenseService } from 'app/services/expense/expense.service';\n\n@Component({\n  selector: 'app-expense-list',\n  templateUrl: './expense-list.component.html',\n  styleUrls: ['./expense-list.component.scss']\n})\nexport class ExpenseListComponent implements OnInit {\n  @Input()\n  results$: Observable<Expense>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private expenseService:ExpenseService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/expense/add']);\n  }\n\n  searchExpenses(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createExpense(mode:any){\n    this.expenseService.selectedMode = mode;\n    this.router.navigate(['/expense/add']);\n  }\n\n  //On Click of the Edit Button\n  selectExpense(expense_id:number, mode:any){\n    this.expenseService.selectedMode = mode;\n    this.router.navigate(['/expense/edit']);\n    setTimeout(() => {\n      this.expenseService.selectedExpenseId.next(expense_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ExpenseComponent} from './expense.component';\nimport { ExpenseListComponent} from './expense-list/expense-list.component';\nimport { ExpenseFormComponent} from './expense-form/expense-form.component';\n\nconst expenseRoutes: Routes = [\n  {\n    path: 'expense',\n    component: ExpenseComponent,\n    children: [\n        {path: 'list',component: ExpenseListComponent},\n        {path: 'add', component: ExpenseFormComponent},\n        {path: 'edit', component: ExpenseFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(expenseRoutes)],\n  exports: [RouterModule]\n})\n export class ExpenseRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-expense-list (searchTerm)=\\\"searchExpenses($event)\\\" [results$]=\\\"expenses$\\\"></app-expense-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Expense } from 'app/data-model';\nimport { ExpenseService } from 'app/services/expense/expense.service';\n\n@Component({\n  selector: 'app-expense',\n  templateUrl: './expense.component.html',\n  styleUrls: ['./expense.component.scss']\n})\nexport class ExpenseComponent implements OnInit {\n  title : string = \"Expense\";\n  selectedExpense : Expense;\n\n  expenses$: Observable<Expense>;\n\n  constructor(private fb: FormBuilder, private expenseService:ExpenseService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getExpenses();\n    this.expenseService.refreshList.subscribe(\n      res=>{\n          this.getExpenses();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getExpenses()  {\n    this.expenses$ = this.expenseService.getExpenses();\n  }\n\n  searchExpenses(searchTerm){\n    if(searchTerm){\n      this.expenses$ = this.expenseService.searchExpenses(searchTerm);\n    }\n    else{\n      this.expenses$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ExpenseRoutingModule } from './expense-routing.module';\nimport { ExpenseComponent } from './expense.component';\nimport { ExpenseListComponent } from './expense-list/expense-list.component';\nimport { ExpenseFormComponent } from './expense-form/expense-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ExpenseRoutingModule,\n  ],\n  declarations: [\n    ExpenseComponent,\n    ExpenseListComponent,\n    ExpenseFormComponent,\n  ],\n  // providers: [ExpenseService],\n})\nexport class ExpenseModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"fuelTypeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputFuelTypeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputFuelTypeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"fuelTypeForm.controls.name.touched && fuelTypeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"fuelTypeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"fuelTypeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"fuelTypeForm.controls.name.value\\\" (isDelete)=\\\"deleteFuelType($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { FuelType } from 'app/data-model';\nimport { FuelTypeService } from 'app/services/fuel-type/fuel-type.service';\n\n@Component({\n  selector: 'app-fuelType-form',\n  templateUrl: './fuel-type-form.component.html',\n  styleUrls: ['./fuel-type-form.component.scss']\n})\nexport class FuelTypeFormComponent implements OnInit {\n  title : string = \"Create Fuel Type\";\n  module :string=\"fuel type\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  fuelTypeForm: FormGroup;\n  selectedFuelType_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private fuelTypeService:FuelTypeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.fuelTypeForm = this.fb.group({\n      fuel_type_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.fuelTypeForm.valid) {\n      if(this.fuelTypeService.selectedMode == 'Create'){\n        this.createFuelType();\n      }\n      else if (this.fuelTypeService.selectedMode == 'Edit'){\n        this.updateFuelType();\n      }\n    }\n  }\n\n  getFuelTypeById(fuelType_id:number){\n    this.fuelTypeService.getFuelTypeById(fuelType_id)\n    .subscribe(\n        res => {\n        this.fuelTypeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createFuelType(){\n    this.fuelTypeService.createFuelType(this.fuelTypeForm.value)\n    .subscribe(\n      res => {\n        this.fuelTypeService.refreshList.next(true);\n        this.fuelTypeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateFuelType(){\n    this.fuelTypeService.updateFuelType(this.fuelTypeForm.value)\n    .subscribe(\n      res => {\n          this.fuelTypeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteFuelType(event){\n    if(this.selectedFuelType_Id)\n    {\n      this.fuelTypeService.deleteFuelType(this.selectedFuelType_Id).subscribe(\n        res => {\n          this.fuelTypeService.refreshList.next(true);\n          this.router.navigate(['/fuelType/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.fuelTypeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.fuelTypeService.selectedFuelTypeId\n    .subscribe(\n      res => {\n        this.selectedFuelType_Id = res;\n        if(this.fuelTypeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Fuel Type\";\n          this.mode = \"delete\";\n          this.getFuelTypeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchFuelTypes($event)\\\" (isCreate)=\\\"createFuelType('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let fuelType of results$ | async'>\\n          <th scope=\\\"row\\\">{{fuelType.fuel_type_id}}</th>\\n          <td>{{fuelType.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectFuelType(fuelType.fuel_type_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { FuelType } from 'app/data-model';\nimport { FuelTypeService } from 'app/services/fuel-type/fuel-type.service';\n\n@Component({\n  selector: 'app-fuelType-list',\n  templateUrl: './fuel-type-list.component.html',\n  styleUrls: ['./fuel-type-list.component.scss']\n})\nexport class FuelTypeListComponent implements OnInit {\n  @Input()\n  results$: Observable<FuelType>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private fuelTypeService:FuelTypeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/fuelType/add']);\n  }\n\n  searchFuelTypes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createFuelType(mode:any){\n    this.fuelTypeService.selectedMode = mode;\n    this.router.navigate(['/fuelType/add']);\n  }\n\n  //On Click of the Edit Button\n  selectFuelType(fuelType_id:number, mode:any){\n    this.fuelTypeService.selectedMode = mode;\n    this.router.navigate(['/fuelType/edit']);\n    setTimeout(() => {\n      this.fuelTypeService.selectedFuelTypeId.next(fuelType_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FuelTypeComponent} from './fuel-type.component';\nimport { FuelTypeListComponent} from './fuel-type-list/fuel-type-list.component';\nimport { FuelTypeFormComponent} from './fuel-type-form/fuel-type-form.component';\n\nconst fuelTypeRoutes: Routes = [\n  {\n    path: 'fuelType',\n    component: FuelTypeComponent,\n    children: [\n        {path: 'list',component: FuelTypeListComponent},\n        {path: 'add', component: FuelTypeFormComponent},\n        {path: 'edit', component: FuelTypeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(fuelTypeRoutes)],\n  exports: [RouterModule]\n})\n export class FuelTypeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-fuelType-list (searchTerm)=\\\"searchFuelTypes($event)\\\" [results$]=\\\"fuelTypes$\\\"></app-fuelType-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { FuelType } from 'app/data-model';\nimport { FuelTypeService } from 'app/services/fuel-type/fuel-type.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './fuel-type.component.html',\n  styleUrls: ['./fuel-type.component.scss']\n})\nexport class FuelTypeComponent implements OnInit {\n  title : string = \"Fuel Type\";\n  selectedFuelType : FuelType;\n\n  fuelTypes$: Observable<FuelType>;\n\n  constructor(private fb: FormBuilder, private fuelTypeService:FuelTypeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getFuelTypes();\n    this.fuelTypeService.refreshList.subscribe(\n      res=>{\n          this.getFuelTypes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getFuelTypes()  {\n    this.fuelTypes$ = this.fuelTypeService.getFuelTypes();\n  }\n\n  searchFuelTypes(searchTerm){\n    if(searchTerm){\n      this.fuelTypes$ = this.fuelTypeService.searchFuelTypes(searchTerm);\n    }\n    else{\n      this.fuelTypes$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { FuelTypeRoutingModule } from './fuel-type-routing.module';\nimport { FuelTypeComponent } from './fuel-type.component';\nimport { FuelTypeListComponent } from './fuel-type-list/fuel-type-list.component';\nimport { FuelTypeFormComponent } from './fuel-type-form/fuel-type-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    FuelTypeRoutingModule,\n  ],\n  declarations: [\n    FuelTypeComponent,\n    FuelTypeListComponent,\n    FuelTypeFormComponent,\n  ],\n  // providers: [FuelTypeService],\n})\nexport class FuelTypeModule { }\n","module.exports = \"<section class=\\\"section module-small d-none d-sm-block bg-dark\\\" style=\\\"margin-bottom:25px\\\">\\n<mdb-navbar SideClass=\\\"padding0 navbar fixed-top navbar-expand-lg xbg-dark navbar-custom navbar-transparent\\\" [containerInside]=\\\"false\\\">\\n    <logo  style=\\\"font-family:Ethnocentric\\\">\\n        <!-- <img src=\\\"./assets/images/g2g-logo2.png\\\"> -->\\n      <span class=\\\"logo\\\"> GEAR  </span><span class=\\\"logo2\\\">2</span><span class=\\\"logo\\\"> GEAR </span>\\n    </logo>\\n    <links style=\\\"margin-bottom:-25px\\\">\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <li id=\\\"li-home\\\" class=\\\"nav-item waves-light\\\" mdbRippleRadius [ngClass]=\\\"{'gray-text': activeMenu=='home'}\\\" routerLink=\\\"/home\\\">\\n            <a class=\\\"nav-link\\\">HOME<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item dropdown\\\" dropdown>\\n              <a dropdownToggle mdbWavesEffect type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n              ADMIN<span class=\\\"caret\\\"></span></a>\\n              <div class=\\\"dropdown-menu dropdown dropdown-primary\\\" role=\\\"menu\\\">\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/make\\\">MAKE</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/model\\\">MODEL</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/variant\\\">VARIANT</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/vehicleType\\\">VEHICLE TYPE</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/fuelType\\\">FUEL TYPE</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/transmissionType\\\">TRANSMISSION</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/insuranceType\\\">INSURANCE TYPE</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/insurance\\\">INSURANCE</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/expense\\\">Expense</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/color\\\">COLOR</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/client\\\">CLIENT</a>\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/car\\\">CAR</a>\\n              </div>\\n          </li>\\n          <li id=\\\"li-home\\\" class=\\\"nav-item active waves-light\\\" mdbRippleRadius [ngClass]=\\\"{'white-text': activeMenu=='available-cars'}\\\" routerLink=\\\"/cars\\\">\\n            <a class=\\\"nav-link\\\">AVAILABLE CARS<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li id=\\\"li-home\\\" class=\\\"nav-item active waves-light\\\" mdbRippleRadius [ngClass]=\\\"{'green-text': activeMenu=='sold-cars'}\\\" routerLink=\\\"/sold-cars\\\">\\n            <a class=\\\"nav-link\\\">SOLD CARS<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li id=\\\"li-home\\\" class=\\\"nav-item active waves-light\\\" mdbRippleRadius [ngClass]=\\\"{'green-text': activeMenu=='investors-corner'}\\\" routerLink=\\\"/investors-corner\\\">\\n            <a class=\\\"nav-link\\\">INVESTOR'S CORNER<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li id=\\\"li-home\\\" class=\\\"nav-item active waves-light\\\" mdbRippleRadius [ngClass]=\\\"{'green-text': activeMenu=='contact'}\\\" routerLink=\\\"/contact\\\">\\n            <a class=\\\"nav-link\\\">CONTACT<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li id=\\\"li-home\\\" class=\\\"nav-item active waves-light\\\" mdbRippleRadius *ngIf=\\\"!auth.isAuthenticated()\\\" (click)=\\\"!auth.login()\\\">\\n            <a class=\\\"nav-link\\\">LOGIN<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li id=\\\"li-home\\\" class=\\\"nav-item active waves-light\\\" mdbRippleRadius *ngIf=\\\"auth.isAuthenticated()\\\" (click)=\\\"auth.logout()\\\">\\n            <a class=\\\"nav-link\\\">LOGOUT<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n        </ul>\\n    </links>\\n</mdb-navbar>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  activeMenu:string=\"home\";\n\n  constructor(public auth : AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section class=\\\"section module-small\\\" style=\\\"margin-top:-150px; padding:-25px\\\">\\n  <img src=\\\"./assets/images/picture2.jpg\\\" style =\\\"width:100%\\\" xheight=\\\"700px\\\">\\n  <div>\\n    <div class=\\\"centered-top text-center\\\" style=\\\"top:95%;width:100%\\\">\\n      <h1 style=\\\"color:white; letter-spacing: 7px;font-family: Bebas-Neue,Arial,sans-serif;color:#43464B\\\">BUY-SELL-SWAP USED CARS AND PREMIUM BICYCLES </h1>\\n    </div>\\n  </div>\\n</section>\\n<section class=\\\"section module-small\\\" style=\\\"padding-left:50px;padding-right:50px\\\">\\n  <div class=\\\"section-title\\\">\\n  <h2>Who we are</h2>\\n</div>\\n  <p>\\nGear2Gear is an upcoming car dealership, which was established in 2017 but the roots go down to 1970's and 1980's where it was all started by Mr Rahman who used to run a garage as well as supply imported cars in bangalore when there were only ambassadors and Fiats available. The trade was learned and applied by his son Ashfaq TP along with his corporate experience of 12 years. Thats why Gear2Gear stands out from other car dealerships where its not only about selling cars and making money but more on building trust and value the relationship. We only look for any buy good quality cars so that we attain customer satisfaction and keep that as our top most priority. At the end of the day we are die hard car fanatics who will help you the get the ride you desire, the ride you deserve. Reach out to us if you are planning on a purchase or would like to have a geeky, greasy conversation about anything wheels.\\n  </p>\\n</section>\\n<section class=\\\"section module-small\\\" style=\\\"padding-left:50px;padding-right:50px\\\">\\n    <div class=\\\"section-title\\\">\\n  <h2>Why used cars?</h2>\\n</div>\\n  <p>\\nIts an expensive world and we all work hard to make a living. Buying used car will not only help you in saving a lot of money but also gives you the leverage of changing/upgrading  the car easily to something better or something that might suit your current requirement. Most of the new car buyers get stuck to their rides not because they like it, but mostly because they fear the lossed that they will incur in selling new car immediately.   </p>\\n</section>\\n\\n<section class=\\\"section module-small\\\" style=\\\"padding-left:50px;padding-right:50px\\\">\\n    <div class=\\\"section-title\\\">\\n  <h2>What do we look for while buying a used car?</h2>\\n</div>\\n  <p>\\nthere are a lot of things to look for when buying a used car. Checking for service history is the basic check what wevery one would do , but there is more to it. We at gear2gear ensure that we procure cars that are customer owned and reach our hands directly from customers, than going thru middlemen/dealers etc. This will give more clarity on car condition, the way it was maintained, geniunity of car condition and so on. Using our expertise we comapre the tyre condition with the odometer reading, Interiors with the total usage, paint job with the age of the car etc. In our expert eyes the way the car looks and feels speaks volumes of how the car was maintained.\\n</p>\\n</section>\\n\\n<section class=\\\"section module-small\\\" style=\\\"padding-left:50px;padding-right:50px\\\">\\n    <div class=\\\"section-title\\\">\\n  <h2>How to find a good used car?</h2>\\n</div>\\n  <p>\\nbest thing to do is to rely on friend circle, office contacts or thru other geniune source who can directly offer their car to you. If not see for a reliable dealer who talks sense and is reliable and trust worthy. Its better not to go for the fancy offers like 1 year warranty or some other service offers or some low price offer on any cars.</p>\\n</section>\\n\"","module.exports = \"a {\\n  cursor: pointer; }\\n\\n/* Container holding the image and the text */\\n\\n.container {\\n  position: relative;\\n  text-align: center;\\n  color: white; }\\n\\n/* Bottom left text */\\n\\n.bottom-left {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 16px; }\\n\\n/* Top left text */\\n\\n.top-left {\\n  position: absolute;\\n  top: 8px;\\n  left: 16px; }\\n\\n/* Top right text */\\n\\n.top-right {\\n  position: absolute;\\n  top: 35%;\\n  right: 16px; }\\n\\n/* Bottom right text */\\n\\n.bottom-right {\\n  position: absolute;\\n  bottom: 8px;\\n  right: 16px;\\n  font-family: Franklin Gothic;\\n  font-weight: bold;\\n  color: greenyellow; }\\n\\n/* Centered text */\\n\\n.centered {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  font-family: Franklin Gothic;\\n  font-weight: bold;\\n  colo: greenyellow; }\\n\\n.centered-bottom {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  font-family: Franklin Gothic;\\n  font-weight: bold;\\n  colo: greenyellow; }\\n\\n.centered-top {\\n  position: absolute;\\n  top: 30%;\\n  left: 50%;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  font-family: Franklin Gothic;\\n  font-weight: bold;\\n  colo: greenyellow; }\\n\"","import { Component, OnInit } from '@angular/core';\n// import { AuthService } from './../auth/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"insuranceTypeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputInsuranceTypeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputInsuranceTypeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"insuranceTypeForm.controls.name.touched && insuranceTypeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"insuranceTypeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"insuranceTypeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"insuranceTypeForm.controls.name.value\\\" (isDelete)=\\\"deleteInsuranceType($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { InsuranceType } from 'app/data-model';\nimport { InsuranceTypeService } from 'app/services/insurance-type/insurance-type.service';\n\n@Component({\n  selector: 'app-insuranceType-form',\n  templateUrl: './insurance-type-form.component.html',\n  styleUrls: ['./insurance-type-form.component.scss']\n})\nexport class InsuranceTypeFormComponent implements OnInit {\n  title : string = \"Create Insurance Type\";\n  module :string=\"insurance type\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  insuranceTypeForm: FormGroup;\n  selectedInsuranceType_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private insuranceTypeService:InsuranceTypeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.insuranceTypeForm = this.fb.group({\n      insurance_type_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.insuranceTypeForm.valid) {\n      if(this.insuranceTypeService.selectedMode == 'Create'){\n        this.createInsuranceType();\n      }\n      else if (this.insuranceTypeService.selectedMode == 'Edit'){\n        this.updateInsuranceType();\n      }\n    }\n  }\n\n  getInsuranceTypeById(insuranceType_id:number){\n    this.insuranceTypeService.getInsuranceTypeById(insuranceType_id)\n    .subscribe(\n        res => {\n        this.insuranceTypeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createInsuranceType(){\n    this.insuranceTypeService.createInsuranceType(this.insuranceTypeForm.value)\n    .subscribe(\n      res => {\n        this.insuranceTypeService.refreshList.next(true);\n        this.insuranceTypeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateInsuranceType(){\n    this.insuranceTypeService.updateInsuranceType(this.insuranceTypeForm.value)\n    .subscribe(\n      res => {\n          this.insuranceTypeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteInsuranceType(event){\n    if(this.selectedInsuranceType_Id)\n    {\n      this.insuranceTypeService.deleteInsuranceType(this.selectedInsuranceType_Id).subscribe(\n        res => {\n          this.insuranceTypeService.refreshList.next(true);\n          this.router.navigate(['/insuranceType/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.insuranceTypeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.insuranceTypeService.selectedInsuranceTypeId\n    .subscribe(\n      res => {\n        this.selectedInsuranceType_Id = res;\n        if(this.insuranceTypeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Insurance Type\";\n          this.mode = \"delete\";\n          this.getInsuranceTypeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchInsuranceTypes($event)\\\" (isCreate)=\\\"createInsuranceType('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let insuranceType of results$ | async'>\\n          <th scope=\\\"row\\\">{{insuranceType.insurance_type_id}}</th>\\n          <td>{{insuranceType.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectInsuranceType(insuranceType.insurance_type_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { InsuranceType } from 'app/data-model';\nimport { InsuranceTypeService } from 'app/services/insurance-type/insurance-type.service';\n\n@Component({\n  selector: 'app-insuranceType-list',\n  templateUrl: './insurance-type-list.component.html',\n  styleUrls: ['./insurance-type-list.component.scss']\n})\nexport class InsuranceTypeListComponent implements OnInit {\n  @Input()\n  results$: Observable<InsuranceType>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private insuranceTypeService:InsuranceTypeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/insuranceType/add']);\n  }\n\n  searchInsuranceTypes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createInsuranceType(mode:any){\n    this.insuranceTypeService.selectedMode = mode;\n    this.router.navigate(['/insuranceType/add']);\n  }\n\n  //On Click of the Edit Button\n  selectInsuranceType(insuranceType_id:number, mode:any){\n    this.insuranceTypeService.selectedMode = mode;\n    this.router.navigate(['/insuranceType/edit']);\n    setTimeout(() => {\n      this.insuranceTypeService.selectedInsuranceTypeId.next(insuranceType_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InsuranceTypeComponent} from './insurance-type.component';\nimport { InsuranceTypeListComponent} from './insurance-type-list/insurance-type-list.component';\nimport { InsuranceTypeFormComponent} from './insurance-type-form/insurance-type-form.component';\n\nconst insuranceTypeRoutes: Routes = [\n  {\n    path: 'insuranceType',\n    component: InsuranceTypeComponent,\n    children: [\n        {path: 'list',component: InsuranceTypeListComponent},\n        {path: 'add', component: InsuranceTypeFormComponent},\n        {path: 'edit', component: InsuranceTypeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(insuranceTypeRoutes)],\n  exports: [RouterModule]\n})\n export class InsuranceTypeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-insuranceType-list (searchTerm)=\\\"searchInsuranceTypes($event)\\\" [results$]=\\\"insuranceTypes$\\\"></app-insuranceType-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { InsuranceType } from 'app/data-model';\nimport { InsuranceTypeService } from 'app/services/insurance-type/insurance-type.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './insurance-type.component.html',\n  styleUrls: ['./insurance-type.component.scss']\n})\nexport class InsuranceTypeComponent implements OnInit {\n  title : string = \"Insurance Type\";\n  selectedInsuranceType : InsuranceType;\n\n  insuranceTypes$: Observable<InsuranceType>;\n\n  constructor(private fb: FormBuilder, private insuranceTypeService:InsuranceTypeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getInsuranceTypes();\n    this.insuranceTypeService.refreshList.subscribe(\n      res=>{\n          this.getInsuranceTypes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getInsuranceTypes()  {\n    this.insuranceTypes$ = this.insuranceTypeService.getInsuranceTypes();\n  }\n\n  searchInsuranceTypes(searchTerm){\n    if(searchTerm){\n      this.insuranceTypes$ = this.insuranceTypeService.searchInsuranceTypes(searchTerm);\n    }\n    else{\n      this.insuranceTypes$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { InsuranceTypeRoutingModule } from './insurance-type-routing.module';\nimport { InsuranceTypeComponent } from './insurance-type.component';\nimport { InsuranceTypeListComponent } from './insurance-type-list/insurance-type-list.component';\nimport { InsuranceTypeFormComponent } from './insurance-type-form/insurance-type-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    InsuranceTypeRoutingModule,\n  ],\n  declarations: [\n    InsuranceTypeComponent,\n    InsuranceTypeListComponent,\n    InsuranceTypeFormComponent,\n  ],\n  // providers: [InsuranceTypeService],\n})\nexport class InsuranceTypeModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"insuranceForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputInsuranceName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputInsuranceName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"insuranceForm.controls.name.touched && insuranceForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"insuranceForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"insuranceForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"insuranceForm.controls.name.value\\\" (isDelete)=\\\"deleteInsurance($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Insurance } from 'app/data-model';\nimport { InsuranceService } from 'app/services/insurance/insurance.service';\n\n@Component({\n  selector: 'app-insurance-form',\n  templateUrl: './insurance-form.component.html',\n  styleUrls: ['./insurance-form.component.scss']\n})\nexport class InsuranceFormComponent implements OnInit {\n  title : string = \"Create Insurance\";\n  module :string=\"insurance\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  insuranceForm: FormGroup;\n  selectedInsurance_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private insuranceService:InsuranceService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.insuranceForm = this.fb.group({\n      insurance_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.insuranceForm.valid) {\n      if(this.insuranceService.selectedMode == 'Create'){\n        this.createInsurance();\n      }\n      else if (this.insuranceService.selectedMode == 'Edit'){\n        this.updateInsurance();\n      }\n    }\n  }\n\n  getInsuranceById(insurance_id:number){\n    this.insuranceService.getInsuranceById(insurance_id)\n    .subscribe(\n        res => {\n        this.insuranceForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createInsurance(){\n    this.insuranceService.createInsurance(this.insuranceForm.value)\n    .subscribe(\n      res => {\n        this.insuranceService.refreshList.next(true);\n        this.insuranceForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateInsurance(){\n    this.insuranceService.updateInsurance(this.insuranceForm.value)\n    .subscribe(\n      res => {\n          this.insuranceService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteInsurance(event){\n    if(this.selectedInsurance_Id)\n    {\n      this.insuranceService.deleteInsurance(this.selectedInsurance_Id).subscribe(\n        res => {\n          this.insuranceService.refreshList.next(true);\n          this.router.navigate(['/insurance/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.insuranceForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.insuranceService.selectedInsuranceId\n    .subscribe(\n      res => {\n        this.selectedInsurance_Id = res;\n        if(this.insuranceService.selectedMode == \"Edit\"){\n          this.title = \"Edit Insurance\";\n          this.mode = \"delete\";\n          this.getInsuranceById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchInsurances($event)\\\" (isCreate)=\\\"createInsurance('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let insurance of results$ | async'>\\n          <th scope=\\\"row\\\">{{insurance.insurance_id}}</th>\\n          <td>{{insurance.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectInsurance(insurance.insurance_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Insurance } from 'app/data-model';\nimport { InsuranceService } from 'app/services/insurance/insurance.service';\n\n@Component({\n  selector: 'app-insurance-list',\n  templateUrl: './insurance-list.component.html',\n  styleUrls: ['./insurance-list.component.scss']\n})\nexport class InsuranceListComponent implements OnInit {\n  @Input()\n  results$: Observable<Insurance>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private insuranceService:InsuranceService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/insurance/add']);\n  }\n\n  searchInsurances(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createInsurance(mode:any){\n    this.insuranceService.selectedMode = mode;\n    this.router.navigate(['/insurance/add']);\n  }\n\n  //On Click of the Edit Button\n  selectInsurance(insurance_id:number, mode:any){\n    this.insuranceService.selectedMode = mode;\n    this.router.navigate(['/insurance/edit']);\n    setTimeout(() => {\n      this.insuranceService.selectedInsuranceId.next(insurance_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InsuranceComponent} from './insurance.component';\nimport { InsuranceListComponent} from './insurance-list/insurance-list.component';\nimport { InsuranceFormComponent} from './insurance-form/insurance-form.component';\n\nconst insuranceRoutes: Routes = [\n  {\n    path: 'insurance',\n    component: InsuranceComponent,\n    children: [\n        {path: 'list',component: InsuranceListComponent},\n        {path: 'add', component: InsuranceFormComponent},\n        {path: 'edit', component: InsuranceFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(insuranceRoutes)],\n  exports: [RouterModule]\n})\n export class InsuranceRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-insurance-list (searchTerm)=\\\"searchInsurances($event)\\\" [results$]=\\\"insurances$\\\"></app-insurance-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Insurance } from 'app/data-model';\nimport { InsuranceService } from 'app/services/insurance/insurance.service';\n\n@Component({\n  selector: 'app-insurance',\n  templateUrl: './insurance.component.html',\n  styleUrls: ['./insurance.component.scss']\n})\nexport class InsuranceComponent implements OnInit {\n  title : string = \"Insurance\";\n  selectedInsurance : Insurance;\n\n  insurances$: Observable<Insurance>;\n\n  constructor(private fb: FormBuilder, private insuranceService:InsuranceService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getInsurances();\n    this.insuranceService.refreshList.subscribe(\n      res=>{\n          this.getInsurances();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getInsurances()  {\n    this.insurances$ = this.insuranceService.getInsurances();\n  }\n\n  searchInsurances(searchTerm){\n    if(searchTerm){\n      this.insurances$ = this.insuranceService.searchInsurances(searchTerm);\n    }\n    else{\n      this.insurances$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { InsuranceRoutingModule } from './insurance-routing.module';\nimport { InsuranceComponent } from './insurance.component';\nimport { InsuranceListComponent } from './insurance-list/insurance-list.component';\nimport { InsuranceFormComponent } from './insurance-form/insurance-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    InsuranceRoutingModule,\n  ],\n  declarations: [\n    InsuranceComponent,\n    InsuranceListComponent,\n    InsuranceFormComponent,\n  ],\n  // providers: [InsuranceService],\n})\nexport class InsuranceModule { }\n","module.exports = \"\\n<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n<div class=\\\"col-12\\\">\\n  search filter -> Vehicle Type, Make, Model, Year, Trasnmission, Max Price and Exterior Color\\n\\n</div>\\n<div class=\\\"row\\\" *ngFor=\\\"let car of cars$ | async\\\">\\n  <div class=\\\"col-5\\\" style=\\\"height:500px; background-color:red\\\">\\n    <mdb-carousel  [isControls]=\\\"true\\\" [animation]=\\\"'slide'\\\">\\n      <mdb-slide>\\n        <img class=\\\"d-block xw-100\\\" style=\\\"height:480px\\\" src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(130).jpg\\\" alt=\\\"First slide\\\">\\n      </mdb-slide>\\n      <mdb-slide>\\n        <img class=\\\"d-block xw-100\\\" style=\\\"height:480px\\\"  src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(129).jpg\\\" alt=\\\"Second slide\\\">\\n      </mdb-slide>\\n      <mdb-slide>\\n        <img class=\\\"d-block xw-100\\\" style=\\\"height:480px\\\"  src=\\\"https://mdbootstrap.com/img/Photos/Slides/img%20(70).jpg\\\" alt=\\\"Third slide\\\">\\n      </mdb-slide>\\n    </mdb-carousel>\\n  </div>\\n\\n  <div class=\\\"col-6\\\">\\n    <mat-tab-group>\\n      <mat-tab class=\\\"col-6\\\" label=\\\"Overview\\\">The Every Youths Dream Sedan – Honda Civic, it’s a Luxury loaded with 1.8ltr iVTEC Petrol Engine, VMT comes Loaded with Dual Airbags, Alloys, ABS, Dual tone Leather interiors, rear armrest with remote, central locking with remote, electornic mirror adjustments, multimedia CD player, automatic climate control, fog lamps, etc. Car is Driven 130000 kms recorded mileage from Honda, No accidents till date. Priced at just Rs.385000. Call me on 8618503850 – Location – Jpnagar 2nd phase Bangalore.</mat-tab>\\n      <mat-tab class=\\\"col-6\\\" label=\\\"Details\\\">\\n        <table>\\n          <tbody>\\n            <tr>\\n              <td class=\\\"t-label\\\">Vehicle Type</td>\\n              <td class=\\\"t-value h6\\\">{{car.vehicle_type_name}}</td>\\n            </tr>\\n\\n            <tr>\\n              <td class=\\\"t-label\\\">Fuel type</td>\\n              <td class=\\\"t-value h6\\\">{{car.fuel_type_name}}</td>\\n            </tr>\\n\\n            <tr>\\n              <td class=\\\"t-label\\\">Variant</td>\\n              <td class=\\\"t-value h6\\\">{{car.variant_name}}</td>\\n            </tr>\\n\\n            <tr>\\n              <td class=\\\"t-label\\\">Year</td>\\n              <td class=\\\"t-value h6\\\">{{car.make_year}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Month</td>\\n              <td class=\\\"t-value h6\\\">{{car.make_month}}</td>\\n            </tr>\\n\\n            <tr>\\n              <td class=\\\"t-label\\\">Transmission</td>\\n              <td class=\\\"t-value h6\\\">{{car.trasnmission_type_name}}</td>\\n            </tr>\\n\\n            <tr>\\n              <td class=\\\"t-label\\\">Fuel economy</td>\\n              <td class=\\\"t-value h6\\\">{{car.fuel_economy}}</td>\\n            </tr>\\n\\n            <tr>\\n              <td class=\\\"t-label\\\">Exterior Color</td>\\n              <td class=\\\"t-value h6\\\">{{car.exterior_color}}</td>\\n            </tr>\\n\\n            <tr>\\n              <td class=\\\"t-label\\\">Interior Color</td>\\n              <td class=\\\"t-value h6\\\">{{car.interior_color}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Accidental?</td>\\n              <td class=\\\"t-value h6\\\">{{car.is_accidental}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Flooded?</td>\\n              <td class=\\\"t-value h6\\\">  <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" value=\\\"car.is_flooded\\\"></td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Mileage</td>\\n              <td class=\\\"t-value h6\\\">{{car.mileage}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Insurance Type</td>\\n              <td class=\\\"t-value h6\\\">{{car.insurance_type_name}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Insurance Year</td>\\n              <td class=\\\"t-value h6\\\">{{car.insurance_year}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Number of Owners</td>\\n              <td class=\\\"t-value h6\\\">{{car.owners}}</td>\\n            </tr>\\n            <tr>\\n              <td class=\\\"t-label\\\">Registration Number</td>\\n              <td class=\\\"t-value t-vin h6\\\">KA51P7589</td>\\n            </tr>\\n          </tbody></table>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Car } from 'app/data-model';\nimport { CarService } from 'app/services/car/car.service';\n\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.scss']\n})\nexport class InventoryComponent implements OnInit {\n  title : string = \"Available Cars\";\n  cars$: Observable<Car>;\n\n  constructor(public carService:CarService) { }\n\n  ngOnInit() {\n    this.getAvailableCars();\n  }\n  getAvailableCars()  {\n    this.cars$ = this.carService.getAvailableCars();\n    this.cars$.subscribe(res=>{\n      console.log(\"asdajhdkjashdka\");\n    },\n  err=>{\n    console.log(\"rwoierwoieruworuoweurowurowruoweiurowieuroweiru \",err);\n  })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { InventoryComponent } from './inventory.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    // BrowserAnimationsModule,\n    // MatButtonModule,\n    // MatCheckboxModule,\n    // MatTabsModule\n  ],\n  declarations: [\n    InventoryComponent,\n  ],\n  // providers: [InsuranceService],\n})\nexport class InventoryModule { }\n","module.exports = \"<div *ngIf=\\\"tdMessage\\\" class=\\\"alert alert-danger text-center col-12\\\">\\n  <strong>Error! </strong>{{tdMessage}}\\n</div>\\n<form [formGroup]=\\\"investmentRecordsForm\\\" (ngSubmit)=\\\"onSubmit2()\\\" >\\n  <div class=\\\"col-12\\\">\\n  <div class=\\\"form-group\\\">\\n    <div>\\n      <div class=\\\"md-form mt-0\\\">\\n        <table class=\\\"table\\\">\\n          <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n            <tr>\\n              <th>Date</th>\\n              <th>Transaction Type</th>\\n              <th>Investor</th>\\n              <th>Expense Type</th>\\n              <th>Description</th>\\n              <th>Credit</th>\\n              <th>Debit</th>\\n              <!-- <th>Add</th> -->\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr>\\n            <td>\\n              <input type=\\\"date\\\" class=\\\"form-control\\\" formControlName=\\\"date\\\" placeholder=\\\"Date\\\">\\n                <app-control-messages [control]=\\\"investmentRecordsForm.controls.date\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" formControlName=\\\"transaction_type_id\\\" (change)=\\\"getSelectedMode($event.target.value)\\\">\\n                <option *ngFor=\\\"let tt of transactionTypes$ |async\\\" [value]=\\\"tt.transaction_type_id\\\">{{tt.transaction_type_id}}{{tt.name}}\\n                </option>\\n              </select>\\n              <app-control-messages [control]=\\\"investmentRecordsForm.controls.transaction_type_id\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" formControlName=\\\"investor_id\\\" (change) = \\\"validateAmountAgainstBalance(this)\\\">\\n                <option *ngFor=\\\"let investor of investors$ | async\\\" [value]=\\\"investor.client_id\\\">{{investor.name}}</option>\\n              </select>\\n              <app-control-messages [control]=\\\"investmentRecordsForm.controls.investor_id\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" formControlName=\\\"expense_id\\\">\\n                <option *ngFor=\\\"let expense of expenses$ | async\\\" [value]=\\\"expense.expense_id\\\">{{expense.expense_id}}{{expense.name}}</option>\\n              </select>\\n              <app-control-messages [control]=\\\"investmentRecordsForm.controls.expense_id\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" placeholder=\\\"Description\\\">\\n              <app-control-messages [control]=\\\"investmentRecordsForm.controls.description\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"credit\\\" placeholder=\\\"Credit\\\" (keyup)=\\\"formatCurrency(investmentRecordsForm.controls.credit)\\\">\\n              <app-control-messages [control]=\\\"investmentRecordsForm.controls.credit\\\"></app-control-messages>\\n            </td>\\n            <td>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"debit\\\" placeholder=\\\"debit\\\" (keyup)=\\\"formatCurrency(investmentRecordsForm.controls.debit)\\\">\\n              <app-control-messages [control]=\\\"investmentRecordsForm.controls.debit\\\"></app-control-messages>\\n            </td>\\n          </tr>\\n        </tbody>\\n        </table>\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\">\\n          <i class=\\\"fa fa-save\\\"></i>\\n        </button>\\n        <table class=\\\"table\\\">\\n          <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n            <tr>\\n              <th>Date</th>\\n              <th>Transaction Type</th>\\n              <th>Investor</th>\\n              <th>Expense Type</th>\\n              <th>Description</th>\\n              <th>Credit</th>\\n              <th>Debit</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let item of investmentRecords$ |async; let i = index;\\\">\\n            <td> {{item.date}}</td>\\n             <td>\\n              <select class=\\\"form-control\\\" value=\\\"item.transaction_type_id\\\" disabled>\\n                <option *ngFor=\\\"let tt of transactionTypes$ | async\\\" [value]=\\\"tt.transaction_type_id\\\" [selected] = \\\"item.transaction_type_id == tt.transaction_type_id\\\">{{tt.transaction_type_id}}{{tt.name}}</option>\\n              </select>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" value=\\\"item.investor_id\\\" disabled>\\n                <option *ngFor=\\\"let investor of investors$ | async\\\" [value]=\\\"investor.client_id\\\" [selected] = \\\"item.investor_id == investor.client_id\\\">{{investor.name}}</option>\\n              </select>\\n            </td>\\n            <td>\\n              <select class=\\\"form-control\\\" value=\\\"item.expense_id\\\" disabled>\\n                <option *ngFor=\\\"let expense of expenses$ | async\\\" [value]=\\\"expense.expense_id\\\" [selected] = \\\"item.expense_id == expense.expense_id\\\">{{expense.expense_id}}{{expense.name}}</option>\\n              </select>\\n            </td>\\n            <td><input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"description\\\" disabled value={{item.description}} placeholder=\\\"Description\\\"></td>\\n            <td><input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"credit\\\"  placeholder=\\\"Credit\\\"></td>\\n            <td><input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"debit\\\"  placeholder=\\\"Debit\\\"></td>\\n          </tr>\\n        </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-investment-reocrds',\n  templateUrl: './investment-reocrds.component.html',\n  styleUrls: ['./investment-reocrds.component.scss']\n})\nexport class InvestmentReocrdsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InvestorsCornerComponent} from './investors-corner.component';\n\nconst investorsCornerRoutes: Routes = [\n  {\n    path: 'investors-corner',\n    component: InvestorsCornerComponent,\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(investorsCornerRoutes)],\n  exports: [RouterModule],\n})\n\nexport class InvestorsCornerRoutingModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  investors-corner works!\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-investors-corner',\n  templateUrl: './investors-corner.component.html',\n  styleUrls: ['./investors-corner.component.scss']\n})\nexport class InvestorsCornerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../../shared/shared.module';\nimport { InvestorsCornerRoutingModule } from './investors-corner-routing.module';\nimport { InvestorsCornerComponent } from './investors-corner.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    InvestorsCornerRoutingModule\n    // BrowserAnimationsModule,\n    // MatButtonModule,\n    // MatCheckboxModule,\n    // MatTabsModule\n  ],\n  declarations: [\n     InvestorsCornerComponent\n  ],\n  // providers: [InsuranceService],\n})\nexport class InvestorsCornerModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 #f5f5f5 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"makeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputMakeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputMakeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"makeForm.controls.name.touched && makeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"makeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"makeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"makeForm.controls.name.value\\\" (isDelete)=\\\"deleteMake($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Make } from 'app/data-model';\nimport { MakeService } from 'app/services/make/make.service';\n\n@Component({\n  selector: 'app-make-form',\n  templateUrl: './make-form.component.html',\n  styleUrls: ['./make-form.component.scss']\n})\nexport class MakeFormComponent implements OnInit {\n  title : string = \"Create Make\";\n  module :string=\"make\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  makeForm: FormGroup;\n  selectedMake_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private makeService:MakeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.makeForm = this.fb.group({\n      make_id: [''],\n      // name: ['', [Validators.required,Validators.maxLength(50)]],\n      name: ['', [Validators.required]],\n\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.makeForm.valid) {\n      if(this.makeService.selectedMode == 'Create'){\n        this.createMake();\n      }\n      else if (this.makeService.selectedMode == 'Edit'){\n        this.updateMake();\n      }\n    }\n  }\n\n  getMakeById(make_id:number){\n    this.makeService.getMakeById(make_id)\n    .subscribe(\n        res => {\n        this.makeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createMake(){\n    this.makeService.createMake(this.makeForm.value)\n    .subscribe(\n      res => {\n        this.makeService.refreshList.next(true);\n        this.makeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateMake(){\n    this.makeService.updateMake(this.makeForm.value)\n    .subscribe(\n      res => {\n          this.makeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteMake(event){\n    if(this.selectedMake_Id)\n    {\n      this.makeService.deleteMake(this.selectedMake_Id).subscribe(\n        res => {\n          this.makeService.refreshList.next(true);\n          this.router.navigate(['/make/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.makeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.makeService.selectedMakeId\n    .subscribe(\n      res => {\n        this.selectedMake_Id = res;\n        if(this.makeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Make\";\n          this.mode = \"delete\";\n          this.getMakeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchMakes($event)\\\" (isCreate)=\\\"createMake('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Nameasda</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let make of results$ | async'>\\n          <th scope=\\\"row\\\">{{make.make_id}}</th>\\n          <td>{{make.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectMake(make.make_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Make } from 'app/data-model';\nimport { MakeService } from 'app/services/make/make.service';\n\n@Component({\n  selector: 'app-make-list',\n  templateUrl: './make-list.component.html',\n  styleUrls: ['./make-list.component.scss']\n})\nexport class MakeListComponent implements OnInit {\n  @Input()\n  results$: Observable<Make>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private makeService:MakeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/make/add']);\n  }\n\n  searchMakes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createMake(mode:any){\n    this.makeService.selectedMode = mode;\n    this.router.navigate(['/make/add']);\n  }\n\n  //On Click of the Edit Button\n  selectMake(make_id:number, mode:any){\n    this.makeService.selectedMode = mode;\n    this.router.navigate(['/make/edit']);\n    setTimeout(() => {\n      this.makeService.selectedMakeId.next(make_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MakeComponent} from './make.component';\nimport { MakeListComponent} from './make-list/make-list.component';\nimport { MakeFormComponent} from './make-form/make-form.component';\n\nconst makeRoutes: Routes = [\n  {\n    path: 'make',\n    component: MakeComponent,\n    children: [\n        {path: 'list',component: MakeListComponent},\n        {path: 'add', component: MakeFormComponent},\n        {path: 'edit', component: MakeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(makeRoutes)],\n  exports: [RouterModule]\n})\n export class MakeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-make-list (searchTerm)=\\\"searchMakes($event)\\\" [results$]=\\\"makes$\\\"></app-make-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Make } from 'app/data-model';\nimport { MakeService } from 'app/services/make/make.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './make.component.html',\n  styleUrls: ['./make.component.scss']\n})\nexport class MakeComponent implements OnInit {\n  title : string = \"Make\";\n  selectedMake : Make;\n\n  makes$: Observable<Make>;\n\n  constructor(private fb: FormBuilder, private makeService:MakeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getMakes();\n    this.makeService.refreshList.subscribe(\n      res=>{\n          this.getMakes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getMakes()  {\n    this.makes$ = this.makeService.getMakes();\n  }\n\n  searchMakes(searchTerm){\n    if(searchTerm){\n      this.makes$ = this.makeService.searchMakes(searchTerm);\n    }\n    else{\n      this.makes$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { MakeRoutingModule } from './make-routing.module';\nimport { MakeComponent } from './make.component';\nimport { MakeListComponent } from './make-list/make-list.component';\nimport { MakeFormComponent } from './make-form/make-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    MakeRoutingModule,\n  ],\n  declarations: [\n    MakeComponent,\n    MakeListComponent,\n    MakeFormComponent,\n  ],\n  // providers: [MakeService],\n})\nexport class MakeModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"modelForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputModelName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputModelName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"modelForm.controls.name.touched && modelForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"modelForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"modelForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"modelForm.controls.name.value\\\" (isDelete)=\\\"deleteModel($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Model } from 'app/data-model';\nimport { ModelService } from 'app/services/model/model.service';\n\n@Component({\n  selector: 'app-model-form',\n  templateUrl: './model-form.component.html',\n  styleUrls: ['./model-form.component.scss']\n})\nexport class ModelFormComponent implements OnInit {\n  title : string = \"Create Model\";\n  module :string=\"model\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  modelForm: FormGroup;\n  selectedModel_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private modelService:ModelService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.modelForm = this.fb.group({\n      model_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.modelForm.valid) {\n      if(this.modelService.selectedMode == 'Create'){\n        this.createModel();\n      }\n      else if (this.modelService.selectedMode == 'Edit'){\n        this.updateModel();\n      }\n    }\n  }\n\n  getModelById(model_id:number){\n    this.modelService.getModelById(model_id)\n    .subscribe(\n        res => {\n        this.modelForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createModel(){\n    this.modelService.createModel(this.modelForm.value)\n    .subscribe(\n      res => {\n        this.modelService.refreshList.next(true);\n        this.modelForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateModel(){\n    this.modelService.updateModel(this.modelForm.value)\n    .subscribe(\n      res => {\n          this.modelService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteModel(event){\n    if(this.selectedModel_Id)\n    {\n      this.modelService.deleteModel(this.selectedModel_Id).subscribe(\n        res => {\n          this.modelService.refreshList.next(true);\n          this.router.navigate(['/model/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.modelForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.modelService.selectedModelId\n    .subscribe(\n      res => {\n        this.selectedModel_Id = res;\n        if(this.modelService.selectedMode == \"Edit\"){\n          this.title = \"Edit Model\";\n          this.mode = \"delete\";\n          this.getModelById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchModels($event)\\\" (isCreate)=\\\"createModel('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let model of results$ | async'>\\n          <th scope=\\\"row\\\">{{model.model_id}}</th>\\n          <td>{{model.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectModel(model.model_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Model } from 'app/data-model';\nimport { ModelService } from 'app/services/model/model.service';\n\n@Component({\n  selector: 'app-model-list',\n  templateUrl: './model-list.component.html',\n  styleUrls: ['./model-list.component.scss']\n})\nexport class ModelListComponent implements OnInit {\n  @Input()\n  results$: Observable<Model>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private modelService:ModelService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/model/add']);\n  }\n\n  searchModels(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createModel(mode:any){\n    this.modelService.selectedMode = mode;\n    this.router.navigate(['/model/add']);\n  }\n\n  //On Click of the Edit Button\n  selectModel(model_id:number, mode:any){\n    this.modelService.selectedMode = mode;\n    this.router.navigate(['/model/edit']);\n    setTimeout(() => {\n      this.modelService.selectedModelId.next(model_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModelComponent} from './model.component';\nimport { ModelListComponent} from './model-list/model-list.component';\nimport { ModelFormComponent} from './model-form/model-form.component';\n\nconst modelRoutes: Routes = [\n  {\n    path: 'model',\n    component: ModelComponent,\n    children: [\n        {path: 'list',component: ModelListComponent},\n        {path: 'add', component: ModelFormComponent},\n        {path: 'edit', component: ModelFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(modelRoutes)],\n  exports: [RouterModule]\n})\n export class ModelRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-model-list (searchTerm)=\\\"searchMakes($event)\\\" [results$]=\\\"models$\\\"></app-model-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Model } from 'app/data-model';\nimport { ModelService } from 'app/services/model/model.service';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.scss']\n})\nexport class ModelComponent implements OnInit {\n  title : string = \"Model\";\n  selectedModel : Model;\n\n  models$: Observable<Model>;\n\n  constructor(private fb: FormBuilder, private modelService:ModelService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getModels();\n    this.modelService.refreshList.subscribe(\n      res=>{\n          this.getModels();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getModels()  {\n    this.models$ = this.modelService.getModels();\n  }\n\n  searchModels(searchTerm){\n    if(searchTerm){\n      this.models$ = this.modelService.searchModels(searchTerm);\n    }\n    else{\n      this.models$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ModelRoutingModule } from './model-routing.module';\nimport { ModelComponent } from './model.component';\nimport { ModelListComponent } from './model-list/model-list.component';\nimport { ModelFormComponent } from './model-form/model-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    ModelRoutingModule,\n  ],\n  declarations: [\n    ModelComponent,\n    ModelListComponent,\n    ModelFormComponent,\n  ],\n  // providers: [ModelService],\n})\nexport class ModelModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"transmissionTypeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTransmissionTypeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputTransmissionTypeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"transmissionTypeForm.controls.name.touched && transmissionTypeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"transmissionTypeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"transmissionTypeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"transmissionTypeForm.controls.name.value\\\" (isDelete)=\\\"deleteTransmissionType($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { TransmissionType } from 'app/data-model';\nimport { TransmissionTypeService } from 'app/services/transmission-type/transmission-type.service';\n\n@Component({\n  selector: 'app-transmissionType-form',\n  templateUrl: './transmission-type-form.component.html',\n  styleUrls: ['./transmission-type-form.component.scss']\n})\nexport class TransmissionTypeFormComponent implements OnInit {\n  title : string = \"Create Transmission Type\";\n  module :string=\"trasnmission type\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  transmissionTypeForm: FormGroup;\n  selectedTransmissionType_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private transmissionTypeService:TransmissionTypeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.transmissionTypeForm = this.fb.group({\n      transmission_type_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.transmissionTypeForm.valid) {\n      if(this.transmissionTypeService.selectedMode == 'Create'){\n        this.createTransmissionType();\n      }\n      else if (this.transmissionTypeService.selectedMode == 'Edit'){\n        this.updateTransmissionType();\n      }\n    }\n  }\n\n  getTransmissionTypeById(transmissionType_id:number){\n    this.transmissionTypeService.getTransmissionTypeById(transmissionType_id)\n    .subscribe(\n        res => {\n        this.transmissionTypeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createTransmissionType(){\n    this.transmissionTypeService.createTransmissionType(this.transmissionTypeForm.value)\n    .subscribe(\n      res => {\n        this.transmissionTypeService.refreshList.next(true);\n        this.transmissionTypeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateTransmissionType(){\n    this.transmissionTypeService.updateTransmissionType(this.transmissionTypeForm.value)\n    .subscribe(\n      res => {\n          this.transmissionTypeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteTransmissionType(event){\n    if(this.selectedTransmissionType_Id)\n    {\n      this.transmissionTypeService.deleteTransmissionType(this.selectedTransmissionType_Id).subscribe(\n        res => {\n          this.transmissionTypeService.refreshList.next(true);\n          this.router.navigate(['/transmissionType/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.transmissionTypeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.transmissionTypeService.selectedTransmissionTypeId\n    .subscribe(\n      res => {\n        this.selectedTransmissionType_Id = res;\n        if(this.transmissionTypeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Transmission Type\";\n          this.mode = \"delete\";\n          this.getTransmissionTypeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchTransmissionTypes($event)\\\" (isCreate)=\\\"createTransmissionType('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let transmissionType of results$ | async'>\\n          <th scope=\\\"row\\\">{{transmissionType.transmission_type_id}}</th>\\n          <td>{{transmissionType.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectTransmissionType(transmissionType.transmission_type_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { TransmissionType } from 'app/data-model';\nimport { TransmissionTypeService } from 'app/services/transmission-type/transmission-type.service';\n\n@Component({\n  selector: 'app-transmissionType-list',\n  templateUrl: './transmission-type-list.component.html',\n  styleUrls: ['./transmission-type-list.component.scss']\n})\nexport class TransmissionTypeListComponent implements OnInit {\n  @Input()\n  results$: Observable<TransmissionType>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private transmissionTypeService:TransmissionTypeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/transmissionType/add']);\n  }\n\n  searchTransmissionTypes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createTransmissionType(mode:any){\n    this.transmissionTypeService.selectedMode = mode;\n    this.router.navigate(['/transmissionType/add']);\n  }\n\n  //On Click of the Edit Button\n  selectTransmissionType(transmissionType_id:number, mode:any){\n    this.transmissionTypeService.selectedMode = mode;\n    this.router.navigate(['/transmissionType/edit']);\n    setTimeout(() => {\n      this.transmissionTypeService.selectedTransmissionTypeId.next(transmissionType_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TransmissionTypeComponent} from './transmission-type.component';\nimport { TransmissionTypeListComponent} from './transmission-type-list/transmission-type-list.component';\nimport { TransmissionTypeFormComponent} from './transmission-type-form/transmission-type-form.component';\n\nconst transmissionTypeRoutes: Routes = [\n  {\n    path: 'transmissionType',\n    component: TransmissionTypeComponent,\n    children: [\n        {path: 'list',component: TransmissionTypeListComponent},\n        {path: 'add', component: TransmissionTypeFormComponent},\n        {path: 'edit', component: TransmissionTypeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(transmissionTypeRoutes)],\n  exports: [RouterModule]\n})\n export class TransmissionTypeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-transmissionType-list (searchTerm)=\\\"searchTransmissionTypes($event)\\\" [results$]=\\\"transmissionTypes$\\\"></app-transmissionType-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { TransmissionType } from 'app/data-model';\nimport { TransmissionTypeService } from 'app/services/transmission-type/transmission-type.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './transmission-type.component.html',\n  styleUrls: ['./transmission-type.component.scss']\n})\nexport class TransmissionTypeComponent implements OnInit {\n  title : string = \"Transmission Type\";\n  selectedTransmissionType : TransmissionType;\n\n  transmissionTypes$: Observable<TransmissionType>;\n\n  constructor(private fb: FormBuilder, private transmissionTypeService:TransmissionTypeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getTransmissionTypes();\n    this.transmissionTypeService.refreshList.subscribe(\n      res=>{\n          this.getTransmissionTypes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getTransmissionTypes()  {\n    this.transmissionTypes$ = this.transmissionTypeService.getTransmissionTypes();\n  }\n\n  searchTransmissionTypes(searchTerm){\n    if(searchTerm){\n      this.transmissionTypes$ = this.transmissionTypeService.searchTransmissionTypes(searchTerm);\n    }\n    else{\n      this.transmissionTypes$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { TransmissionTypeRoutingModule } from './transmission-type-routing.module';\nimport { TransmissionTypeComponent } from './transmission-type.component';\nimport { TransmissionTypeListComponent } from './transmission-type-list/transmission-type-list.component';\nimport { TransmissionTypeFormComponent } from './transmission-type-form/transmission-type-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TransmissionTypeRoutingModule,\n  ],\n  declarations: [\n    TransmissionTypeComponent,\n    TransmissionTypeListComponent,\n    TransmissionTypeFormComponent,\n  ],\n  // providers: [TransmissionTypeService],\n})\nexport class TransmissionTypeModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"variantForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputVariantName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputVariantName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"variantForm.controls.name.touched && variantForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"variantForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"variantForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"variantForm.controls.name.value\\\" (isDelete)=\\\"deleteVariant($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Variant } from 'app/data-model';\nimport { VariantService } from 'app/services/variant/variant.service';\n\n@Component({\n  selector: 'app-variant-form',\n  templateUrl: './variant-form.component.html',\n  styleUrls: ['./variant-form.component.scss']\n})\nexport class VariantFormComponent implements OnInit {\n  title : string = \"Create Variant\";\n  module :string=\"variant\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  variantForm: FormGroup;\n  selectedVariant_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private variantService:VariantService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.variantForm = this.fb.group({\n      variant_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.variantForm.valid) {\n      if(this.variantService.selectedMode == 'Create'){\n        this.createVariant();\n      }\n      else if (this.variantService.selectedMode == 'Edit'){\n        this.updateVariant();\n      }\n    }\n  }\n\n  getVariantById(variant_id:number){\n    this.variantService.getVariantById(variant_id)\n    .subscribe(\n        res => {\n        this.variantForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createVariant(){\n    this.variantService.createVariant(this.variantForm.value)\n    .subscribe(\n      res => {\n        this.variantService.refreshList.next(true);\n        this.variantForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateVariant(){\n    this.variantService.updateVariant(this.variantForm.value)\n    .subscribe(\n      res => {\n          this.variantService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteVariant(event){\n    if(this.selectedVariant_Id)\n    {\n      this.variantService.deleteVariant(this.selectedVariant_Id).subscribe(\n        res => {\n          this.variantService.refreshList.next(true);\n          this.router.navigate(['/variant/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.variantForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.variantService.selectedVariantId\n    .subscribe(\n      res => {\n        this.selectedVariant_Id = res;\n        if(this.variantService.selectedMode == \"Edit\"){\n          this.title = \"Edit Variant\";\n          this.mode = \"delete\";\n          this.getVariantById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchVariants($event)\\\" (isCreate)=\\\"createVariant('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let variant of results$ | async'>\\n          <th scope=\\\"row\\\">{{variant.variant_id}}</th>\\n          <td>{{variant.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectVariant(variant.variant_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Variant } from 'app/data-model';\nimport { VariantService } from 'app/services/variant/variant.service';\n\n@Component({\n  selector: 'app-variant-list',\n  templateUrl: './variant-list.component.html',\n  styleUrls: ['./variant-list.component.scss']\n})\nexport class VariantListComponent implements OnInit {\n  @Input()\n  results$: Observable<Variant>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private variantService:VariantService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/variant/add']);\n  }\n\n  searchVariants(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createVariant(mode:any){\n    this.variantService.selectedMode = mode;\n    this.router.navigate(['/variant/add']);\n  }\n\n  //On Click of the Edit Button\n  selectVariant(variant_id:number, mode:any){\n    this.variantService.selectedMode = mode;\n    this.router.navigate(['/variant/edit']);\n    setTimeout(() => {\n      this.variantService.selectedVariantId.next(variant_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VariantComponent} from './variant.component';\nimport { VariantListComponent} from './variant-list/variant-list.component';\nimport { VariantFormComponent} from './variant-form/variant-form.component';\n\nconst variantRoutes: Routes = [\n  {\n    path: 'variant',\n    component: VariantComponent,\n    children: [\n        {path: 'list',component: VariantListComponent},\n        {path: 'add', component: VariantFormComponent},\n        {path: 'edit', component: VariantFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(variantRoutes)],\n  exports: [RouterModule]\n})\n export class VariantRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-variant-list (searchTerm)=\\\"searchVariants($event)\\\" [results$]=\\\"variants$\\\"></app-variant-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Variant } from 'app/data-model';\nimport { VariantService } from 'app/services/variant/variant.service';\n\n@Component({\n  selector: 'app-variant',\n  templateUrl: './variant.component.html',\n  styleUrls: ['./variant.component.scss']\n})\nexport class VariantComponent implements OnInit {\n  title : string = \"Variant\";\n  selectedVariant : Variant;\n\n  variants$: Observable<Variant>;\n\n  constructor(private fb: FormBuilder, private variantService:VariantService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getVariants();\n    this.variantService.refreshList.subscribe(\n      res=>{\n          this.getVariants();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getVariants()  {\n    this.variants$ = this.variantService.getVariants();\n  }\n\n  searchVariants(searchTerm){\n    if(searchTerm){\n      this.variants$ = this.variantService.searchVariants(searchTerm);\n    }\n    else{\n      this.variants$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { VariantRoutingModule } from './variant-routing.module';\nimport { VariantComponent } from './variant.component';\nimport { VariantListComponent } from './variant-list/variant-list.component';\nimport { VariantFormComponent } from './variant-form/variant-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    VariantRoutingModule,\n  ],\n  declarations: [\n    VariantComponent,\n    VariantListComponent,\n    VariantFormComponent,\n  ],\n  // providers: [VariantService],\n})\nexport class VariantModule { }\n","module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"vehicleTypeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputVehicleTypeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputVehicleTypeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"vehicleTypeForm.controls.name.touched && vehicleTypeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"vehicleTypeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"vehicleTypeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"vehicleTypeForm.controls.name.value\\\" (isDelete)=\\\"deleteVehicleType($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { VehicleType } from 'app/data-model';\nimport { VehicleTypeService } from 'app/services/vehicle-type/vehicle-type.service';\n\n@Component({\n  selector: 'app-vehicleType-form',\n  templateUrl: './vehicle-type-form.component.html',\n  styleUrls: ['./vehicle-type-form.component.scss']\n})\nexport class VehicleTypeFormComponent implements OnInit {\n  title : string = \"Create Vehicle Type\";\n  module :string=\"vehicle type\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  vehicleTypeForm: FormGroup;\n  selectedVehicleType_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private vehicleTypeService:VehicleTypeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.vehicleTypeForm = this.fb.group({\n      vehicle_type_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.vehicleTypeForm.valid) {\n      if(this.vehicleTypeService.selectedMode == 'Create'){\n        this.createVehicleType();\n      }\n      else if (this.vehicleTypeService.selectedMode == 'Edit'){\n        this.updateVehicleType();\n      }\n    }\n  }\n\n  getVehicleTypeById(vehicleType_id:number){\n    this.vehicleTypeService.getVehicleTypeById(vehicleType_id)\n    .subscribe(\n        res => {\n        this.vehicleTypeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createVehicleType(){\n    this.vehicleTypeService.createVehicleType(this.vehicleTypeForm.value)\n    .subscribe(\n      res => {\n        this.vehicleTypeService.refreshList.next(true);\n        this.vehicleTypeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateVehicleType(){\n    this.vehicleTypeService.updateVehicleType(this.vehicleTypeForm.value)\n    .subscribe(\n      res => {\n          this.vehicleTypeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteVehicleType(event){\n    if(this.selectedVehicleType_Id)\n    {\n      this.vehicleTypeService.deleteVehicleType(this.selectedVehicleType_Id).subscribe(\n        res => {\n          this.vehicleTypeService.refreshList.next(true);\n          this.router.navigate(['/vehicleType/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.vehicleTypeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.vehicleTypeService.selectedVehicleTypeId\n    .subscribe(\n      res => {\n        this.selectedVehicleType_Id = res;\n        if(this.vehicleTypeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Vehicle Type\";\n          this.mode = \"delete\";\n          this.getVehicleTypeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchVehicleTypes($event)\\\" (isCreate)=\\\"createVehicleType('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let vehicleType of results$ | async'>\\n          <th scope=\\\"row\\\">{{vehicleType.vehicle_type_id}}</th>\\n          <td>{{vehicleType.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectVehicleType(vehicleType.vehicle_type_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { VehicleType } from 'app/data-model';\nimport { VehicleTypeService } from 'app/services/vehicle-type/vehicle-type.service';\n\n@Component({\n  selector: 'app-vehicleType-list',\n  templateUrl: './vehicle-type-list.component.html',\n  styleUrls: ['./vehicle-type-list.component.scss']\n})\nexport class VehicleTypeListComponent implements OnInit {\n  @Input()\n  results$: Observable<VehicleType>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  constructor(private vehicleTypeService:VehicleTypeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/vehicleType/add']);\n  }\n\n  searchVehicleTypes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createVehicleType(mode:any){\n    this.vehicleTypeService.selectedMode = mode;\n    this.router.navigate(['/vehicleType/add']);\n  }\n\n  //On Click of the Edit Button\n  selectVehicleType(vehicleType_id:number, mode:any){\n    this.vehicleTypeService.selectedMode = mode;\n    this.router.navigate(['/vehicleType/edit']);\n    setTimeout(() => {\n      this.vehicleTypeService.selectedVehicleTypeId.next(vehicleType_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VehicleTypeComponent} from './vehicle-type.component';\nimport { VehicleTypeListComponent} from './vehicle-type-list/vehicle-type-list.component';\nimport { VehicleTypeFormComponent} from './vehicle-type-form/vehicle-type-form.component';\n\nconst vehicleTypeRoutes: Routes = [\n  {\n    path: 'vehicleType',\n    component: VehicleTypeComponent,\n    children: [\n        {path: 'list',component: VehicleTypeListComponent},\n        {path: 'add', component: VehicleTypeFormComponent},\n        {path: 'edit', component: VehicleTypeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(vehicleTypeRoutes)],\n  exports: [RouterModule]\n})\n export class VehicleTypeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-vehicleType-list (searchTerm)=\\\"searchVehicleTypes($event)\\\" [results$]=\\\"vehicleTypes$\\\"></app-vehicleType-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { VehicleType } from 'app/data-model';\nimport { VehicleTypeService } from 'app/services/vehicle-type/vehicle-type.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './vehicle-type.component.html',\n  styleUrls: ['./vehicle-type.component.scss']\n})\nexport class VehicleTypeComponent implements OnInit {\n  title : string = \"Vehicle Type\";\n  selectedVehicleType : VehicleType;\n\n  vehicleTypes$: Observable<VehicleType>;\n\n  constructor(private fb: FormBuilder, private vehicleTypeService:VehicleTypeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getVehicleTypes();\n    this.vehicleTypeService.refreshList.subscribe(\n      res=>{\n          this.getVehicleTypes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getVehicleTypes()  {\n    this.vehicleTypes$ = this.vehicleTypeService.getVehicleTypes();\n  }\n\n  searchVehicleTypes(searchTerm){\n    if(searchTerm){\n      this.vehicleTypes$ = this.vehicleTypeService.searchVehicleTypes(searchTerm);\n    }\n    else{\n      this.vehicleTypes$ = new EmptyObservable();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { VehicleTypeRoutingModule } from './vehicle-type-routing.module';\nimport { VehicleTypeComponent } from './vehicle-type.component';\nimport { VehicleTypeListComponent } from './vehicle-type-list/vehicle-type-list.component';\nimport { VehicleTypeFormComponent } from './vehicle-type-form/vehicle-type-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    VehicleTypeRoutingModule,\n  ],\n  declarations: [\n    VehicleTypeComponent,\n    VehicleTypeListComponent,\n    VehicleTypeFormComponent,\n  ],\n  // providers: [VehicleTypeService],\n})\nexport class VehicleTypeModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Car } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class CarService {\n  private carsUrl = '/api/cars';\n  private putUrl = '/api/cars';\n  selectedCarId = new BehaviorSubject(0);\n  sold:Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n  transactionDetail = new BehaviorSubject(\"\");\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getCars(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/cars', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n  public getAvailableCars(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/available-cars', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n  public getSoldCars(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/sold-cars', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getCarById(car_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/cars/'+car_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchCars(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/cars/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createCar(newCar:Car): Observable<any> {\n    const body = JSON.stringify(newCar);\n\n    return this.http.post('http://localhost:3000/api/cars', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateCar(editCar:Car): Observable<any> {\n    const body = JSON.stringify(editCar);\n    const car_id = editCar.car_id;\n\n    return this.http.put(\"http://localhost:3000/api/cars/\"+car_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateTotalCost(car:any) {\n    const body = JSON.stringify(car);\n    const car_id = car.car_id;\n    return this.http.patch('http://localhost:3000/api/cars/'+car_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .subscribe(\n      res => {\n      console.log(\"asdadsada\", res);\n    },\n    err => {\n       console.log(\"error here\", err);\n    },\n    () => {\n      console.log(\"Completed\");\n    }\n  );\n  }\n\n  public updateTotalIncome(car:any) {\n    const body = JSON.stringify(car);\n    const car_id = car.car_id;\n    return this.http.patch('http://localhost:3000/api/cars/income/'+car_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .subscribe(\n      res => {\n      console.log(\"Total Income of the car is Updated\", res);\n    },\n    err => {\n       console.log(\"error here\", err);\n    },\n    () => {\n      console.log(\"Completed\");\n    }\n  );\n  }\n\n  public deleteCar(car_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/cars/'+car_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Client } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class ClientService {\n  private clientsUrl = '/api/clients';\n  private putUrl = '/api/clients';\n  selectedClientId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n  states$: Observable<any>;\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getClients(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/clients', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n  public getInvestors(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/investors', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n  public getInvestorsExpensesAndPercent(car_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/investors/investorsExpensesAndPercent/'+car_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n  public getAvailableBalance(investor_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/investors/'+investor_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateAvailableBalance(investor:any) {\n    const body = JSON.stringify(investor);\n    const investor_id = investor.investor_id;\n    return this.http.patch('http://localhost:3000/api/clients/'+investor_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .subscribe(\n      res => {\n      console.log(\"Available Balance for the client is updated\", res);\n    },\n    err => {\n       console.log(\"Error \", err);\n    },\n    () => {\n      console.log(\"Completed\");\n    }\n  );\n  }\n\n  public updateTotalExpenses(investor:any) {\n    const body = JSON.stringify(investor);\n    const investor_id = investor.investor_id;\n    return this.http.patch('http://localhost:3000/api/clients/expenses/'+investor_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .subscribe(\n      res => {\n      console.log(\"Total Expenses for the client is updated : \", res);\n    },\n    err => {\n       console.log(\"Error \", err);\n    },\n    () => {\n      console.log(\"Completed\");\n    }\n  );\n  }\n\n  public getClientById(client_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/clients/'+client_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchClients(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/clients/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createClient(newClient:Client): Observable<any> {\n    const body = JSON.stringify(newClient);\n\n    return this.http.post('http://localhost:3000/api/clients', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateClient(editClient:Client): Observable<any> {\n    const body = JSON.stringify(editClient);\n    const client_id = editClient.client_id;\n\n    return this.http.put('http://localhost:3000/api/clients/'+client_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteClient(client_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/clients/'+client_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Color } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class ColorService {\n  private colorsUrl = '/api/colors';\n  private putUrl = '/api/colors';\n  selectedColorId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getColors(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/colors', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getColorById(color_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/colors/'+color_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchColors(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/colors/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createColor(newColor:Color): Observable<any> {\n    const body = JSON.stringify(newColor);\n\n    return this.http.post('http://localhost:3000/api/colors', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateColor(editColor:Color): Observable<any> {\n    const body = JSON.stringify(editColor);\n    const color_id = editColor.color_id;\n\n    return this.http.put(\"http://localhost:3000/api/colors/\"+color_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteColor(color_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/colors/'+color_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Car } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class CommonService {\n\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getStates(): Observable<any> {\n    return this.http.get('http://services.groupkt.com/state/get/IND/all',{headers: {'Content-Type': 'application/json; charset=utf-8'}});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Expense } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class ExpenseService {\n  private expensesUrl = '/api/expenses';\n  private putUrl = '/api/expenses';\n  selectedExpenseId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getExpenses(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/expenses', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getExpenseById(expense_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/expenses/'+expense_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchExpenses(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/expenses/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createExpense(newExpense:Expense): Observable<any> {\n    const body = JSON.stringify(newExpense);\n\n    return this.http.post('http://localhost:3000/api/expenses', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateExpense(editExpense:Expense): Observable<any> {\n    const body = JSON.stringify(editExpense);\n    const expense_id = editExpense.expense_id;\n\n    return this.http.put(\"http://localhost:3000/api/expenses/\"+expense_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteExpense(expense_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/expenses/'+expense_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { FuelType } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class FuelTypeService {\n  private fuelTypesUrl = '/api/fuelTypes';\n  private putUrl = '/api/fuelTypes';\n  selectedFuelTypeId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getFuelTypes(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/fuelTypes', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getFuelTypeById(fuel_type_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/fuelTypes/'+fuel_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchFuelTypes(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/fuelTypes/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createFuelType(newFuelType:FuelType): Observable<any> {\n    const body = JSON.stringify(newFuelType);\n\n    return this.http.post('http://localhost:3000/api/fuelTypes', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateFuelType(editFuelType:FuelType): Observable<any> {\n    const body = JSON.stringify(editFuelType);\n    const fuel_type_id = editFuelType.fuel_type_id;\n\n    return this.http.put(\"http://localhost:3000/api/fuelTypes/\"+fuel_type_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteFuelType(fuel_type_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/fuelTypes/'+fuel_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { InsuranceType } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class InsuranceTypeService {\n  private insuranceTypesUrl = '/api/insuranceTypes';\n  private putUrl = '/api/insuranceTypes';\n  selectedInsuranceTypeId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getInsuranceTypes(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/insuranceTypes', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getInsuranceTypeById(insurance_type_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/insuranceTypes/'+insurance_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchInsuranceTypes(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/insuranceTypes/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createInsuranceType(newInsuranceType:InsuranceType): Observable<any> {\n    const body = JSON.stringify(newInsuranceType);\n\n    return this.http.post('http://localhost:3000/api/insuranceTypes', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateInsuranceType(editInsuranceType:InsuranceType): Observable<any> {\n    const body = JSON.stringify(editInsuranceType);\n    const insurance_type_id = editInsuranceType.insurance_type_id;\n\n    return this.http.put(\"http://localhost:3000/api/insuranceTypes/\"+insurance_type_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteInsuranceType(insurance_type_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/insuranceTypes/'+insurance_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Insurance } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class InsuranceService {\n  private insurancesUrl = '/api/insurances';\n  private putUrl = '/api/insurances';\n  selectedInsuranceId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getInsurances(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/insurances', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getInsuranceById(insurance_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/insurances/'+insurance_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchInsurances(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/insurances/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createInsurance(newInsurance:Insurance): Observable<any> {\n    const body = JSON.stringify(newInsurance);\n\n    return this.http.post('http://localhost:3000/api/insurances', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateInsurance(editInsurance:Insurance): Observable<any> {\n    const body = JSON.stringify(editInsurance);\n    const insurance_id = editInsurance.insurance_id;\n\n    return this.http.put(\"http://localhost:3000/api/insurances/\"+insurance_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteInsurance(insurance_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/insurances/'+insurance_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Make } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class MakeService {\n  private makesUrl = '/api/makes';\n  private putUrl = '/api/makes';\n  selectedMakeId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getMakes(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/makes', {headers: {'Content-Type': 'application/json; charset=utf-8'}});\n    //.map(res => res);\n  }\n\n  public getMakeById(make_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/makes/'+make_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchMakes(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/makes/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createMake(newMake:Make): Observable<any> {\n    const body = JSON.stringify(newMake);\n\n    return this.http.post('http://localhost:3000/api/makes', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateMake(editMake:Make): Observable<any> {\n    const body = JSON.stringify(editMake);\n    const make_id = editMake.make_id;\n\n    return this.http.put(\"http://localhost:3000/api/makes/\"+make_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteMake(make_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/makes/'+make_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Model } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class ModelService {\n  private modelsUrl = '/api/models';\n  private putUrl = '/api/models';\n  selectedModelId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getModels(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/models', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getModelById(model_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/models/'+model_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchModels(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/models/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createModel(newModel:Model): Observable<any> {\n    const body = JSON.stringify(newModel);\n\n    return this.http.post('http://localhost:3000/api/models', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateModel(editModel:Model): Observable<any> {\n    const body = JSON.stringify(editModel);\n    const model_id = editModel.model_id;\n\n    return this.http.put(\"http://localhost:3000/api/models/\"+model_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteModel(model_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/models/'+model_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { TransactionDetails } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n@Injectable()\nexport class TransactionDetailsService {\n  private transactionDetailsUrl = '/api/transactionDetails';\n  private putUrl = '/api/transactionDetails';\n  selectedTransactionDetailsId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getTransactionDetails(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transactionDetails', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getTransactionDetailsById(transaction_details_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transactionDetails/'+transaction_details_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n  public getTotalInvestmentAndBalanceByCar(car_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transactionDetails/totalInvestmentBalance/'+car_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  // public searchTransactionDetailss(searchTerm): Observable<any> {\n  //   return this.http.get('http://localhost:3000/api/transactionDetails/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n  //   .map(res => res);\n  // }\n\n   public createTransactionDetails(newTransactionDetails:TransactionDetails): Observable<any> {\n     console.log(newTransactionDetails);\n     const body = JSON.stringify(newTransactionDetails);\n     return this.http.post('http://localhost:3000/api/transactionDetails',body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n     .map(res => res);\n   }\n   public createTransactionDetailsProfitAndLoss(newTransactionDetails:any): Observable<any> {\n    const body = JSON.stringify(newTransactionDetails);\n     return this.http.post('http://localhost:3000/api/transactionDetails/profitAndLoss',body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n     .map(res => res);\n   }\n\n  public updateTransactionDetails(editTransactionDetails:TransactionDetails): Observable<any> {\n    const body = JSON.stringify(editTransactionDetails);\n    const transaction_details_id = editTransactionDetails.transaction_details_id;\n\n    return this.http.put(\"http://localhost:3000/api/transactionDetails/\"+transaction_details_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteTransactionDetails(transaction_details_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/transactionDetails/'+transaction_details_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n  public deleteProfitOrLossTransactionDetails(car_id:number, investorsExpensesAndPercent:any): Observable<any> {\n    const investorsDetails = JSON.stringify(investorsExpensesAndPercent);\n    let options = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json; charset=utf-8',\n      }),\n      body: investorsDetails,\n    };\n\n    return this.http.delete('http://localhost:3000/api/transactionDetails/deleteProfitOrLoss/'+car_id, options)\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { TransactionType } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class TransactionTypeService {\n  private transactionTypesUrl = '/api/transactionTypes';\n  private putUrl = '/api/transactionTypes';\n  selectedTransactionTypeId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getTransactionTypes(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transactionTypes', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getTransactionTypeById(transaction_type_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transactionTypes/'+transaction_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchTransactionTypes(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transactionTypes/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createTransactionType(newTransactionType:TransactionType): Observable<any> {\n    const body = JSON.stringify(newTransactionType);\n\n    return this.http.post('http://localhost:3000/api/transactionTypes', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateTransactionType(editTransactionType:TransactionType): Observable<any> {\n    const body = JSON.stringify(editTransactionType);\n    const transaction_type_id = editTransactionType.transaction_type_id;\n\n    return this.http.put(\"http://localhost:3000/api/transactionTypes/\"+transaction_type_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteTransactionType(transaction_type_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/transactionTypes/'+transaction_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { TransmissionType } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class TransmissionTypeService {\n  private transmissionTypesUrl = '/api/transmissionTypes';\n  private putUrl = '/api/transmissionTypes';\n  selectedTransmissionTypeId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getTransmissionTypes(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transmissionTypes', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getTransmissionTypeById(transmission_type_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transmissionTypes/'+transmission_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchTransmissionTypes(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/transmissionTypes/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createTransmissionType(newTransmissionType:TransmissionType): Observable<any> {\n    const body = JSON.stringify(newTransmissionType);\n\n    return this.http.post('http://localhost:3000/api/transmissionTypes', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateTransmissionType(editTransmissionType:TransmissionType): Observable<any> {\n    const body = JSON.stringify(editTransmissionType);\n    const transmission_type_id = editTransmissionType.transmission_type_id;\n\n    return this.http.put(\"http://localhost:3000/api/transmissionTypes/\"+transmission_type_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteTransmissionType(transmission_type_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/transmissionTypes/'+transmission_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n  constructor() { }\n\n  static getValidatorErrorMessage(validatorName: string, validatorValue?: any) {\n    let config = {\n            'required': 'Required',\n            'minlength': `Minimum length ${validatorValue.requiredLength}`,\n            'maxlength': `Maximum length ${validatorValue.requiredLength}`,\n            'email': 'Invalid email address',\n            'invalidCreditCard': 'Is invalid credit card number',\n            'invalidEmailAddress': 'Invalid email address',\n            'invalidPassword': 'Invalid password. Password must be at least 6 characters long, and contain a number.',\n        };\n        return config[validatorName];\n    }\n\n  static creditCardValidator(control) {\n    // Visa, MasterCard, American Express, Diners Club, Discover, JCB\n    if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\n      return null;\n    }\n    else {\n      return { 'invalidCreditCard': true };\n    }\n  }\n\n  static emailValidator(control) {\n  // RFC 2822 compliant regex\n    if (control.value.match(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)) {\n      return null;\n    }\n    else {\n      return { 'invalidEmailAddress': true };\n    }\n  }\n\n  static passwordValidator(control) {\n  // {6,100}           - Assert password is between 6 and 100 characters\n  // (?=.*[0-9])       - Assert a string has at least one number\n    if (control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\n      return null;\n    }\n    else {\n      return { 'invalidPassword': true };\n    }\n  }\n  static formatCurrency(val){\n    //var val = control.value;\n    let x = val.replace( /,/g, \"\" );\n    var afterPoint = '';\n    if(x.indexOf('.') > 0)\n    afterPoint = x.substring(x.indexOf('.'),x.length);\n    x = Math.floor(x);\n    x=x.toString();\n    var lastThree = x.substring(x.length-3);\n    var otherNumbers = x.substring(0,x.length-3);\n    if(otherNumbers != '')\n    lastThree = ',' + lastThree;\n    var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree + afterPoint;\n    return res;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Variant } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class VariantService {\n  private variantsUrl = '/api/variants';\n  private putUrl = '/api/variants';\n  selectedVariantId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getVariants(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/variants', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getVariantById(variant_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/variants/'+variant_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchVariants(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/variants/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createVariant(newVariant:Variant): Observable<any> {\n    const body = JSON.stringify(newVariant);\n\n    return this.http.post('http://localhost:3000/api/variants', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateVariant(editVariant:Variant): Observable<any> {\n    const body = JSON.stringify(editVariant);\n    const variant_id = editVariant.variant_id;\n\n    return this.http.put(\"http://localhost:3000/api/variants/\"+variant_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteVariant(variant_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/variants/'+variant_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { VehicleType } from '../../data-model';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/catch';\nimport { map } from 'rxjs/operators';\nimport { RequestOptions } from '@angular/http';\nimport {Subject} from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nconst httpOptions = {\n  headers: { 'Content-Type': 'application/json' }\n};\n\n\n@Injectable()\nexport class VehicleTypeService {\n  private vehicleTypesUrl = '/api/vehicleTypes';\n  private putUrl = '/api/vehicleTypes';\n  selectedVehicleTypeId :Subject<any> = new Subject();\n  selectedMode :string = \"Create\";\n  refreshList:Subject<any> = new Subject();\n\n  constructor(private http:HttpClient) {\n  }\n\n  public getVehicleTypes(): Observable<any> {\n    return this.http.get('http://localhost:3000/api/vehicleTypes', {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public getVehicleTypeById(vehicle_type_id:number): Observable<any> {\n    return this.http.get('http://localhost:3000/api/vehicleTypes/'+vehicle_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public searchVehicleTypes(searchTerm): Observable<any> {\n    return this.http.get('http://localhost:3000/api/vehicleTypes/search/'+searchTerm, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public createVehicleType(newVehicleType:VehicleType): Observable<any> {\n    const body = JSON.stringify(newVehicleType);\n\n    return this.http.post('http://localhost:3000/api/vehicleTypes', body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public updateVehicleType(editVehicleType:VehicleType): Observable<any> {\n    const body = JSON.stringify(editVehicleType);\n    const vehicle_type_id = editVehicleType.vehicle_type_id;\n\n    return this.http.put(\"http://localhost:3000/api/vehicleTypes/\"+vehicle_type_id, body, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  public deleteVehicleType(vehicle_type_id:number): Observable<any> {\n    return this.http.delete('http://localhost:3000/api/vehicleTypes/'+vehicle_type_id, {headers: {'Content-Type': 'application/json; charset=utf-8'}})\n    .map(res => res);\n  }\n\n  extractData(res: Response) {\n    let body = res.json();\n    return body || {};\n  }\n\n  handleErrorObservable (error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.message || error);\n  }\n  private handleError (error: any) {\n    let errMsg = (error.message) ? error.message :\n    error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n    console.log(errMsg); // log to console instead\n  }\n}\n","module.exports = \"<p style=\\\"color:red; font-weight:bolder; font-size:14px\\\" *ngIf=\\\"errorMessage !== null\\\">{{errorMessage}}</p>\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ValidationService } from 'app/services/validation/validation.service';\n\n@Component({\n  selector: 'app-control-messages',\n  templateUrl: './control-messages.component.html',\n  styleUrls: ['./control-messages.component.scss']\n})\nexport class ControlMessagesComponent implements OnInit {\n    @Input() control: FormControl;\n    constructor() { }\n\n      ngOnInit(){}\n\n    get errorMessage() {\n      for (let propertyName in this.control.errors) {\n          //if (this.control.errors.hasOwnProperty(propertyName) && this.control.touched) {\n        if (this.control.errors.hasOwnProperty(propertyName)) {\n          return ValidationService.getValidatorErrorMessage(propertyName, this.control.errors[propertyName]);\n        }\n      }\n      return null;\n    }\n  }\n","module.exports = \"\\n<button type=\\\"button\\\" class=\\\"btn btn-danger waves-light btn-md\\\" (click)=\\\"style.show()\\\" mdbWavesEffect><i class=\\\"fa fa-trash\\\"></i></button>\\n\\n<div mdbModal #style=\\\"mdb-modal\\\" class=\\\"modal fade\\\" id=\\\"centralModalSuccess\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-notify modal-danger\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <p class=\\\"heading lead capitalize\\\">{{mode}} {{module}}</p>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" (click)=\\\"style.hide()\\\">\\n                    <span id=\\\"linkid\\\" aria-hidden=\\\"true\\\" class=\\\"white-text\\\">×</span>\\n                </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"text-center\\\">\\n                    <i class=\\\"fa fa-check fa-4x mb-3 animated rotateIn\\\"></i>\\n                    <p>Are you sure you want to {{mode}} {{module}} {{name}}?</p>\\n                </div>\\n            </div>\\n            <div class=\\\"modal-footer justify-content-center\\\">\\n                <a type=\\\"button\\\" class=\\\"btn btn-danger waves-light\\\" mdbWavesEffect (click)=\\\"delete()\\\">Yes</a>\\n                <a type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"style.hide()\\\" mdbWavesEffect>No, thanks</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit,ViewChild, Input, Output,EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-modal',\n  templateUrl: './simple-modal.component.html',\n  styleUrls: ['./simple-modal.component.scss']\n})\nexport class SimpleModalComponent implements OnInit {\n  // @ViewChild('content') public contentModal;\n  @Input() module :string = \"\";\n  @Input() mode :string = \"\";\n  @Input() name :string = \"\";\n  @Output() isDelete = new EventEmitter();\n\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n  delete(){\n      this.isDelete.emit(true);\n      document.getElementById('linkid').click();\n  }\n}\n","module.exports = \"<div class=\\\"row\\\" style=\\\"margin-bottom:25px\\\">\\n   <div class=\\\"col-10\\\"><input type=\\\"text\\\" id=\\\"Form-email1\\\" class=\\\"form-control\\\" [formControl]=\\\"searchTerm\\\"></div>\\n   <div class=\\\"col-2\\\">  <button class=\\\"btn-custom col-12 text-center pointer\\\" type=\\\"button\\\" (click)=create()>\\n     <i class=\\\"fa fa-plus nm-left3\\\"></i>\\n   </button></div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, EventEmitter, Output  } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators,FormControl } from '@angular/forms';\nimport { Observable } from \"rxjs\";\nimport { Http, Response } from \"@angular/http\";\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport \"rxjs/add/operator/map\";\nimport \"rxjs/add/operator/debounceTime\";\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n  searchTerm = new FormControl('');\n  @Output() searchTermValueChanged = new EventEmitter();\n  @Output() isCreate = new EventEmitter();\n\n  constructor() {}\n\n  valueChanged() {\n    this.searchTerm.valueChanges\n    //  .debounceTime(400)\n  //    .distinctUntilChanged()\n      .subscribe(val =>{\n      this.searchTermValueChanged.emit(val);\n    });\n  }\n\n  create(){\n    this.isCreate.emit(true);\n  }\n\n  ngOnInit() {\n    this.valueChanged();\n      // .debounceTime(400)\n      // .distinctUntilChanged()\n      // .switchMap( value => this.makeService.searchMakes(value))\n      // .subscribe(res => {\n      //   console.log(\"ress in search comp \",res);\n      // });\n    }\n  }\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n// import {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n// import {MatButtonModule, MatCheckboxModule} from '@angular/material';\n import {MatTabsModule} from '@angular/material/tabs';\n\nimport { TitleComponent } from './title/title.component';\nimport { SearchComponent } from './search/search.component';\nimport { ControlMessagesComponent } from './control-messages/control-messages.component';\nimport { SimpleModalComponent } from './modals/simple-modal/simple-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    // DlDateTimePickerDateModule,\n        MDBBootstrapModule.forRoot(),\n        // BrowserAnimationsModule,\n        // MatButtonModule,\n        // MatCheckboxModule,\n         MatTabsModule,\n\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MDBBootstrapModule,\n     MatTabsModule,\n    // DlDateTimePickerDateModule,\n    TitleComponent,\n    SearchComponent,\n    SimpleModalComponent,\n    ControlMessagesComponent,\n  ],\n  declarations: [\n    TitleComponent,\n    SearchComponent,\n    SimpleModalComponent,\n    ControlMessagesComponent\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ],\n})\nexport class SharedModule { }\n","module.exports = \"<div class=\\\"col-12 title\\\">\\n  <h5>{{title}}</h5>\\n</div>\\n\"","module.exports = \".title {\\n  color: #43464B;\\n  padding-top: 5px;\\n  padding-bottom: 5px;\\n  margin: 25px 0px 25px 0px;\\n  border-bottom: 1px solid #E5E7E7;\\n  font-weight: bold; }\\n\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent implements OnInit {\n  @Input() title :string = \" \";\n  constructor() { }\n\n  ngOnInit() {\n  \n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}