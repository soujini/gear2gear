{"version":3,"sources":["webpack:///./src/app/components/vehicle-type/vehicle-type-form/vehicle-type-form.component.html","webpack:///./src/app/components/vehicle-type/vehicle-type-form/vehicle-type-form.component.scss","webpack:///./src/app/components/vehicle-type/vehicle-type-form/vehicle-type-form.component.ts","webpack:///./src/app/components/vehicle-type/vehicle-type-list/vehicle-type-list.component.html","webpack:///./src/app/components/vehicle-type/vehicle-type-list/vehicle-type-list.component.scss","webpack:///./src/app/components/vehicle-type/vehicle-type-list/vehicle-type-list.component.ts","webpack:///./src/app/components/vehicle-type/vehicle-type-routing.module.ts","webpack:///./src/app/components/vehicle-type/vehicle-type.component.html","webpack:///./src/app/components/vehicle-type/vehicle-type.component.scss","webpack:///./src/app/components/vehicle-type/vehicle-type.component.ts"],"names":[],"mappings":"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","file":"components-vehicle-type-vehicle-type-routing-module.js","sourcesContent":["module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"vehicleTypeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputVehicleTypeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputVehicleTypeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"vehicleTypeForm.controls.name.touched && vehicleTypeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"vehicleTypeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"vehicleTypeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"vehicleTypeForm.controls.name.value\\\" (isDelete)=\\\"deleteVehicleType($event)\\\"></app-simple-modal>\\n\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { VehicleType } from 'app/data-model';\nimport { VehicleTypeService } from 'app/services/vehicle-type/vehicle-type.service';\n\n@Component({\n  selector: 'app-vehicleType-form',\n  templateUrl: './vehicle-type-form.component.html',\n  styleUrls: ['./vehicle-type-form.component.scss']\n})\nexport class VehicleTypeFormComponent implements OnInit {\n  title : string = \"Create Vehicle Type\";\n  module :string=\"vehicle type\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  vehicleTypeForm: FormGroup;\n  selectedVehicleType_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private vehicleTypeService:VehicleTypeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.vehicleTypeForm = this.fb.group({\n      vehicle_type_id: [''],\n      name: ['', [Validators.required,Validators.maxLength(50)]],\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.vehicleTypeForm.valid) {\n      if(this.vehicleTypeService.selectedMode == 'Create'){\n        this.createVehicleType();\n      }\n      else if (this.vehicleTypeService.selectedMode == 'Edit'){\n        this.updateVehicleType();\n      }\n    }\n  }\n\n  getVehicleTypeById(vehicleType_id:number){\n    this.vehicleTypeService.getVehicleTypeById(vehicleType_id)\n    .subscribe(\n        res => {\n        this.vehicleTypeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createVehicleType(){\n    this.vehicleTypeService.createVehicleType(this.vehicleTypeForm.value)\n    .subscribe(\n      res => {\n        this.vehicleTypeService.refreshList.next(true);\n        this.vehicleTypeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateVehicleType(){\n    this.vehicleTypeService.updateVehicleType(this.vehicleTypeForm.value)\n    .subscribe(\n      res => {\n          this.vehicleTypeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteVehicleType(event){\n    if(this.selectedVehicleType_Id)\n    {\n      this.vehicleTypeService.deleteVehicleType(this.selectedVehicleType_Id).subscribe(\n        res => {\n          this.vehicleTypeService.refreshList.next(true);\n          this.router.navigate(['/vehicleType/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.vehicleTypeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.vehicleTypeService.selectedVehicleTypeId\n    .subscribe(\n      res => {\n        this.selectedVehicleType_Id = res;\n        if(this.vehicleTypeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Vehicle Type\";\n          this.mode = \"delete\";\n          this.getVehicleTypeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchVehicleTypes($event)\\\" (isCreate)=\\\"createVehicleType('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let vehicleType of results$ | async' [ngClass]=\\\"{'is-active': selectedVehicleTypeId == vehicleType.vehicle_type_id}\\\">\\n          <th scope=\\\"row\\\">{{vehicleType.vehicle_type_id}}</th>\\n          <td>{{vehicleType.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectVehicleType(vehicleType.vehicle_type_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { VehicleType } from 'app/data-model';\nimport { VehicleTypeService } from 'app/services/vehicle-type/vehicle-type.service';\n\n@Component({\n  selector: 'app-vehicleType-list',\n  templateUrl: './vehicle-type-list.component.html',\n  styleUrls: ['./vehicle-type-list.component.scss']\n})\nexport class VehicleTypeListComponent implements OnInit {\n  @Input()\n  results$: Observable<VehicleType>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  selectedVehicleTypeId:number;\n\n  constructor(private vehicleTypeService:VehicleTypeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/vehicleType/add']);\n  }\n\n  searchVehicleTypes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createVehicleType(mode:any){\n    this.vehicleTypeService.selectedMode = mode;\n    this.router.navigate(['/vehicleType/add']);\n  }\n\n  //On Click of the Edit Button\n  selectVehicleType(vehicleType_id:number, mode:any){\n    this.selectedVehicleTypeId=vehicleType_id;\n    this.vehicleTypeService.selectedMode = mode;\n    this.router.navigate(['/vehicleType/edit']);\n    setTimeout(() => {\n      this.vehicleTypeService.selectedVehicleTypeId.next(vehicleType_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VehicleTypeComponent} from './vehicle-type.component';\nimport { VehicleTypeListComponent} from './vehicle-type-list/vehicle-type-list.component';\nimport { VehicleTypeFormComponent} from './vehicle-type-form/vehicle-type-form.component';\n\nconst vehicleTypeRoutes: Routes = [\n  {\n    path: 'vehicleType',\n    component: VehicleTypeComponent,\n    children: [\n        {path: 'list',component: VehicleTypeListComponent},\n        {path: 'add', component: VehicleTypeFormComponent},\n        {path: 'edit', component: VehicleTypeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(vehicleTypeRoutes)],\n  exports: [RouterModule]\n})\n export class VehicleTypeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-vehicleType-list (searchTerm)=\\\"searchVehicleTypes($event)\\\" [results$]=\\\"vehicleTypes$\\\"></app-vehicleType-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { VehicleType } from 'app/data-model';\nimport { VehicleTypeService } from 'app/services/vehicle-type/vehicle-type.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './vehicle-type.component.html',\n  styleUrls: ['./vehicle-type.component.scss']\n})\nexport class VehicleTypeComponent implements OnInit {\n  title : string = \"Vehicle Type\";\n  selectedVehicleType : VehicleType;\n\n  vehicleTypes$: Observable<VehicleType>;\n\n  constructor(private fb: FormBuilder, private vehicleTypeService:VehicleTypeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getVehicleTypes();\n    this.vehicleTypeService.refreshList.subscribe(\n      res=>{\n          this.getVehicleTypes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getVehicleTypes()  {\n    this.vehicleTypes$ = this.vehicleTypeService.getVehicleTypes();\n  }\n\n  searchVehicleTypes(searchTerm){\n    if(searchTerm){\n      this.vehicleTypes$ = this.vehicleTypeService.searchVehicleTypes(searchTerm);\n    }\n    else{\n      this.vehicleTypes$ = new EmptyObservable();\n    }\n  }\n\n}\n"],"sourceRoot":""}