{"version":3,"sources":["webpack:///./src/app/components/make/make-form/make-form.component.html","webpack:///./src/app/components/make/make-form/make-form.component.scss","webpack:///./src/app/components/make/make-form/make-form.component.ts","webpack:///./src/app/components/make/make-list/make-list.component.html","webpack:///./src/app/components/make/make-list/make-list.component.scss","webpack:///./src/app/components/make/make-list/make-list.component.ts","webpack:///./src/app/components/make/make-routing.module.ts","webpack:///./src/app/components/make/make.component.html","webpack:///./src/app/components/make/make.component.scss","webpack:///./src/app/components/make/make.component.ts"],"names":[],"mappings":"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","file":"components-make-make-routing-module.js","sourcesContent":["module.exports = \"<section class=\\\"container-fluid section\\\">\\n  <div class=\\\"col-12 #f5f5f5 grey lighten-4\\\">\\n    <header class=\\\"header row\\\">\\n      <div class=\\\"col-12\\\">\\n        <app-title [title]=title></app-title>\\n      </div>\\n    </header>\\n\\n    <div class=\\\"col-12\\\">\\n      <form [formGroup]=\\\"makeForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputMakeName\\\" class=\\\"col-sm-2 col-form-label\\\">Name</label>\\n          <div>\\n            <div class=\\\"md-form mt-0\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control capitalize\\\" id=\\\"inputMakeName\\\" formControlName=\\\"name\\\">\\n              <!-- <p style=\\\"color:red\\\" *ngIf=\\\"makeForm.controls.name.touched && makeForm.controls.name.errors.required\\\">Required</p> -->\\n              <app-control-messages [control]=\\\"makeForm.controls.name\\\"></app-control-messages>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"text-right\\\">\\n            <!--  [disabled]=\\\"makeForm.invalid\\\"-->\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-custom btn-md\\\" >\\n              <i class=\\\"fa fa-save\\\"></i>\\n            </button>\\n            <app-simple-modal [module]=\\\"module\\\" [mode]=\\\"mode\\\" [name]=\\\"makeForm.controls.name.value\\\" (isDelete)=\\\"deleteMake($event)\\\"></app-simple-modal>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Make } from 'app/data-model';\nimport { MakeService } from 'app/services/make/make.service';\n\n@Component({\n  selector: 'app-make-form',\n  templateUrl: './make-form.component.html',\n  styleUrls: ['./make-form.component.scss']\n})\nexport class MakeFormComponent implements OnInit {\n  title : string = \"Create Make\";\n  module :string=\"make\";\n  mode :string=\"discard\";\n  message:string=\"\";\n  makeForm: FormGroup;\n  selectedMake_Id: any;\n  submitted = false;\n\n  constructor(private fb: FormBuilder, private makeService:MakeService, private router:Router, private route:ActivatedRoute) {\n  }\n\n\n  createForm() {\n    this.makeForm = this.fb.group({\n      make_id: [''],\n      // name: ['', [Validators.required,Validators.maxLength(50)]],\n      name: ['', [Validators.required]],\n\n    });\n  }\n\n  onSubmit(){\n    this.submitted = true;\n    if (this.makeForm.valid) {\n      if(this.makeService.selectedMode == 'Create'){\n        this.createMake();\n      }\n      else if (this.makeService.selectedMode == 'Edit'){\n        this.updateMake();\n      }\n    }\n  }\n\n  getMakeById(make_id:number){\n    this.makeService.getMakeById(make_id)\n    .subscribe(\n        res => {\n        this.makeForm.patchValue(res[0]);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n  }\n\n  createMake(){\n    this.makeService.createMake(this.makeForm.value)\n    .subscribe(\n      res => {\n        this.makeService.refreshList.next(true);\n        this.makeForm.reset();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  updateMake(){\n    this.makeService.updateMake(this.makeForm.value)\n    .subscribe(\n      res => {\n          this.makeService.refreshList.next(true);\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  deleteMake(event){\n    if(this.selectedMake_Id)\n    {\n      this.makeService.deleteMake(this.selectedMake_Id).subscribe(\n        res => {\n          this.makeService.refreshList.next(true);\n          this.router.navigate(['/make/add']);\n        },\n        err => {\n          console.log(err);\n        }\n      );\n    }\n    else{\n      this.makeForm.reset();\n    }\n  }\n\n  ngOnInit() {\n    this.createForm();\n\n    this.makeService.selectedMakeId\n    .subscribe(\n      res => {\n        this.selectedMake_Id = res;\n        if(this.makeService.selectedMode == \"Edit\"){\n          this.title = \"Edit Make\";\n          this.mode = \"delete\";\n          this.getMakeById(res);\n        }\n      },\n      err => {\n\n      }\n    );\n  }\n\n}\n","module.exports = \"<section class=\\\"container-fluid section-list\\\">\\n  <div>\\n    <app-search (searchTermValueChanged)=\\\"searchMakes($event)\\\" (isCreate)=\\\"createMake('Create')\\\"></app-search>\\n  </div>\\n  <div>\\n    <table class=\\\"table\\\">\\n      <thead class=\\\"#f5f5f5 grey lighten-4\\\">\\n        <tr>\\n          <th>#</th>\\n          <th>Name</th>\\n          <th>Edit</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor='let make of results$ | async' [ngClass]=\\\"{'is-active': selectedMakeId == make.make_id}\\\">\\n          <th scope=\\\"row\\\">{{make.make_id}}</th>\\n          <td>{{make.name}}</td>\\n          <td class=\\\"pointer\\\" (click)=\\\"selectMake(make.make_id, 'Edit')\\\">\\n              <i class=\\\"fa fa-pencil\\\"></i>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router,ActivatedRoute } from '@angular/router';\n\nimport { Make } from 'app/data-model';\nimport { MakeService } from 'app/services/make/make.service';\n\n@Component({\n  selector: 'app-make-list',\n  templateUrl: './make-list.component.html',\n  styleUrls: ['./make-list.component.scss']\n})\nexport class MakeListComponent implements OnInit {\n  @Input()\n  results$: Observable<Make>;\n\n  @Output()\n  searchTerm = new EventEmitter();\n\n  selectedMakeId:number;\n\n  constructor(private makeService:MakeService, private router:Router, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.router.navigate(['/make/add']);\n  }\n\n  searchMakes(search: string){\n    this.searchTerm.emit(search);\n  }\n\n  //On Click of the Add Button\n  createMake(mode:any){\n    this.makeService.selectedMode = mode;\n    this.router.navigate(['/make/add']);\n  }\n\n  //On Click of the Edit Button\n  selectMake(make_id:number, mode:any){\n    this.selectedMakeId=make_id;\n    this.makeService.selectedMode = mode;\n    this.router.navigate(['/make/edit']);\n    setTimeout(() => {\n\n      this.makeService.selectedMakeId.next(make_id);\n    }, 100);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MakeComponent} from './make.component';\nimport { MakeListComponent} from './make-list/make-list.component';\nimport { MakeFormComponent} from './make-form/make-form.component';\n\nconst makeRoutes: Routes = [\n  {\n    path: 'make',\n    component: MakeComponent,\n    children: [\n        {path: 'list',component: MakeListComponent},\n        {path: 'add', component: MakeFormComponent},\n        {path: 'edit', component: MakeFormComponent}\n      ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(makeRoutes)],\n  exports: [RouterModule]\n})\n export class MakeRoutingModule { }\n","module.exports = \"<header class=\\\"header\\\">\\n  <div class=\\\"col-12\\\">\\n    <app-title [title]=title></app-title>\\n  </div>\\n</header>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n  <app-make-list (searchTerm)=\\\"searchMakes($event)\\\" [results$]=\\\"makes$\\\"></app-make-list>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { EmptyObservable } from 'rxjs/observable/EmptyObservable';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Make } from 'app/data-model';\nimport { MakeService } from 'app/services/make/make.service';\n\n@Component({\n  selector: 'app-make',\n  templateUrl: './make.component.html',\n  styleUrls: ['./make.component.scss']\n})\nexport class MakeComponent implements OnInit {\n  title : string = \"Make\";\n  selectedMake : Make;\n\n  makes$: Observable<Make>;\n\n  constructor(private fb: FormBuilder, private makeService:MakeService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.getMakes();\n    this.makeService.refreshList.subscribe(\n      res=>{\n          this.getMakes();\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  getMakes()  {\n    this.makes$ = this.makeService.getMakes();\n  }\n\n  searchMakes(searchTerm){\n    if(searchTerm){\n      this.makes$ = this.makeService.searchMakes(searchTerm);\n    }\n    else{\n      this.makes$ = new EmptyObservable();\n    }\n  }\n\n}\n"],"sourceRoot":""}